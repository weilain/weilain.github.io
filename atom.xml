<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hermoso</title>
  
  
  <link href="https://imszz.com/atom.xml" rel="self"/>
  
  <link href="https://imszz.com/"/>
  <updated>2021-03-30T06:01:25.000Z</updated>
  <id>https://imszz.com/</id>
  
  <author>
    <name>Hermoso</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>K8S使用Statefulset zookeeper</title>
    <link href="https://imszz.com/p/b8e5c788/"/>
    <id>https://imszz.com/p/b8e5c788/</id>
    <published>2021-03-30T06:00:25.000Z</published>
    <updated>2021-03-30T06:01:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建存储卷"><a href="#创建存储卷" class="headerlink" title="创建存储卷"></a>创建存储卷</h2><p>Zookeeper集群需要用到存储，这里需要准备持久卷（PersistentVolume，简称PV），我这里以yaml文件创建4个PV，供待会儿4个Zookeeper节点创建出来的持久卷声明</p><p>创建一个pv；{persistent-volume.yaml}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">kind: PersistentVolume</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: k8s-pv-zk1</span><br><span class="line">  annotations:</span><br><span class="line">    volume.beta.kubernetes.io&#x2F;storage-class: &quot;anything&quot;</span><br><span class="line">  labels:</span><br><span class="line">    type: local</span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 3Gi</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  hostPath:</span><br><span class="line">    path: &quot;&#x2F;var&#x2F;lib&#x2F;zookeeper&quot;</span><br><span class="line">  persistentVolumeReclaimPolicy: Retain</span><br><span class="line">---</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: k8s-pv-zk2</span><br><span class="line">  annotations:</span><br><span class="line">    volume.beta.kubernetes.io&#x2F;storage-class: &quot;anything&quot;</span><br><span class="line">  labels:</span><br><span class="line">    type: local</span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 3Gi</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  hostPath:</span><br><span class="line">    path: &quot;&#x2F;var&#x2F;lib&#x2F;zookeeper&quot;</span><br><span class="line">  persistentVolumeReclaimPolicy: Retain</span><br><span class="line">---</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: k8s-pv-zk3</span><br><span class="line">  annotations:</span><br><span class="line">    volume.beta.kubernetes.io&#x2F;storage-class: &quot;anything&quot;</span><br><span class="line">  labels:</span><br><span class="line">    type: local</span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 3Gi</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  hostPath:</span><br><span class="line">    path: &quot;&#x2F;var&#x2F;lib&#x2F;zookeeper&quot;</span><br><span class="line">  persistentVolumeReclaimPolicy: Retain</span><br><span class="line">---</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: k8s-pv-zk4</span><br><span class="line">  annotations:</span><br><span class="line">    volume.beta.kubernetes.io&#x2F;storage-class: &quot;anything&quot;</span><br><span class="line">  labels:</span><br><span class="line">    type: local</span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 3Gi</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  hostPath:</span><br><span class="line">    path: &quot;&#x2F;var&#x2F;lib&#x2F;zookeeper&quot;</span><br><span class="line">  persistentVolumeReclaimPolicy: Retain</span><br></pre></td></tr></table></figure><h3 id="部署及存储卷状态查询"><a href="#部署及存储卷状态查询" class="headerlink" title="部署及存储卷状态查询"></a>部署及存储卷状态查询</h3><p>这里发现pv和pvc还没有绑定状态是Available</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f persistent-volume.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pv  -n zookeeper</span><br></pre></td></tr></table></figure><h2 id="创建一个-ZooKeeper-Ensemble"><a href="#创建一个-ZooKeeper-Ensemble" class="headerlink" title="创建一个 ZooKeeper Ensemble"></a>创建一个 ZooKeeper Ensemble</h2><p>下面的清单包含一个 无头服务， 一个 Service， 一个 PodDisruptionBudget， 和一个 StatefulSet。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: zk-hs</span><br><span class="line">  labels:</span><br><span class="line">    app: zk</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 2888</span><br><span class="line">    name: server</span><br><span class="line">  - port: 3888</span><br><span class="line">    name: leader-election</span><br><span class="line">  clusterIP: None</span><br><span class="line">  selector:</span><br><span class="line">    app: zk</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: zk-cs</span><br><span class="line">  labels:</span><br><span class="line">    app: zk</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 2181</span><br><span class="line">    name: client</span><br><span class="line">  selector:</span><br><span class="line">    app: zk</span><br><span class="line">---</span><br><span class="line">apiVersion: policy&#x2F;v1beta1</span><br><span class="line">kind: PodDisruptionBudget</span><br><span class="line">metadata:</span><br><span class="line">  name: zk-pdb</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: zk</span><br><span class="line">  maxUnavailable: 1</span><br><span class="line">---</span><br><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: StatefulSet</span><br><span class="line">metadata:</span><br><span class="line">  name: zk</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: zk</span><br><span class="line">  serviceName: zk-hs</span><br><span class="line">  replicas: 4</span><br><span class="line">  updateStrategy:</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">  podManagementPolicy: Parallel</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: zk</span><br><span class="line">    spec:</span><br><span class="line">      affinity:</span><br><span class="line">        podAntiAffinity:</span><br><span class="line">          requiredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">            - labelSelector:</span><br><span class="line">                matchExpressions:</span><br><span class="line">                  - key: &quot;app&quot;</span><br><span class="line">                    operator: In</span><br><span class="line">                    values:</span><br><span class="line">                    - zk</span><br><span class="line">              topologyKey: &quot;kubernetes.io&#x2F;hostname&quot;</span><br><span class="line">      containers:</span><br><span class="line">      - name: kubernetes-zookeeper</span><br><span class="line">        imagePullPolicy: Always</span><br><span class="line">        image: &quot;guglecontainers&#x2F;kubernetes-zookeeper:1.0-3.4.10&quot;</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            memory: &quot;1Gi&quot;</span><br><span class="line">            cpu: &quot;0.5&quot;</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 2181</span><br><span class="line">          name: client</span><br><span class="line">        - containerPort: 2888</span><br><span class="line">          name: server</span><br><span class="line">        - containerPort: 3888</span><br><span class="line">          name: leader-election</span><br><span class="line">        command:</span><br><span class="line">        - sh</span><br><span class="line">        - -c</span><br><span class="line">        - &quot;start-zookeeper \</span><br><span class="line">          --servers&#x3D;4 \</span><br><span class="line">          --data_dir&#x3D;&#x2F;var&#x2F;lib&#x2F;zookeeper&#x2F;data \</span><br><span class="line">          --data_log_dir&#x3D;&#x2F;var&#x2F;lib&#x2F;zookeeper&#x2F;data&#x2F;log \</span><br><span class="line">          --conf_dir&#x3D;&#x2F;opt&#x2F;zookeeper&#x2F;conf \</span><br><span class="line">          --client_port&#x3D;2181 \</span><br><span class="line">          --election_port&#x3D;3888 \</span><br><span class="line">          --server_port&#x3D;2888 \</span><br><span class="line">          --tick_time&#x3D;2000 \</span><br><span class="line">          --init_limit&#x3D;10 \</span><br><span class="line">          --sync_limit&#x3D;5 \</span><br><span class="line">          --heap&#x3D;512M \</span><br><span class="line">          --max_client_cnxns&#x3D;60 \</span><br><span class="line">          --snap_retain_count&#x3D;4 \</span><br><span class="line">          --purge_interval&#x3D;12 \</span><br><span class="line">          --max_session_timeout&#x3D;40000 \</span><br><span class="line">          --min_session_timeout&#x3D;4000 \</span><br><span class="line">          --log_level&#x3D;INFO&quot;</span><br><span class="line">        readinessProbe:</span><br><span class="line">          exec:</span><br><span class="line">            command:</span><br><span class="line">            - sh</span><br><span class="line">            - -c</span><br><span class="line">            - &quot;zookeeper-ready 2181&quot;</span><br><span class="line">          initialDelaySeconds: 10</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">        livenessProbe:</span><br><span class="line">          exec:</span><br><span class="line">            command:</span><br><span class="line">            - sh</span><br><span class="line">            - -c</span><br><span class="line">            - &quot;zookeeper-ready 2181&quot;</span><br><span class="line">          initialDelaySeconds: 10</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: datadir</span><br><span class="line">          mountPath: &#x2F;var&#x2F;lib&#x2F;zookeeper</span><br><span class="line">      securityContext:</span><br><span class="line">        runAsUser: 1000</span><br><span class="line">        fsGroup: 1000</span><br><span class="line">  volumeClaimTemplates:</span><br><span class="line">  - metadata:</span><br><span class="line">      name: datadir</span><br><span class="line">      annotations:</span><br><span class="line">        volume.beta.kubernetes.io&#x2F;storage-class: &quot;anything&quot;</span><br><span class="line">    spec:</span><br><span class="line">      accessModes: [ &quot;ReadWriteOnce&quot; ]</span><br><span class="line">      resources:</span><br><span class="line">        requests:</span><br><span class="line">          storage: 3Gi</span><br></pre></td></tr></table></figure><h3 id="新版本创建卷及使用"><a href="#新版本创建卷及使用" class="headerlink" title="新版本创建卷及使用"></a>新版本创建卷及使用</h3><h4 id="创建卷"><a href="#创建卷" class="headerlink" title="创建卷"></a>创建卷</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kind: PersistentVolume</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: k8s-pv-zk1</span><br><span class="line">  labels:</span><br><span class="line">    type: local</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: disk</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 3Gi</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  hostPath:</span><br><span class="line">    path: &quot;&#x2F;var&#x2F;lib&#x2F;zookeeper&quot;</span><br><span class="line">  persistentVolumeReclaimPolicy: Retain</span><br></pre></td></tr></table></figure><h4 id="存储声明"><a href="#存储声明" class="headerlink" title="存储声明"></a>存储声明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: datadir</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: disk</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 3Gi</span><br></pre></td></tr></table></figure><h4 id="pod引用"><a href="#pod引用" class="headerlink" title="pod引用"></a>pod引用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">          ····</span><br><span class="line">    volumeMounts:</span><br><span class="line">      - name: datadir</span><br><span class="line">        mountPath: &#x2F;var&#x2F;lib&#x2F;zookeeper</span><br><span class="line">volumeClaimTemplates:</span><br><span class="line">- metadata:</span><br><span class="line">    name: datadir</span><br><span class="line">  spec:</span><br><span class="line">    storageClassName: disk</span><br><span class="line">    accessModes: [ &quot;ReadWriteOnce&quot; ]</span><br><span class="line">    resources:</span><br><span class="line">      requests:</span><br><span class="line">        storage: 3Gi</span><br></pre></td></tr></table></figure><blockquote><p>注意：如果是使用云服务商比如阿里云，要注意购买云盘要与node节点使用区一致</p></blockquote><h2 id="开始创建"><a href="#开始创建" class="headerlink" title="开始创建"></a>开始创建</h2><p>创建了 zk-hs 无头服务、zk-cs 服务、zk-pdb PodDisruptionBudget 和 zk StatefulSet。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f zookeeper.yml</span><br><span class="line"></span><br><span class="line">service&#x2F;zk-hs created</span><br><span class="line">service&#x2F;zk-cs created</span><br><span class="line">poddisruptionbudget.policy&#x2F;zk-pdb created</span><br><span class="line">statefulset.apps&#x2F;zk created</span><br></pre></td></tr></table></figure><h3 id="状态查询"><a href="#状态查询" class="headerlink" title="状态查询"></a>状态查询</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl get poddisruptionbudgets -n zookeeper</span><br><span class="line">kubectl get pods -n zookeeper</span><br><span class="line">kubectl get pods -n zookeeper -w -l app&#x3D;zk</span><br></pre></td></tr></table></figure><h3 id="如果发现没有启动pod"><a href="#如果发现没有启动pod" class="headerlink" title="如果发现没有启动pod"></a>如果发现没有启动pod</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl logs zk-0 -n zookeeper</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/zookeeper5.jpg" alt="github--lena"></p><p>没有权限没有办法创建目录<br>没有zookeeper用户<br>创建一下并给个权限</p><h3 id="创建用户以及授权"><a href="#创建用户以及授权" class="headerlink" title="创建用户以及授权"></a>创建用户以及授权</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">useradd -s &#x2F;sbin&#x2F;nologin zookeeper</span><br><span class="line"></span><br><span class="line">chown zookeeper.zookeeper &#x2F;var&#x2F;lib&#x2F;zookeeper&#x2F;</span><br></pre></td></tr></table></figure><blockquote><p>【注意】{每个安装zk的机器都要执行创建用户以及授权}</p></blockquote><p>如果你是k8s三节点，请注意：</p><p>出于安全考虑Pod不会被调度到Master Node上，也就是说Master Node不参与工作负载</p><p>如果希望master进行调度<br>使用污点（taints）与容忍（tolerations）进行调整</p><h2 id="促成-Leader-选举"><a href="#促成-Leader-选举" class="headerlink" title="促成 Leader 选举"></a>促成 Leader 选举</h2><p>获取 zk StatefulSet 中 Pods 的主机名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in 0 1 2; do kubectl exec --namespace zookeeper zk-$i -- hostname; done</span><br></pre></td></tr></table></figure><p>看一下效果是不是集群模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in 0 1 2; do kubectl exec --namespace zookeeper  zk-$i zkServer.sh status; done</span><br></pre></td></tr></table></figure><p>检查每个服务器的 myid 文件的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in 0 1 2; do echo &quot;myid zk-$i&quot;;kubectl exec --namespace zookeeper  zk-$i -- cat &#x2F;var&#x2F;lib&#x2F;zookeeper&#x2F;data&#x2F;myid; done</span><br></pre></td></tr></table></figure><p>获取 zk StatefulSet 中每个 Pod 的全限定域名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in 0 1 2; do kubectl exec --namespace zookeeper zk-$i -- hostname -f; done</span><br></pre></td></tr></table></figure><p>Pod 中查看 zoo.cfg 文件的内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec --namespace zookeeper zk-0 -- cat &#x2F;opt&#x2F;zookeeper&#x2F;conf&#x2F;zoo.cfg</span><br></pre></td></tr></table></figure><h2 id="Ensemble-健康检查"><a href="#Ensemble-健康检查" class="headerlink" title="Ensemble 健康检查"></a>Ensemble 健康检查</h2><p>最基本的健康检查是向一个 ZooKeeper 服务器写入一些数据，然后从 另一个服务器读取这些数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec --namespace zookeeper zk-0 zkCli.sh create &#x2F;hello world</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WATCHER::</span><br><span class="line"></span><br><span class="line">WatchedEvent state:SyncConnected type:None path:null</span><br><span class="line">Created &#x2F;hello</span><br></pre></td></tr></table></figure><p>从 zk-1 Pod 获取数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec  --namespace zookeeper  zk-1 zkCli.sh get &#x2F;hello</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WATCHER::</span><br><span class="line"></span><br><span class="line">WatchedEvent state:SyncConnected type:None path:null</span><br><span class="line">world</span><br><span class="line">cZxid &#x3D; 0x100000014</span><br><span class="line">ctime &#x3D; Thu Mar 18 03:21:38 UTC 2021</span><br><span class="line">mZxid &#x3D; 0x100000014</span><br><span class="line">mtime &#x3D; Thu Mar 18 03:21:38 UTC 2021</span><br><span class="line">pZxid &#x3D; 0x100000014</span><br><span class="line">cversion &#x3D; 0</span><br><span class="line">dataVersion &#x3D; 0</span><br><span class="line">aclVersion &#x3D; 0</span><br><span class="line">ephemeralOwner &#x3D; 0x0</span><br><span class="line">dataLength &#x3D; 5</span><br><span class="line">numChildren &#x3D; 0</span><br></pre></td></tr></table></figure><p>如果出现<code>myid</code>重复可以进入node内<code>/var/lib/zookeeper/data/</code> 下 修改<code>id</code>参数,然后重新部署</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;创建存储卷&quot;&gt;&lt;a href=&quot;#创建存储卷&quot; class=&quot;headerlink&quot; title=&quot;创建存储卷&quot;&gt;&lt;/a&gt;创建存储卷&lt;/h2&gt;&lt;p&gt;Zookeeper集群需要用到存储，这里需要准备持久卷（PersistentVolume，简称PV），我这里以yam</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://imszz.com/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://imszz.com/tags/Kubernetes/"/>
    
    <category term="zookeeper" scheme="https://imszz.com/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>K8S基于ingress-nginx实现灰度发布</title>
    <link href="https://imszz.com/p/a6d2532/"/>
    <id>https://imszz.com/p/a6d2532/</id>
    <published>2021-03-30T06:00:25.000Z</published>
    <updated>2021-03-30T07:41:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="注解说明"><a href="#注解说明" class="headerlink" title="注解说明"></a>注解说明</h2><p>通过给 Ingress 资源指定 Nginx Ingress 所支持的 annotation 可实现金丝雀发布。需给服务创建2个 Ingress，其中1个常规 Ingress，另1个为<code>nginx.ingress.kubernetes.io/canary: &quot;true&quot;</code>· 固定的 annotation 的 Ingress，称为 Canary Ingress。Canary Ingress 一般代表新版本的服务，结合另外针对流量切分策略的 annotation 一起配置即可实现多种场景的金丝雀发布。以下为相关 annotation 的详细介绍：</p><ul><li><code>nginx.ingress.kubernetes.io/canary-by-header</code><br>表示如果请求头中包含指定的 header 名称，并且值为 always，就将该请求转发给该 Ingress 定义的对应后端服务。如果值为 never 则不转发，可以用于回滚到旧版。如果为其他值则忽略该 annotation。</li><li><code>nginx.ingress.kubernetes.io/canary-by-header-value</code><br>该 annotation 可以作为 canary-by-header 的补充，可指定请求头为自定义值，包含但不限于 always 或 never。当请求头的值命中指定的自定义值时，请求将会转发给该 Ingress 定义的对应后端服务，如果是其它值则忽略该 annotation。</li><li><code>nginx.ingress.kubernetes.io/canary-by-header-pattern</code><br>与 canary-by-header-value 类似，区别为该 annotation 用正则表达式匹配请求头的值，而不是只固定某一个值。如果该 annotation 与 canary-by-header-value 同时存在，该 annotation 将被忽略。</li><li><code>nginx.ingress.kubernetes.io/canary-by-cookie</code><br>与 canary-by-header 类似，该 annotation 用于 cookie，仅支持 always 和 never。</li><li><code>nginx.ingress.kubernetes.io/canary-weight</code><br>表示 Canary Ingress 所分配流量的比例的百分比，取值范围 [0-100]。例如，设置为10，则表示分配10%的流量给 Canary Ingress 对应的后端服务。</li></ul><blockquote><p>说明：<br>以上规则会按优先顺序进行评估，优先顺序为： <code>canary-by-header -&gt; canary-by-cookie -&gt; canary-weight</code>。<br>当 Ingress 被标记为 Canary Ingress 时，除了 <code>nginx.ingress.kubernetes.io/load-balance</code> 和 <code>nginx.ingress.kubernetes.io/upstream-hash-by</code> 外，所有其他非 Canary 注释都将被忽略。</p></blockquote><p>可以把以上的四个 <code>annotation</code> 分为三类：</p><ol><li>基于Request Header的流量切分，适用于灰度发布以及AB测试场景</li><li>基于Cookie的流量切分，适用于灰度发布以及AB测试场景</li><li>基于服务权重的流量切分，适用于蓝绿发布场景</li></ol><p>总体划分为以下两大类：</p><ol><li><p>基于权重的 Canary 规则<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/Canary-weight.jpg" alt="github--lena"></p></li><li><p>基于用户请求的 Canary 规则<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/Canary-cookie.jpg" alt="github--lena"></p></li></ol><blockquote><p>注意： Ingress-Nginx 实在0.21.0 版本 中，引入的Canary 功能，因此要确保ingress版本OK</p></blockquote><h2 id="部署正式版本服务"><a href="#部署正式版本服务" class="headerlink" title="部署正式版本服务"></a>部署正式版本服务</h2><p>首先创建一个 deployment 代表正式版本的服务，编写 yaml 内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: ns-myapp</span><br><span class="line">  labels:</span><br><span class="line">    name: ns-myapp</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: production</span><br><span class="line">  namespace: ns-myapp</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: production</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: production</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: production</span><br><span class="line">        image: mirrorgooglecontainers&#x2F;echoserver:1.10</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">        env:</span><br><span class="line">          - name: NODE_NAME</span><br><span class="line">            valueFrom:</span><br><span class="line">              fieldRef:</span><br><span class="line">                fieldPath: spec.nodeName</span><br><span class="line">          - name: POD_NAME</span><br><span class="line">            valueFrom:</span><br><span class="line">              fieldRef:</span><br><span class="line">                fieldPath: metadata.name</span><br><span class="line">          - name: POD_NAMESPACE</span><br><span class="line">            valueFrom:</span><br><span class="line">              fieldRef:</span><br><span class="line">                fieldPath: metadata.namespace</span><br><span class="line">          - name: POD_IP</span><br><span class="line">            valueFrom:</span><br><span class="line">              fieldRef:</span><br><span class="line">                fieldPath: status.podIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: production</span><br><span class="line">  namespace: ns-myapp</span><br><span class="line">  labels:</span><br><span class="line">    app: production</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 80</span><br><span class="line">    targetPort: 8080</span><br><span class="line">    protocol: TCP</span><br><span class="line">    name: http</span><br><span class="line">  selector:</span><br><span class="line">    app: production</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>为这个服务创建 Ingress 路由规则，yaml 文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: production</span><br><span class="line">  namespace: ns-myapp</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io&#x2F;ingress.class: nginx</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: ingress.test.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - backend:</span><br><span class="line">          serviceName: production</span><br><span class="line">          servicePort: 80</span><br><span class="line">          </span><br></pre></td></tr></table></figure><p>应用以上 yaml 文件，创建完成后在 k8s 中查看到如下信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[k8s-master ~]# kubectl get ingress -n ns-myapp</span><br><span class="line">NAME         CLASS    HOSTS              ADDRESS        PORTS   AGE</span><br><span class="line">production   &lt;none&gt;   ingress.test.com   10.16.13.201   80      4m25s</span><br><span class="line"></span><br><span class="line">[k8s-master ~]# kubectl get pod -n ns-myapp</span><br><span class="line">NAME                          READY   STATUS    RESTARTS   AGE</span><br><span class="line">production-5698c4565c-jmjn5   1&#x2F;1     Running   0          7m11s</span><br></pre></td></tr></table></figure><p>此时在命令行中访问 <code>ingress.test.com</code> 可以看到如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># curl ingress.test.com</span><br><span class="line"></span><br><span class="line">Hostname: production-5698c4565c-jmjn5</span><br><span class="line"></span><br><span class="line">Pod Information:</span><br><span class="line">    node name:  dumlog013201</span><br><span class="line">    pod name:   production-5698c4565c-jmjn5</span><br><span class="line">    pod namespace:  ns-myapp</span><br><span class="line">    pod IP: 10.42.0.74</span><br><span class="line"></span><br><span class="line">Server values:</span><br><span class="line">    server_version&#x3D;nginx: 1.13.3 - lua: 10008</span><br><span class="line"></span><br><span class="line">Request Information:</span><br><span class="line">    client_address&#x3D;10.16.13.201</span><br><span class="line">    method&#x3D;GET</span><br><span class="line">    real path&#x3D;&#x2F;</span><br><span class="line">    query&#x3D;</span><br><span class="line">    request_version&#x3D;1.1</span><br><span class="line">    request_scheme&#x3D;http</span><br><span class="line">    request_uri&#x3D;http:&#x2F;&#x2F;ingress.test.com:8080&#x2F;</span><br><span class="line"></span><br><span class="line">Request Headers:</span><br><span class="line">    accept&#x3D;*&#x2F;*</span><br><span class="line">    host&#x3D;ingress.test.com</span><br><span class="line">    user-agent&#x3D;curl&#x2F;7.64.1</span><br><span class="line">    x-forwarded-for&#x3D;10.2.130.18</span><br><span class="line">    x-forwarded-host&#x3D;ingress.test.com</span><br><span class="line">    x-forwarded-port&#x3D;80</span><br><span class="line">    x-forwarded-proto&#x3D;http</span><br><span class="line">    x-real-ip&#x3D;10.2.130.18</span><br><span class="line">    x-request-id&#x3D;3019362be59228ee2284f5737fa39eb1</span><br><span class="line">    x-scheme&#x3D;http</span><br><span class="line"></span><br><span class="line">Request Body:</span><br><span class="line">    -no body in request-</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="部署-Canary-版本服务"><a href="#部署-Canary-版本服务" class="headerlink" title="部署 Canary 版本服务"></a>部署 Canary 版本服务</h2><p>接下来创建一个 Canary 版本的服务，用于作为灰度测试。</p><p>参考将上述 Production 版本的 <code>production.yaml</code> 文件，再创建一个 Canary 版本的应用，包括一个 Canary 版本的 <code>deployment</code> 和 <code>service</code> (为方便快速演示，仅需将 production.yaml 的 <code>deployment</code>和 <code>service</code> 中的关键字 <code>production</code> 直接替换为 <code>canary</code>，实际场景中可能涉及业务代码变更)。</p><h3 id="基于权重的-Canary-规则测试"><a href="#基于权重的-Canary-规则测试" class="headerlink" title="基于权重的 Canary 规则测试"></a>基于权重的 Canary 规则测试</h3><p>基于权重的流量切分的典型应用场景就是<code>蓝绿部署</code>，可通过将权重设置为 0 或 100 来实现。例如，可将 Green 版本设置为主要部分，并将 Blue 版本的入口配置为 Canary。最初，将权重设置为 0，因此不会将流量代理到 Blue 版本。一旦新版本测试和验证都成功后，即可将 Blue 版本的权重设置为 100，即所有流量从 Green 版本转向 Blue。</p><p>使用以下 <code>canary.ingress</code> 的 yaml 文件再创建一个基于权重的 Canary 版本的应用路由 (Ingress)。</p><blockquote><p>注意：要开启灰度发布机制，首先需设置 <code>nginx.ingress.kubernetes.io/canary: &quot;true&quot;</code> 启用 Canary，以下 Ingress 示例的 Canary 版本使用了基于权重进行流量切分的 annotation 规则，将分配 30% 的流量请求发送至 Canary 版本。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: canary</span><br><span class="line">  namespace: ns-myapp</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io&#x2F;ingress.class: nginx</span><br><span class="line">    nginx.ingress.kubernetes.io&#x2F;canary: &quot;true&quot;</span><br><span class="line">    nginx.ingress.kubernetes.io&#x2F;canary-weight: &quot;30&quot;</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: ingress.test.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - backend:</span><br><span class="line">          serviceName: canary</span><br><span class="line">          servicePort: 80</span><br></pre></td></tr></table></figure><p>接下来在命令行中使用如下命令访问域名 ingress.test.com 100次，计算每个版本分配流量的占比：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c&#x3D;0;p&#x3D;0;for i in $(seq 100); do result&#x3D;$(curl -s ingress.test.com | grep  Hostname | awk -F: &#39;&#123;print $2&#125;&#39;); [[ $&#123;result&#125; &#x3D;~ ^[[:space:]]canary ]] &amp;&amp; let c++ || let p++; done;echo &quot;production:$&#123;p&#125;; canary:$&#123;c&#125;;&quot;</span><br></pre></td></tr></table></figure><p>可以得到如下结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">production:73; canary:28;</span><br></pre></td></tr></table></figure><p>注意这里权重不是一个精确的百分比，使用过程当中，只是会看到一个近似分布。</p><h3 id="基于用户请求的-Canary-规则测试"><a href="#基于用户请求的-Canary-规则测试" class="headerlink" title="基于用户请求的 Canary 规则测试"></a>基于用户请求的 Canary 规则测试</h3><h4 id="基于-Resquest-Header"><a href="#基于-Resquest-Header" class="headerlink" title="基于 Resquest Header"></a>基于 Resquest Header</h4><p>基于 Request Header 进行流量切分的典型应用场景即<code>灰度发布或 A/B 测试场景</code>。</p><p>给 Canary 版本的 Ingress 新增一条 annotation ：<code>nginx.ingress.kubernetes.io/canary-by-header: canary</code>（这里的 annotation 的 value 可以是任意值），使当前的 Ingress 实现基于 Request Header 进行流量切分。</p><p>将 Canary 版本 Ingress 的 yaml 文件修改为如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: canary</span><br><span class="line">  namespace: ns-myapp</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io&#x2F;ingress.class: nginx</span><br><span class="line">    nginx.ingress.kubernetes.io&#x2F;canary: &quot;true&quot;</span><br><span class="line">    nginx.ingress.kubernetes.io&#x2F;canary-weight: &quot;30&quot;</span><br><span class="line">    nginx.ingress.kubernetes.io&#x2F;canary-by-header: &quot;canary&quot;</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: ingress.test.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - backend:</span><br><span class="line">          serviceName: canary</span><br><span class="line">          servicePort: 80</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>说明：金丝雀规则按优先顺序 canary-by-header - &gt; canary-by-cookie - &gt; canary-weight 进行如下排序，因此上面的 ingress 将忽略原有 canary-weight 的规则。</p></blockquote><p>由于上面的 ingress 规则中没有对 canary-by-header: <code>canary</code> 提供具体的值，也就是 <code>nginx.ingress.kubernetes.io/canary-by-header-value</code> 规则，所以在访问的时候，只可以为 <code>canary</code> 赋值 <code>never</code> 或 <code>always</code>，当 header 信息为 <code>canary:never</code> 时，请求将不会发送到 canary 版本；当 header 信息为 <code>canary:always</code> 时，请求将会一直发送到 canary 版本。示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[k8s-master ~ ]# curl -s -H &quot;canary:never&quot; ingress.test.com | grep Hostname</span><br><span class="line">Hostname: production-5698c4565c-jmjn5</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[k8s-master ~ ]# curl -s -H &quot;canary:always&quot; ingress.test.com | grep Hostname</span><br><span class="line">Hostname: canary-79c899d85-992nw</span><br></pre></td></tr></table></figure><p>也可以在上一个 annotation （即 canary-by-header）的基础上添加一条 <code>nginx.ingress.kubernetes.io/canary-by-header-value: user-value</code> 。用于通知 Ingress 将匹配到的请求路由到 Canary Ingress 中指定的服务。</p><p>将 Canary 版本 Ingress 的 yaml 文件修改为如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: canary</span><br><span class="line">  namespace: ns-myapp</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io&#x2F;ingress.class: nginx</span><br><span class="line">    nginx.ingress.kubernetes.io&#x2F;canary: &quot;true&quot;</span><br><span class="line">    nginx.ingress.kubernetes.io&#x2F;canary-weight: &quot;30&quot;</span><br><span class="line">    nginx.ingress.kubernetes.io&#x2F;canary-by-header: &quot;canary&quot;</span><br><span class="line">    nginx.ingress.kubernetes.io&#x2F;canary-by-header-value: &quot;true&quot;</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: ingress.test.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - backend:</span><br><span class="line">          serviceName: canary</span><br><span class="line">          servicePort: 80</span><br></pre></td></tr></table></figure><p>上面的 ingress 规则设置了 header 信息为 <code>canary:true</code>，也就是只有满足这个 header 值时才会路由到 canary 版本。示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[k8s-master ~ ]# curl -s ingress.test.com | grep Hostname</span><br><span class="line">Hostname: production-5698c4565c-jmjn5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[k8s-master ~ ]# curl -s -H &quot;canary:test&quot; ingress.test.com | grep Hostname</span><br><span class="line">Hostname: production-5698c4565c-jmjn5</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[k8s-master ~ ]# curl -s -H &quot;canary:true&quot; ingress.test.com | grep Hostname</span><br><span class="line">Hostname: canary-79c899d85-992nw</span><br></pre></td></tr></table></figure><h4 id="基于-Cookie-的-Canary-规则测试"><a href="#基于-Cookie-的-Canary-规则测试" class="headerlink" title="基于 Cookie 的 Canary 规则测试"></a>基于 Cookie 的 Canary 规则测试</h4><p>与基于 Request Header 的 annotation 用法规则类似。例如在 <code>A/B 测试场景</code> 下，需要让地域为北京的用户访问 Canary 版本。那么当 cookie 的 annotation 设置为 <code>nginx.ingress.kubernetes.io/canary-by-cookie: &quot;users_from_Beijing&quot;</code>，此时后台可对登录的用户请求进行检查，如果该用户访问源来自北京则设置 <code>cookieusers_from_Beijing</code> 的值为 <code>always</code>，这样就可以确保北京的用户仅访问 Canary 版本。</p><p>将 Canary 版本 Ingress 的 yaml 文件修改为如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: canary</span><br><span class="line">  namespace: ns-myapp</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io&#x2F;ingress.class: nginx</span><br><span class="line">    nginx.ingress.kubernetes.io&#x2F;canary: &quot;true&quot;</span><br><span class="line">    nginx.ingress.kubernetes.io&#x2F;canary-by-cookie: &quot;user_from_beijing&quot;</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: ingress.test.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - backend:</span><br><span class="line">          serviceName: canary</span><br><span class="line">          servicePort: 80</span><br></pre></td></tr></table></figure><p>访问示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[k8s-master ~ ]# curl -s -b &quot;user_from_beijing&#x3D;always&quot; ingress.test.com | grep Hostname</span><br><span class="line">Hostname: canary-79c899d85-992nw</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[k8s-master ~ ]# curl -s -b &quot;user_from_beijing&#x3D;no&quot; ingress.test.com | grep Hostname</span><br><span class="line">Hostname: production-5698c4565c-jmjn5</span><br></pre></td></tr></table></figure><blockquote><p>多实例Ingress controllers<br>参考<br><code>https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#canary</code><br><code>https://cloud.tencent.com/document/product/457/48907</code></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;注解说明&quot;&gt;&lt;a href=&quot;#注解说明&quot; class=&quot;headerlink&quot; title=&quot;注解说明&quot;&gt;&lt;/a&gt;注解说明&lt;/h2&gt;&lt;p&gt;通过给 Ingress 资源指定 Nginx Ingress 所支持的 annotation 可实现金丝雀发布。需给服务创建</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://imszz.com/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://imszz.com/tags/Kubernetes/"/>
    
    <category term="ingress-nginx" scheme="https://imszz.com/tags/ingress-nginx/"/>
    
  </entry>
  
  <entry>
    <title>k8s 跨 namespace 访问服务</title>
    <link href="https://imszz.com/p/9225747c/"/>
    <id>https://imszz.com/p/9225747c/</id>
    <published>2021-03-30T06:00:25.000Z</published>
    <updated>2021-03-30T06:01:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>在K8S中，同一个命名空间<code>（namespace）</code>下的服务之间调用，之间通过服务名<code>（service name）</code>调用即可。不过在更多时候，我们可能会将一些服务单独隔离在一个命名空间中（比如我们将中间件服务统一放在 middleware 命名空间中，将业务服务放在 business 命名空间中）。 遇到这种情况，我们就需要跨命名空间访问，K8S 对service 提供了四种不同的类型，针对这个问题我们选用 <code>ExternalName</code> 类型的 service 即可。</p><p>k8s service 分为四种类型<br>分别为：</p><ul><li>ClusterIp（默认类型，每个Node分配一个集群内部的Ip，内部可以互相访问，外部无法访问集群内部）</li><li>NodePort（基于ClusterIp，另外在每个Node上开放一个端口，可以从所有的位置访问这个地址）</li><li>LoadBalance（基于NodePort，并且有云服务商在外部创建了一个负载均衡层，将流量导入到对应Port。要收费的，一般由云服务商提供，比如阿里云、AWS等均提供这种服务）</li><li>ExternalName（将外部地址经过集群内部的再一次封装，实际上就是集群DNS服务器将CNAME解析到了外部地址上，实现了集群内部访问）</li></ul><p>本文使用 <code>ExternalName</code> 实现我们的需求：</p><p>通过 <code>&#123;SERVICE_NAME&#125;.&#123;NAMESPACE_NAME&#125;.svc.cluster.local</code>这样的格式，访问目标 <code>namespace</code> 下的服务。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在K8S中，同一个命名空间&lt;code&gt;（namespace）&lt;/code&gt;下的服务之间调用，之间通过服务名&lt;code&gt;（service name）&lt;/code&gt;调用即可。不过在更多时候，我们可能会将一些服务单独隔离在一个命名空间中（比如我们将中间件服务统一放在 middle</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://imszz.com/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://imszz.com/tags/Kubernetes/"/>
    
    <category term="namespace" scheme="https://imszz.com/tags/namespace/"/>
    
  </entry>
  
  <entry>
    <title>污点（taints）与容忍（tolerations）</title>
    <link href="https://imszz.com/p/5cb0c128/"/>
    <id>https://imszz.com/p/5cb0c128/</id>
    <published>2021-03-30T06:00:25.000Z</published>
    <updated>2021-03-30T06:01:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>对于<code>nodeAffinity</code>无论是硬策略还是软策略方式，都是调度 pod 到预期节点上，而<code>Taints</code>恰好与之相反，如果一个节点标记为 Taints ，除非 pod 也被标识为可以容忍污点节点，否则该 Taints 节点不会被调度 pod。</p><p>比如用户希望把 Master 节点保留给 Kubernetes 系统组件使用，或者把一组具有特殊资源预留给某些 pod，则污点就很有用了，pod 不会再被调度到 taint 标记过的节点。我们搭建的集群默认就给 master 节点添加了一个污点标记，所以我们看到我们平时的 pod 都没有被调度到 master 上去：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl describe node master</span><br><span class="line">Name:               master</span><br><span class="line">Roles:              master</span><br><span class="line">Labels:             beta.kubernetes.io&#x2F;arch&#x3D;amd64</span><br><span class="line">                    beta.kubernetes.io&#x2F;os&#x3D;linux</span><br><span class="line">                    kubernetes.io&#x2F;hostname&#x3D;master</span><br><span class="line">                    node-role.kubernetes.io&#x2F;master&#x3D;</span><br><span class="line">......</span><br><span class="line">Taints:             node-role.kubernetes.io&#x2F;master:NoSchedule</span><br><span class="line">Unschedulable:      false</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>我们可以使用上面的命令查看 master 节点的信息，其中有一条关于 Taints 的信息：<code>node-role.kubernetes.io/master:NoSchedule</code>，就表示给 master 节点打了一个污点的标记，其中影响的参数是<code>NoSchedule</code>，表示 pod 不会被调度到标记为 taints 的节点，除了 NoSchedule 外，还有另外两个选项：</p><ul><li>PreferNoSchedule：NoSchedule 的软策略版本，表示尽量不调度到污点节点上去</li><li>NoExecute：该选项意味着一旦 Taint 生效，如该节点内正在运行的 pod 没有对应 Tolerate 设置，会直接被逐出</li></ul><p>污点 taint 标记节点的命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl taint nodes node02 test&#x3D;node02:NoSchedule</span><br><span class="line">node &quot;node02&quot; tainted</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面的命名将 node02 节点标记为了污点，影响策略是 NoSchedule，只会影响新的 pod 调度，如果仍然希望某个 pod 调度到 taint 节点上，则必须在 Spec 中做出<code>Toleration</code>定义，才能调度到该节点，<br>比如现在我们想要将一个 pod 调度到 master 节点：(taint-demo.yaml)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: taint</span><br><span class="line">  labels:</span><br><span class="line">    app: taint</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  revisionHistoryLimit: 10</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: taint</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: taint</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx</span><br><span class="line">        image: nginx:1.7.9</span><br><span class="line">        ports:</span><br><span class="line">        - name: http</span><br><span class="line">          containerPort: 80</span><br><span class="line">      tolerations:</span><br><span class="line">      - key: &quot;node-role.kubernetes.io&#x2F;master&quot;</span><br><span class="line">        operator: &quot;Exists&quot;</span><br><span class="line">        effect: &quot;NoSchedule&quot;</span><br></pre></td></tr></table></figure><p>由于 master 节点被标记为了污点节点，所以我们这里要想 pod 能够调度到 master 节点去，就需要增加容忍的声明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tolerations:</span><br><span class="line">- key: &quot;node-role.kubernetes.io&#x2F;master&quot;</span><br><span class="line">  operator: &quot;Exists&quot;</span><br><span class="line">  effect: &quot;NoSchedule&quot;</span><br></pre></td></tr></table></figure><p>然后创建上面的资源，查看结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl create -f taint-demo.yaml</span><br><span class="line">deployment.apps &quot;taint&quot; created</span><br><span class="line">$ kubectl get pods -o wide</span><br><span class="line">NAME                                      READY     STATUS             RESTARTS   AGE       IP             NODE</span><br><span class="line">......</span><br><span class="line">taint-845d8bb4fb-57mhm                    1&#x2F;1       Running            0          1m        10.244.4.247   node02</span><br><span class="line">taint-845d8bb4fb-bbvmp                    1&#x2F;1       Running            0          1m        10.244.0.33    master</span><br><span class="line">taint-845d8bb4fb-zb78x                    1&#x2F;1       Running            0          1m        10.244.4.246   node02</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>我们可以看到有一个 pod 副本被调度到了 master 节点，这就是容忍的使用方法。</p><p>对于 tolerations 属性的写法，其中的 key、value、effect 与 Node 的 Taint 设置需保持一致， 还有以下几点说明：</p><ul><li>如果 operator 的值是 Exists，则 value 属性可省略</li><li>如果 operator 的值是 Equal，则表示其 key 与 value 之间的关系是 equal(等于)</li><li>如果不指定 operator 属性，则默认值为 Equal</li></ul><p>另外，还有两个特殊值：</p><ul><li>空的 key 如果再配合 Exists 就能匹配所有的 key 与 value，也是是能容忍所有 node 的所有 Taints</li><li>空的 effect 匹配所有的 effect</li></ul><p>最后，如果我们要取消节点的污点标记，可以使用下面的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl taint nodes node02 test-</span><br><span class="line">node &quot;node02&quot; untainted</span><br></pre></td></tr></table></figure><p>这就是污点和容忍的使用方法。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;对于&lt;code&gt;nodeAffinity&lt;/code&gt;无论是硬策略还是软策略方式，都是调度 pod 到预期节点上，而&lt;code&gt;Taints&lt;/code&gt;恰好与之相反，如果一个节点标记为 Taints ，除非 pod 也被标识为可以容忍污点节点，否则该 Taints 节点不</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://imszz.com/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://imszz.com/tags/Kubernetes/"/>
    
    <category term="taints" scheme="https://imszz.com/tags/taints/"/>
    
    <category term="tolerations" scheme="https://imszz.com/tags/tolerations/"/>
    
  </entry>
  
  <entry>
    <title>删除mac启动台launchpad中的无效图标</title>
    <link href="https://imszz.com/p/c1a54034/"/>
    <id>https://imszz.com/p/c1a54034/</id>
    <published>2021-03-28T16:25:23.000Z</published>
    <updated>2021-03-28T16:26:23.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一种情况"><a href="#第一种情况" class="headerlink" title="第一种情况"></a>第一种情况</h3><p>在Mac上安装Photoshop CS6的后， 启动台(LaunchPad)莫名其妙的多出了几个”Adobe xxxx…”的图标， 而且无法删除，在访达里面应用程序内也找不到， 非常讨厌。</p><p>在网上搜索了试过终端删除，app删除，找到程序文件夹删除等各种方法，但都失败了。。。</p><p>最后重点来了，我找到了一个终极解决办法：</p><p>重建 启动台(LaunchPad) 内的图标来解决.</p><h4 id="方法如下"><a href="#方法如下" class="headerlink" title="方法如下:"></a>方法如下:</h4><p>打开应用程序- 实用工具 - 终端. 以此出入如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.dock ResetLaunchPad -bool true</span><br><span class="line"></span><br><span class="line">killall Dock</span><br></pre></td></tr></table></figure><p>再次打开 LaunchPad 的时候, 所有图标会被重建。</p><blockquote><p>如果发现启动台(LaunchPad)里面出现了一个新的相关文件夹，并且是原来Adobe之类的程序， 那么需要再次打开<code>访达-&gt;应用程序-&gt;实用工具</code> 内找到对应相关文件程序删掉即可。</p></blockquote><p>最后，你会发现重置之后之前的所有设置都会丢失. 没有特殊情况不要使用哦. 以免丢失之前的排列方式与文件夹.</p><h3 id="第二种情况"><a href="#第二种情况" class="headerlink" title="第二种情况"></a>第二种情况</h3><p>有些应用程序（比如说虚拟机），安装之后会在启动台生成文件夹或其它图标，但是卸载了应用之后，这个文件夹依然会保留下来，简直逼死强迫症。</p><h4 id="方法如下-1"><a href="#方法如下-1" class="headerlink" title="方法如下:"></a>方法如下:</h4><p>卸载应用程序之后，一般其在启动台生成的文件夹是不会被删除的，不过这个文件夹里面是空的。如果执意要删除的话，可以从<code>Finder</code>（访达）里面入手。具体操作为，打开访达，按下快捷键<code>「commond」+「shift」+「H」</code>，之后页面会自动跳转到用户的主页。打开<code>「应用程序文件夹」</code>，里面的都是launchpad的内容，找到你要删除的目标将其删除即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;第一种情况&quot;&gt;&lt;a href=&quot;#第一种情况&quot; class=&quot;headerlink&quot; title=&quot;第一种情况&quot;&gt;&lt;/a&gt;第一种情况&lt;/h3&gt;&lt;p&gt;在Mac上安装Photoshop CS6的后， 启动台(LaunchPad)莫名其妙的多出了几个”Adobe xxx</summary>
      
    
    
    
    <category term="奇怪的知识点" scheme="https://imszz.com/categories/%E5%A5%87%E6%80%AA%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="Mac" scheme="https://imszz.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>如何注册PropellerAds账号</title>
    <link href="https://imszz.com/p/399b4ecc/"/>
    <id>https://imszz.com/p/399b4ecc/</id>
    <published>2021-02-08T16:46:25.000Z</published>
    <updated>2021-02-08T16:48:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PropellerAds"><a href="#PropellerAds" class="headerlink" title="PropellerAds"></a><a href="https://propellerads.com/publishers/?ref_id=mTFx">PropellerAds</a></h2><blockquote><p><a href="https://propellerads.com/publishers/?ref_id=mTFx">PropellerAds</a>是2018-2019年度最好的cpm广告网络之一，也是支付率最高的cpm广告网络之一。如果您正在寻找移动广告，弹出窗口，对话框和插页式广告，那么PorpellerAds是您最适合的CPM网络。出版商将获得10美元的有效每千次展示费用，这个每千次展示费率取决于访问国家，如果您的网站拥有高流量来自英国，美国，那么您可以预期这个广告网络很多钱。它提供了许多广告格式供用户赚取，这些广告格式是横幅广告，原生直接广告，流行下广告，非页内广告，上推广告，对话广告。螺旋桨广告支付净30基础。最低支付限额为100美元，发布可以通过电汇和PayPal提款。</p></blockquote><h3 id="获得批准的要求："><a href="#获得批准的要求：" class="headerlink" title="获得批准的要求："></a>获得批准的要求：</h3><ul><li>没有最低流量要求</li><li>网站必须是基于内容的，而不是简单的链接或广告列表</li><li>网站不得在“正在建设中”</li><li>网站不得包含与成人相关的内容</li></ul><h3 id="最好的功能"><a href="#最好的功能" class="headerlink" title="最好的功能"></a>最好的功能</h3><ul><li><a href="https://propellerads.com/publishers/?ref_id=mTFx">PropellerAds</a>在Net 30上支付</li><li>其最低支付限额是$ 5</li><li>实时统计报告系统</li><li>付款方式是电汇和PayPal</li><li><a href="https://propellerads.com/publishers/?ref_id=mTFx">PropellerAds</a>提供多种广告格式</li></ul><p>支持国内IP,<a href="https://propellerads.com/publishers/?ref_id=mTFx">PropellerAds</a>本身有banner和弹窗广告 , 但是banner广告收入极低 , 所以不建议去做 反而弹窗收入高（垃圾站点使用高）</p><h2 id="首先我们注册PropellerAds平台"><a href="#首先我们注册PropellerAds平台" class="headerlink" title="首先我们注册PropellerAds平台"></a>首先我们注册<a href="https://propellerads.com/publishers/?ref_id=mTFx">PropellerAds</a>平台</h2><p>链接地址<a href="https://propellerads.com/publishers/?ref_id=mTFx">PropellerAds</a> </p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/PropellerAds1.jpg" alt="github--lena"></p><p>我们选择账户类型为Publisher，注意这里我们注册为发行商，一定不要选错了<br>提供广告的请注册Advertiser，</p><p>跳转到这个页面</p><p>据实填写我们的个人信息即可，填写完成以后点击下一步 ,只填写必要信息即可<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/propellerads2.jpg" alt="github--lena"></p><p>点击下一页后在相关的输入框中大家可以根据我填写的内容来进行填写，这里其实只需要简单的说明一下我们目前的流量源</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/propellerads4.jpg" alt="github--lena"></p><p>最后点击注册就可以了，基本上注册以后我很快会收到确认邮件，当即注册马上就能进入平台了</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/propellerads5.jpg" alt="github--lena"></p><p>在你的邮箱中收到这份确认邮件以后点击验证账户，然后会跳转至设置初始密码的页面，设置完成以后就ok了，恭喜你，</p><h2 id="绑定网站与验证"><a href="#绑定网站与验证" class="headerlink" title="绑定网站与验证"></a>绑定网站与验证</h2><p>添加网站<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/propellerads6.jpg" alt="github--lena"></p><p>验证<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/propellerads7.jpg" alt="github--lena"></p><p>验证通过后添加广告类别</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/propellerads8.jpg" alt="github--lena"></p><p>选择自己适用的类别<br>add zone<br>点击获取代码并选择在自己的官网手动引用就可以<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/propellerads9.jpg" alt="github--lena"></p><p>请注意：MultiTag 广告格式包含（In-Page Push (Banner)与Onclick (Popunder)与Interstitial）</p><p>不太建议直接使用MultiTag与Onclick (Popunder) 这两种广告格式 因为会跳转到其他网站，可能会包含非法站点</p><h2 id="请点击PropellerAds跳转官网注册"><a href="#请点击PropellerAds跳转官网注册" class="headerlink" title="请点击PropellerAds跳转官网注册"></a>请点击<a href="https://propellerads.com/publishers/?ref_id=mTFx">PropellerAds</a>跳转官网注册</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;PropellerAds&quot;&gt;&lt;a href=&quot;#PropellerAds&quot; class=&quot;headerlink&quot; title=&quot;PropellerAds&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://propellerads.com/publishers/?ref_</summary>
      
    
    
    
    <category term="奇怪的知识点" scheme="https://imszz.com/categories/%E5%A5%87%E6%80%AA%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="PropellerAds" scheme="https://imszz.com/tags/PropellerAds/"/>
    
  </entry>
  
  <entry>
    <title>Linux设置和修改时间与时区</title>
    <link href="https://imszz.com/p/339c428/"/>
    <id>https://imszz.com/p/339c428/</id>
    <published>2021-01-26T16:00:00.000Z</published>
    <updated>2021-01-27T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>linux系统时间有两个，一个是硬件时间，即BIOS时间，就是我们进行CMOS设置时看到的时间，另一个是系统时间，是linux系统Kernel时间。当Linux启动时，系统Kernel会去读取硬件时钟的设置，然后系统时钟就会独立于硬件运作。有时我们会发现系统时钟和硬件时钟不一致，因此需要执行时间同步。</p></blockquote><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><h2 id="一、date-查看-设置系统时间"><a href="#一、date-查看-设置系统时间" class="headerlink" title="一、date 查看/设置系统时间"></a>一、date 查看/设置系统时间</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、将日期设置为2017年11月3日</span><br><span class="line">[root@linux-node ~]# date -s 11&#x2F;03&#x2F;17</span><br><span class="line"></span><br><span class="line">2、将时间设置为14点20分50秒</span><br><span class="line">[root@linux-node ~]# date -s 14:20:50</span><br><span class="line"></span><br><span class="line">3、将时间设置为2017年11月3日14点16分30秒（MMDDhhmmYYYY.ss）</span><br><span class="line">[root@linux-node ~]# date 1103141617.30</span><br></pre></td></tr></table></figure><h2 id="二、hwclock-clock-查看-设置硬件时间"><a href="#二、hwclock-clock-查看-设置硬件时间" class="headerlink" title="二、hwclock/clock 查看/设置硬件时间"></a>二、hwclock/clock 查看/设置硬件时间</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、查看系统硬件时钟</span><br><span class="line">[root@linux-node ~]# hwclock  --show 或者</span><br><span class="line">[root@linux-node ~]# clock  --show</span><br><span class="line"></span><br><span class="line">2、设置硬件时间</span><br><span class="line">[root@linux-node ~]# hwclock --set --date&#x3D;&quot;11&#x2F;03&#x2F;17 14:55&quot; （月&#x2F;日&#x2F;年时:分:秒） 或者</span><br><span class="line">[root@linux-node ~]# clock --set --date&#x3D;&quot;11&#x2F;03&#x2F;17 14:55&quot; （月&#x2F;日&#x2F;年时:分:秒）</span><br></pre></td></tr></table></figure><h2 id="三、同步系统及硬件时钟"><a href="#三、同步系统及硬件时钟" class="headerlink" title="三、同步系统及硬件时钟"></a>三、同步系统及硬件时钟</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-node ~]# hwclock --hctosys 或者</span><br><span class="line">[root@linux-node ~]# clock --hctosys  </span><br><span class="line">备注：hc代表硬件时间，sys代表系统时间，以硬件时间为基准，系统时间找硬件时间同步</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@linux-node ~]# hwclock --systohc或者</span><br><span class="line">[root@linux-node ~]# clock --systohc </span><br><span class="line">备注：以系统时间为基准，硬件时间找系统时间同步</span><br></pre></td></tr></table></figure><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p>时区设置用<code>tzselect</code> 命令来实现。但是通过<code>tzselect</code>命令设置<code>TZ</code>这个环境变量来选择的时区，需要将变量添加到<code>.profile</code>文件中。</p><h2 id="一、tzselect命令执行"><a href="#一、tzselect命令执行" class="headerlink" title="一、tzselect命令执行"></a>一、tzselect命令执行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">执行tzselect命令 --&gt; 选择Asia --&gt; 选择China --&gt; 选择east China - Beijing, Guangdong, Shanghai, etc--&gt;然后输入1。</span><br></pre></td></tr></table></figure><p>执行完<code>tzselect</code>命令选择时区后，时区并没有更改，只是在命令最后提示你可以执行 <code>TZ=’Asia/Shanghai’; export TZ </code>并将这行命令添加到<code>.profile</code>中，然后退出并重新登录。</p><h2 id="二、修改配置文件来修改时区"><a href="#二、修改配置文件来修改时区" class="headerlink" title="二、修改配置文件来修改时区"></a>二、修改配置文件来修改时区</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-node ~]# echo &quot;ZONE&#x3D;Asia&#x2F;Shanghai&quot; &gt;&gt; &#x2F;etc&#x2F;sysconfig&#x2F;clock         </span><br><span class="line">[root@linux-node ~]# rm -f &#x2F;etc&#x2F;localtime</span><br><span class="line">#链接到上海时区文件       </span><br><span class="line">[root@linux-node ~]# ln -sf &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime</span><br></pre></td></tr></table></figure><p>执行完上述过程后，重启机器，即可看到时区已经更改。</p><h2 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在centos7中设置时区的命令可以通过 timedatectl 命令来实现</span><br><span class="line">[root@linux-node ~]# timedatectl set-timezone Asia&#x2F;Shanghai</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;linux系统时间有两个，一个是硬件时间，即BIOS时间，就是我们进行CMOS设置时看到的时间，另一个是系统时间，是linux系统Kernel时间。当Linux启动时，系统Kernel会去读取硬件时钟的设置，然后系统时钟就会独立于硬件运作。有时我们</summary>
      
    
    
    
    <category term="linux" scheme="https://imszz.com/categories/linux/"/>
    
    
    <category term="linux" scheme="https://imszz.com/tags/linux/"/>
    
    <category term="TZ" scheme="https://imszz.com/tags/TZ/"/>
    
  </entry>
  
  <entry>
    <title>MySQL5.7 字符集设置</title>
    <link href="https://imszz.com/p/38510659/"/>
    <id>https://imszz.com/p/38510659/</id>
    <published>2021-01-25T16:00:00.000Z</published>
    <updated>2021-01-26T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL5-7-字符集设置"><a href="#MySQL5-7-字符集设置" class="headerlink" title="MySQL5.7 字符集设置"></a>MySQL5.7 字符集设置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">character-set-client-handshake &#x3D; FALSE</span><br><span class="line">character-set-server &#x3D; utf8mb4</span><br><span class="line">collation-server &#x3D; utf8mb4_unicode_ci</span><br><span class="line">init_connect&#x3D;’SET NAMES utf8mb4’</span><br></pre></td></tr></table></figure><h1 id="character-set-client-handshake"><a href="#character-set-client-handshake" class="headerlink" title="character-set-client-handshake"></a>character-set-client-handshake</h1><p>用来控制客户端声明使用字符集和服务端声明使用的字符集在不一致的情况下的兼容性.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">character-set-client-handshake &#x3D; false</span><br><span class="line"># 设置为 False, 在客户端字符集和服务端字符集不同的时候将拒绝连接到服务端执行任何操作</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 默认为 true</span><br><span class="line">character-set-client-handshake &#x3D; true</span><br><span class="line"># 设置为 True, 即使客户端字符集和服务端字符集不同, 也允许客户端连接</span><br></pre></td></tr></table></figure><h1 id="character-set-server"><a href="#character-set-server" class="headerlink" title="character-set-server"></a>character-set-server</h1><p>声明服务端的字符编码, 推荐使用utf8mb4 , 该字符虽然占用空间会比较大, 但是可以兼容 emoji 😈 表情的存储</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">character-set-server &#x3D; utf8mb4</span><br></pre></td></tr></table></figure><h1 id="collation-server"><a href="#collation-server" class="headerlink" title="collation-server"></a>collation-server</h1><p>声明服务端的字符集, 字符编码和字符集一一对应, 既然使用了utf8mb4的字符集, 就要声明使用对应的字符编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">collation-server &#x3D; utf8mb4_unicode_ci</span><br></pre></td></tr></table></figure><h1 id="init-connect"><a href="#init-connect" class="headerlink" title="init_connect"></a>init_connect</h1><p><code>init_connect </code>是用户登录到数据库上之后, 在执行第一次查询之前执行里面的内容. 如果 <code>init_connect</code> 的内容有语法错误, 导致执行失败, 会导致用户无法执行查询, 从mysql 退出</p><p>使用 <code>init_connect</code> 执行 <code>SET NAMES utf8mb4</code> 意为:</p><p>声明自己(客户端)使用的是 utf8mb4 的字符编码<br>希望服务器返回给自己 utf8mb4 的查询结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">init_connect &#x3D; &#39;SET NAMES utf8mb4&#39;</span><br></pre></td></tr></table></figure><h1 id="完整配置"><a href="#完整配置" class="headerlink" title="完整配置"></a>完整配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">character-set-client-handshake &#x3D; FALSE</span><br><span class="line">character-set-server &#x3D; utf8mb4</span><br><span class="line">collation-server &#x3D; utf8mb4_unicode_ci</span><br><span class="line">init_connect &#x3D; &#39;SET NAMES utf8mb4&#39;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MySQL5-7-字符集设置&quot;&gt;&lt;a href=&quot;#MySQL5-7-字符集设置&quot; class=&quot;headerlink&quot; title=&quot;MySQL5.7 字符集设置&quot;&gt;&lt;/a&gt;MySQL5.7 字符集设置&lt;/h1&gt;&lt;figure class=&quot;highlight </summary>
      
    
    
    
    <category term="Mysql" scheme="https://imszz.com/categories/Mysql/"/>
    
    
    <category term="mysql" scheme="https://imszz.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL5.7 高可用高性能配置调优 性能参数参考</title>
    <link href="https://imszz.com/p/2d27b747/"/>
    <id>https://imszz.com/p/2d27b747/</id>
    <published>2021-01-25T16:00:00.000Z</published>
    <updated>2021-01-26T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>MySQL5.7 在 5.6 版本的基础之上做了大量的优化, 本篇文章开篇将重点围绕经过优化的基于 GTID 的多线程复制和半同步复制的特性介绍, 后续会持续增加 MySQL5.7 的调优参数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set &#x3D; utf8mb4</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">### 基本属性配置</span><br><span class="line">port &#x3D; 3306</span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql</span><br><span class="line"># 禁用主机名解析</span><br><span class="line">skip-name-resolve</span><br><span class="line"># 默认的数据库引擎</span><br><span class="line">default-storage-engine &#x3D; InnoDB</span><br><span class="line"></span><br><span class="line">### 字符集配置</span><br><span class="line">character-set-client-handshake &#x3D; FALSE</span><br><span class="line">character-set-server &#x3D; utf8mb4</span><br><span class="line">collation-server &#x3D; utf8mb4_unicode_ci</span><br><span class="line">init_connect&#x3D;&#39;SET NAMES utf8mb4&#39;</span><br><span class="line"></span><br><span class="line">### GTID</span><br><span class="line">server_id &#x3D; 59</span><br><span class="line"># 为保证 GTID 复制的稳定, 行级日志</span><br><span class="line">binlog_format &#x3D; row</span><br><span class="line"># 开启 gtid 功能</span><br><span class="line">gtid_mode &#x3D; on</span><br><span class="line"># 保障 GTID 事务安全</span><br><span class="line"># 当启用enforce_gtid_consistency功能的时候,</span><br><span class="line"># MySQL只允许能够保障事务安全, 并且能够被日志记录的SQL语句被执行,</span><br><span class="line"># 像create table ... select 和 create temporarytable语句, </span><br><span class="line"># 以及同时更新事务表和非事务表的SQL语句或事务都不允许执行</span><br><span class="line">enforce-gtid-consistency &#x3D; true</span><br><span class="line"># 以下两条配置为主从切换, 数据库高可用的必须配置</span><br><span class="line"># 开启 binlog 日志功能</span><br><span class="line">log_bin &#x3D; on</span><br><span class="line"># 开启从库更新 binlog 日志</span><br><span class="line">log-slave-updates &#x3D; on</span><br><span class="line"></span><br><span class="line">### 慢查询日志</span><br><span class="line"># 打开慢查询日志功能</span><br><span class="line">slow_query_log &#x3D; 1</span><br><span class="line"># 超过2秒的查询记录下来</span><br><span class="line">long_query_time &#x3D; 2</span><br><span class="line"># 记录下没有使用索引的查询</span><br><span class="line">log_queries_not_using_indexes &#x3D; 1</span><br><span class="line"></span><br><span class="line">### 自动修复</span><br><span class="line"># 记录 relay.info 到数据表中</span><br><span class="line">relay_log_info_repository &#x3D; TABLE</span><br><span class="line"># 记录 master.info 到数据表中 </span><br><span class="line">master_info_repository &#x3D; TABLE</span><br><span class="line"># 启用 relaylog 的自动修复功能</span><br><span class="line">relay_log_recovery &#x3D; on</span><br><span class="line"># 在 SQL 线程执行完一个 relaylog 后自动删除</span><br><span class="line">relay_log_purge &#x3D; 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 数据安全性配置</span><br><span class="line"># 关闭 master 创建 function 的功能</span><br><span class="line">log_bin_trust_function_creators &#x3D; off</span><br><span class="line"># 每执行一个事务都强制写入磁盘</span><br><span class="line">sync_binlog &#x3D; 1</span><br><span class="line"># timestamp 列如果没有显式定义为 not null, 则支持null属性</span><br><span class="line"># 设置 timestamp 的列值为 null, 不会被设置为 current timestamp</span><br><span class="line">explicit_defaults_for_timestamp&#x3D;true</span><br><span class="line"></span><br><span class="line">### 优化配置</span><br><span class="line"># 优化中文全文模糊索引</span><br><span class="line">ft_min_word_len &#x3D; 1</span><br><span class="line"># 默认库名表名保存为小写, 不区分大小写</span><br><span class="line">lower_case_table_names &#x3D; 1</span><br><span class="line"># 单条记录写入最大的大小限制</span><br><span class="line"># 过小可能会导致写入(导入)数据失败</span><br><span class="line">max_allowed_packet &#x3D; 256M</span><br><span class="line"># 半同步复制开启</span><br><span class="line">rpl_semi_sync_master_enabled &#x3D; 1</span><br><span class="line">rpl_semi_sync_slave_enabled &#x3D; 1</span><br><span class="line"># 半同步复制超时时间设置</span><br><span class="line">rpl_semi_sync_master_timeout &#x3D; 1000</span><br><span class="line"># 复制模式(保持系统默认)</span><br><span class="line">rpl_semi_sync_master_wait_point &#x3D; AFTER_SYNC</span><br><span class="line"># 后端只要有一台收到日志并写入 relaylog 就算成功</span><br><span class="line">rpl_semi_sync_master_wait_slave_count &#x3D; 1</span><br><span class="line"># 多线程复制</span><br><span class="line">slave_parallel_type &#x3D; logical_clock</span><br><span class="line">slave_parallel_workers &#x3D; 4</span><br><span class="line"></span><br><span class="line">### 连接数限制</span><br><span class="line">max_connections &#x3D; 1500</span><br><span class="line"># 验证密码超过20次拒绝连接</span><br><span class="line">max_connect_errors &#x3D; 20</span><br><span class="line"># back_log值指出在mysql暂时停止回答新请求之前的短时间内多少个请求可以被存在堆栈中</span><br><span class="line"># 也就是说，如果MySql的连接数达到max_connections时，新来的请求将会被存在堆栈中</span><br><span class="line"># 以等待某一连接释放资源，该堆栈的数量即back_log，如果等待连接的数量超过back_log</span><br><span class="line"># 将不被授予连接资源</span><br><span class="line">back_log &#x3D; 500</span><br><span class="line">open_files_limit &#x3D; 65535</span><br><span class="line"># 服务器关闭交互式连接前等待活动的秒数</span><br><span class="line">interactive_timeout &#x3D; 3600</span><br><span class="line"># 服务器关闭非交互连接之前等待活动的秒数</span><br><span class="line">wait_timeout &#x3D; 3600</span><br><span class="line"></span><br><span class="line">### 内存分配</span><br><span class="line"># 指定表高速缓存的大小。每当MySQL访问一个表时，如果在表缓冲区中还有空间</span><br><span class="line"># 该表就被打开并放入其中，这样可以更快地访问表内容</span><br><span class="line">table_open_cache &#x3D; 1024</span><br><span class="line"># 为每个session 分配的内存, 在事务过程中用来存储二进制日志的缓存</span><br><span class="line">binlog_cache_size &#x3D; 2M</span><br><span class="line"># 在内存的临时表最大大小</span><br><span class="line">tmp_table_size &#x3D; 128M</span><br><span class="line"># 创建内存表的最大大小(保持系统默认, 不允许创建过大的内存表)</span><br><span class="line"># 如果有需求当做缓存来用, 可以适当调大此值</span><br><span class="line">max_heap_table_size &#x3D; 16M</span><br><span class="line"># 顺序读, 读入缓冲区大小设置</span><br><span class="line"># 全表扫描次数多的话, 可以调大此值</span><br><span class="line">read_buffer_size &#x3D; 1M</span><br><span class="line"># 随机读, 读入缓冲区大小设置</span><br><span class="line">read_rnd_buffer_size &#x3D; 8M</span><br><span class="line"># 高并发的情况下, 需要减小此值到64K-128K</span><br><span class="line">sort_buffer_size &#x3D; 1M</span><br><span class="line"># 每个查询最大的缓存大小是1M, 最大缓存64M 数据</span><br><span class="line">query_cache_size &#x3D; 64M</span><br><span class="line">query_cache_limit &#x3D; 1M</span><br><span class="line"># 提到 join 的效率</span><br><span class="line">join_buffer_size &#x3D; 16M</span><br><span class="line"># 线程连接重复利用</span><br><span class="line">thread_cache_size &#x3D; 64</span><br><span class="line"></span><br><span class="line">### InnoDB 优化</span><br><span class="line">## 内存利用方面的设置</span><br><span class="line"># 数据缓冲区</span><br><span class="line">innodb_buffer_pool_size&#x3D;2G</span><br><span class="line">## 日志方面设置</span><br><span class="line"># 事务日志大小</span><br><span class="line">innodb_log_file_size &#x3D; 256M</span><br><span class="line"># 日志缓冲区大小</span><br><span class="line">innodb_log_buffer_size &#x3D; 4M</span><br><span class="line"># 事务在内存中的缓冲</span><br><span class="line">innodb_log_buffer_size &#x3D; 3M</span><br><span class="line"># 主库保持系统默认, 事务立即写入磁盘, 不会丢失任何一个事务</span><br><span class="line">innodb_flush_log_at_trx_commit &#x3D; 1</span><br><span class="line"># mysql 的数据文件设置, 初始100, 以10M 自动扩展</span><br><span class="line">innodb_data_file_path &#x3D; ibdata1:100M:autoextend</span><br><span class="line"># 为提高性能, MySQL可以以循环方式将日志文件写到多个文件</span><br><span class="line">innodb_log_files_in_group &#x3D; 3</span><br><span class="line">##其他设置</span><br><span class="line"># 如果库里的表特别多的情况，请增加此值</span><br><span class="line">innodb_open_files &#x3D; 800</span><br><span class="line"># 为每个 InnoDB 表分配单独的表空间</span><br><span class="line">innodb_file_per_table &#x3D; 1</span><br><span class="line"># InnoDB 使用后台线程处理数据页上写 I&#x2F;O（输入）请求的数量</span><br><span class="line">innodb_write_io_threads &#x3D; 8</span><br><span class="line"># InnoDB 使用后台线程处理数据页上读 I&#x2F;O（输出）请求的数量</span><br><span class="line">innodb_read_io_threads &#x3D; 8</span><br><span class="line"># 启用单独的线程来回收无用的数据</span><br><span class="line">innodb_purge_threads &#x3D; 1</span><br><span class="line"># 脏数据刷入磁盘(先保持系统默认, swap 过多使用时, 调小此值, 调小后, 与磁盘交互增多, 性能降低)</span><br><span class="line"># innodb_max_dirty_pages_pct &#x3D; 90</span><br><span class="line"># 事务等待获取资源等待的最长时间</span><br><span class="line">innodb_lock_wait_timeout &#x3D; 120</span><br><span class="line"># 开启 InnoDB 严格检查模式, 不警告, 直接报错</span><br><span class="line">innodb_strict_mode&#x3D;1</span><br><span class="line"># 允许列索引最大达到3072</span><br><span class="line"> innodb_large_prefix &#x3D; on</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line"># 开启快速导出</span><br><span class="line">quick</span><br><span class="line">default-character-set &#x3D; utf8mb4</span><br><span class="line">max_allowed_packet &#x3D; 256M</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line"># 开启 tab 补全</span><br><span class="line">auto-rehash</span><br><span class="line">default-character-set &#x3D; utf8mb4</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;MySQL5.7 在 5.6 版本的基础之上做了大量的优化, 本篇文章开篇将重点围绕经过优化的基于 GTID 的多线程复制和半同步复制的特性介绍, 后续会持续增加 MySQL5.7 的调优参数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure c</summary>
      
    
    
    
    <category term="Mysql" scheme="https://imszz.com/categories/Mysql/"/>
    
    
    <category term="mysql" scheme="https://imszz.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql 安装5.7</title>
    <link href="https://imszz.com/p/d47d8d30/"/>
    <id>https://imszz.com/p/d47d8d30/</id>
    <published>2021-01-25T16:00:00.000Z</published>
    <updated>2021-01-26T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL编译和安装"><a href="#MySQL编译和安装" class="headerlink" title="MySQL编译和安装"></a>MySQL编译和安装</h1><p>##在<code>CentOS7</code>中编译安装<code>MySQL 5.7.21</code>. 依赖和源码包 安装相关的依赖: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc gcc-c++ ncurses ncurses-devel cmake bison openssl-devel -y </span><br><span class="line">yum install make cmake gcc gcc-c++ bison bison-devel ncurses ncurses-devel autoconf automake</span><br></pre></td></tr></table></figure><p>下载<code>MySQL 5.7.32</code>源码包和依赖<code>boost</code>, <code>MySQL 5.7.32</code>依赖<code>boost 1.59.0</code>: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -o boost_1_59_0.tar.gz https:&#x2F;&#x2F;jaist.dl.sourceforge.net&#x2F;project&#x2F;boost&#x2F;boost&#x2F;1.59.0&#x2F;boost_1_59_0.tar.gz </span><br><span class="line">#curl -o mysql-5.7.32.tar.gz https:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;Downloads&#x2F;MySQL-5.7&#x2F;mysql-5.7.32.tar.gz</span><br><span class="line">如果拉取不到使用下方下载地址 ：</span><br><span class="line">https:&#x2F;&#x2F;downloads.mysql.com&#x2F;archives&#x2F;community&#x2F;</span><br></pre></td></tr></table></figure><p>解压下载的包: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 进入下载的路径 </span><br><span class="line"># 解压到&#x2F;usr&#x2F;local&#x2F;目录</span><br><span class="line">tar -xzvf boost_1_59_0.tar.gz -C &#x2F;usr&#x2F;local&#x2F; </span><br><span class="line"># 解压到当前目录 </span><br><span class="line">tar -xzvf mysql-5.7.32.tar.gz</span><br></pre></td></tr></table></figure><h1 id="创建用户和组"><a href="#创建用户和组" class="headerlink" title="创建用户和组"></a>创建用户和组</h1><p>创建<code>MySQL</code>用户和组, 并且用户不能登陆: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd -r mysql &amp;&amp; useradd -r -g mysql -s &#x2F;sbin&#x2F;nologin -M mysql </span><br></pre></td></tr></table></figure><h1 id="创建相关的目录"><a href="#创建相关的目录" class="headerlink" title="创建相关的目录"></a>创建相关的目录</h1><h3 id="创建数据目录"><a href="#创建数据目录" class="headerlink" title="创建数据目录"></a>创建数据目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;home&#x2F;mysql&#x2F;data</span><br><span class="line"></span><br><span class="line">mkdir -p &#x2F;home&#x2F;mysql&#x2F;logs</span><br><span class="line"></span><br><span class="line">mkdir -p &#x2F;usr&#x2F;local&#x2F;mysql </span><br><span class="line"></span><br><span class="line">mkdir -p &#x2F;home&#x2F;mysql&#x2F;temp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chown -Rf mysql:mysql &#x2F;usr&#x2F;local&#x2F;mysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chown -Rf mysql:mysql &#x2F;home&#x2F;mysql</span><br></pre></td></tr></table></figure><h1 id="预编译"><a href="#预编译" class="headerlink" title="预编译"></a>预编译</h1><p>使用各种参数, 预编译源代码. 进入解压的<code>MySQL</code>源码目录, 执行以下命令: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake -DCMAKE_INSTALL_PREFIX&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql -DMYSQL_DATADIR&#x3D;&#x2F;home&#x2F;mysql&#x2F;data -DSYSCONFDIR&#x3D;&#x2F;etc -DMYSQL_UNIX_ADDR&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;mysqld.sock -DEXTRA_CHARSETS&#x3D;all -DDEFAULT_CHARSET&#x3D;utf8mb4 -DDEFAULT_COLLATION&#x3D;utf8mb4_unicode_ci -DWITH_MYISAM_STORAGE_ENGINE&#x3D;1 -DWITH_INNOBASE_STORAGE_ENGINE&#x3D;1 -DWITH_PARTITION_STORAGE_ENGINE&#x3D;1 -DWITH_ARCHIVE_STORAGE_ENGINE&#x3D;1 -DWITH_BLACKHOLE_STORAGE_ENGINE&#x3D;1 -DENABLED_LOCAL_INFILE&#x3D;1 -DENABLED_PROFILING&#x3D;1 -DMYSQL_TCP_PORT&#x3D;3306 -DWITH_DEBUG&#x3D;0 -DDOWNLOAD_BOOST&#x3D;1 -DWITH_BOOST&#x3D;&#x2F;usr&#x2F;local&#x2F;boost_1_59_0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">DCMAKE_INSTALL_PREFIX&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql :安装路径</span><br><span class="line">DMYSQL_DATADIR&#x3D;&#x2F;data&#x2F;mysql :数据文件存放位置</span><br><span class="line">DSYSCONFDIR&#x3D;&#x2F;etc :my.cnf路径</span><br><span class="line">DMYSQL_UNIX_ADDR&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;mysqld.sock :连接数据库socket路径 </span><br><span class="line">DEXTRA_CHARSETS&#x3D;all :安装所有的字符集</span><br><span class="line">DDEFAULT_CHARSET&#x3D;utf8mb4 :默认字符</span><br><span class="line">DDEFAULT_COLLATION&#x3D;utf8mb4_unicode_ci :排序集</span><br><span class="line">DWITH_MYISAM_STORAGE_ENGINE&#x3D;1 :支持MyIASM引擎</span><br><span class="line">DWITH_INNOBASE_STORAGE_ENGINE&#x3D;1 :支持InnoDB引擎</span><br><span class="line">DWITH_PARTITION_STORAGE_ENGINE&#x3D;1 :安装支持数据库分区</span><br><span class="line">DENABLED_LOCAL_INFILE&#x3D;1 :允许从本地导入数据</span><br><span class="line">DENABLED_PROFILING&#x3D;1 :</span><br><span class="line">DMYSQL_TCP_PORT&#x3D;3306 :端口</span><br><span class="line">DWITH_DEBUG&#x3D;0 :</span><br><span class="line">DDOWNLOAD_BOOST&#x3D;1 :允许下载</span><br><span class="line">DWITH_BOOST&#x3D;&#x2F;usr&#x2F;local&#x2F;boost_1_59_0 :本地boost路径 </span><br></pre></td></tr></table></figure><h1 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h1><p>预编译完成后, 执行下面的命令编译, 安装: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 指定CPU数量编译 </span><br><span class="line">make -j &#96;grep processor &#x2F;proc&#x2F;cpuinfo | wc -l&#96; &amp;&amp; make install</span><br></pre></td></tr></table></figure><h1 id="添加开机自启"><a href="#添加开机自启" class="headerlink" title="添加开机自启"></a>添加开机自启</h1><p>对目录修改权限, 添加<code>service/systemd</code>服务: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql:mysql &#x2F;usr&#x2F;local&#x2F;mysql </span><br><span class="line">cp &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;support-files&#x2F;mysql.server &#x2F;etc&#x2F;init.d&#x2F;mysql</span><br><span class="line">chmod +x &#x2F;etc&#x2F;init.d&#x2F;mysql</span><br><span class="line"># 开机自启 </span><br><span class="line">chkconfig --add mysql</span><br><span class="line">chkconfig mysql on </span><br></pre></td></tr></table></figure><h1 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h1><p>将<code>/usr/local/mysql/bin</code>添加进入<code>环境变量</code>, 或者直接使用<code>软链接</code>的方式链到<code>/usr/local/bin</code>下: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 添加到环境变量 </span><br><span class="line">echo &quot;&quot; &gt;&gt; &#x2F;etc&#x2F;bashrc </span><br><span class="line">echo &quot;export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin:$PATH&quot; &gt;&gt; &#x2F;etc&#x2F;bashrc </span><br><span class="line">echo &quot;&quot; &gt;&gt; &#x2F;etc&#x2F;bashrc </span><br><span class="line">source ~&#x2F;.bashrc </span><br><span class="line"></span><br><span class="line"># 使用软链接 </span><br><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;* &#x2F;usr&#x2F;local&#x2F;bin&#x2F;</span><br></pre></td></tr></table></figure><h1 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h1><p>以上都完成后, 还不能启动MySQL, 如果非要启动, 会报错. 需要初始化数据库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysqld --initialize --user&#x3D;mysql --basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql --datadir&#x3D;&#x2F;home&#x2F;mysql&#x2F;data</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--user :指定用户 </span><br><span class="line">--basedir :mysql所在目录 </span><br><span class="line">--datadir :mysql数据库和表所在的目录,以及PID文件 </span><br></pre></td></tr></table></figure><p>初始化后, 会有一行提示, 冒号后面的是初始密码<code>root@localhost: password</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A temporary password is generated for root@localhost: xKefZvib13)5 </span><br></pre></td></tr></table></figure><h1 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h1><p>以上都配置完成, 就可以启动服务了: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 使用service </span><br><span class="line">service mysql start </span><br><span class="line"></span><br><span class="line"># 使用systemd </span><br><span class="line">systemctl daemon-reload </span><br><span class="line">systemctl start mysql</span><br></pre></td></tr></table></figure><h1 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h1><p>将初始密码修改成自己的密码, 直接在<code>shell</code>中输入命令: <code>mysqladmin -uroot -p&#39;old_pass&#39; password &#39;new_pass&#39;</code> </p><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p>默认<code>MySQL不</code>需要配置文件, 编译时已经配置好了, 但是也可以使用配置文件, 指定<code>log</code>的位置, 编辑<code>vim /etc/my.cnf</code>, 将以下内容添加到文件中:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line"></span><br><span class="line">port &#x3D; 3306</span><br><span class="line"></span><br><span class="line">socket &#x3D; &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;mysql.sock</span><br><span class="line"></span><br><span class="line">default-character-set&#x3D;utf8mb4</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set&#x3D;utf8mb4</span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">character-set-client-handshake&#x3D;FALSE</span><br><span class="line"></span><br><span class="line">character-set-server&#x3D;utf8mb4</span><br><span class="line"></span><br><span class="line">collation-server&#x3D;utf8mb4_unicode_ci</span><br><span class="line"></span><br><span class="line">init_connect&#x3D;&#39;SET NAMES utf8mb4&#39;</span><br><span class="line"></span><br><span class="line">#character-set-server &#x3D; utf8</span><br><span class="line"></span><br><span class="line">#collation-server &#x3D; utf8_general_ci</span><br><span class="line"></span><br><span class="line">skip-external-locking</span><br><span class="line"></span><br><span class="line">skip-name-resolve</span><br><span class="line"></span><br><span class="line">user &#x3D; mysql</span><br><span class="line"></span><br><span class="line">port &#x3D; 3306</span><br><span class="line"></span><br><span class="line">basedir &#x3D; &#x2F;usr&#x2F;local&#x2F;mysql</span><br><span class="line"></span><br><span class="line">datadir &#x3D; &#x2F;home&#x2F;mysql&#x2F;data</span><br><span class="line"></span><br><span class="line">tmpdir &#x3D; &#x2F;home&#x2F;mysql&#x2F;temp</span><br><span class="line"></span><br><span class="line"># server_id &#x3D; .....</span><br><span class="line"></span><br><span class="line">socket &#x3D; &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;mysql.sock</span><br><span class="line"></span><br><span class="line">log-error &#x3D; &#x2F;home&#x2F;mysql&#x2F;logs&#x2F;mysql_error.log</span><br><span class="line"></span><br><span class="line">pid-file &#x3D; &#x2F;home&#x2F;mysql&#x2F;mysql.pid</span><br><span class="line"></span><br><span class="line">open_files_limit &#x3D; 10240</span><br><span class="line"></span><br><span class="line">back_log &#x3D; 600</span><br><span class="line"></span><br><span class="line">max_connections&#x3D;500</span><br><span class="line"></span><br><span class="line">max_connect_errors &#x3D; 6000</span><br><span class="line"></span><br><span class="line">wait_timeout&#x3D;605800</span><br><span class="line"></span><br><span class="line">#open_tables &#x3D; 600</span><br><span class="line"></span><br><span class="line">#table_cache &#x3D; 650</span><br><span class="line"></span><br><span class="line">#opened_tables &#x3D; 630</span><br><span class="line"></span><br><span class="line">max_allowed_packet &#x3D; 32M</span><br><span class="line"></span><br><span class="line">sort_buffer_size &#x3D; 4M</span><br><span class="line"></span><br><span class="line">join_buffer_size &#x3D; 4M</span><br><span class="line"></span><br><span class="line">thread_cache_size &#x3D; 300</span><br><span class="line"></span><br><span class="line">query_cache_type &#x3D; 1</span><br><span class="line"></span><br><span class="line">query_cache_size &#x3D; 256M</span><br><span class="line"></span><br><span class="line">query_cache_limit &#x3D; 2M</span><br><span class="line"></span><br><span class="line">query_cache_min_res_unit &#x3D; 16k</span><br><span class="line"></span><br><span class="line">tmp_table_size &#x3D; 256M</span><br><span class="line"></span><br><span class="line">max_heap_table_size &#x3D; 256M</span><br><span class="line"></span><br><span class="line">key_buffer_size &#x3D; 256M</span><br><span class="line"></span><br><span class="line">read_buffer_size &#x3D; 1M</span><br><span class="line"></span><br><span class="line">read_rnd_buffer_size &#x3D; 16M</span><br><span class="line"></span><br><span class="line">bulk_insert_buffer_size &#x3D; 64M</span><br><span class="line"></span><br><span class="line">lower_case_table_names&#x3D;1</span><br><span class="line"></span><br><span class="line">default-storage-engine &#x3D; INNODB</span><br><span class="line"></span><br><span class="line">innodb_buffer_pool_size &#x3D;2G</span><br><span class="line"></span><br><span class="line">innodb_log_buffer_size &#x3D; 32M</span><br><span class="line"></span><br><span class="line">innodb_log_file_size &#x3D; 128M</span><br><span class="line"></span><br><span class="line">innodb_flush_method &#x3D;O_DIRECT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#####################</span><br><span class="line"></span><br><span class="line">#thread_concurrency &#x3D; 32 5.7不支持</span><br><span class="line"></span><br><span class="line">long_query_time&#x3D; 2</span><br><span class="line"></span><br><span class="line">slow-query-log&#x3D;on</span><br><span class="line"></span><br><span class="line">slow-query-log-file &#x3D;&#x2F;home&#x2F;mysql&#x2F;logs&#x2F;mysql-slow.log</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line"></span><br><span class="line">quick</span><br><span class="line"></span><br><span class="line">max_allowed_packet &#x3D; 32M</span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line"></span><br><span class="line">log-error&#x3D;&#x2F;var&#x2F;log&#x2F;mysqld.log</span><br><span class="line"></span><br><span class="line">pid-file&#x3D;&#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.pid</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MySQL编译和安装&quot;&gt;&lt;a href=&quot;#MySQL编译和安装&quot; class=&quot;headerlink&quot; title=&quot;MySQL编译和安装&quot;&gt;&lt;/a&gt;MySQL编译和安装&lt;/h1&gt;&lt;p&gt;##在&lt;code&gt;CentOS7&lt;/code&gt;中编译安装&lt;code&gt;MySQ</summary>
      
    
    
    
    <category term="Mysql" scheme="https://imszz.com/categories/Mysql/"/>
    
    
    <category term="mysql" scheme="https://imszz.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql数据更改存储路径</title>
    <link href="https://imszz.com/p/57aae221/"/>
    <id>https://imszz.com/p/57aae221/</id>
    <published>2021-01-25T16:00:00.000Z</published>
    <updated>2021-01-26T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在初次安装mysql 的时候将数据库目录安装在了系统盘。（第一个磁盘）使用了一段时间之后数据库存储量变大，快将20GB的存放空间占满了。因此必须将存放数据空间换地方了。下面是简单的操作。</p></blockquote><h1 id="检查mysql数据库存放目录"><a href="#检查mysql数据库存放目录" class="headerlink" title="检查mysql数据库存放目录"></a>检查mysql数据库存放目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -prootadmin</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#进入数据库</span><br><span class="line"></span><br><span class="line">show variables like &#39;%dir%&#39;;</span><br><span class="line"></span><br><span class="line">#查看sql存储路径</span><br><span class="line"></span><br><span class="line">（查看datadir 那一行所指的路径）</span><br><span class="line"></span><br><span class="line">quit;</span><br></pre></td></tr></table></figure><h1 id="停止mysql服务"><a href="#停止mysql服务" class="headerlink" title="停止mysql服务"></a>停止mysql服务</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql stop</span><br></pre></td></tr></table></figure><h1 id="创建新的数据库存放目录"><a href="#创建新的数据库存放目录" class="headerlink" title="创建新的数据库存放目录"></a>创建新的数据库存放目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;data&#x2F;mysql</span><br></pre></td></tr></table></figure><h1 id="移动-复制之前存放数据库目录文件，到新的数据库存放目录位置"><a href="#移动-复制之前存放数据库目录文件，到新的数据库存放目录位置" class="headerlink" title="移动/复制之前存放数据库目录文件，到新的数据库存放目录位置"></a>移动/复制之前存放数据库目录文件，到新的数据库存放目录位置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -R &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;* &#x2F;data&#x2F;mysql&#x2F; #或mv &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;* &#x2F;data&#x2F;mysql</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="修改mysql数据库目录权限以及配置文件"><a href="#修改mysql数据库目录权限以及配置文件" class="headerlink" title="修改mysql数据库目录权限以及配置文件"></a>修改mysql数据库目录权限以及配置文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">chown mysql:mysql -R &#x2F;data&#x2F;mysql&#x2F;</span><br><span class="line"></span><br><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line"></span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql （制定为新的数据存放目录）</span><br><span class="line"></span><br><span class="line">vim &#x2F;etc&#x2F;init.d&#x2F;mysql</span><br><span class="line"></span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="启动数据库服务"><a href="#启动数据库服务" class="headerlink" title="启动数据库服务"></a>启动数据库服务</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld start</span><br></pre></td></tr></table></figure><p>说明：根据以上的简单6步操作，已经成功的数据库目录更换路径了。</p><blockquote><p>备注：以上系统为CentOS Linux release 7.8.2003 (Core)  mysql-5.7.32 编译安装</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在初次安装mysql 的时候将数据库目录安装在了系统盘。（第一个磁盘）使用了一段时间之后数据库存储量变大，快将20GB的存放空间占满了。因此必须将存放数据空间换地方了。下面是简单的操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;检查my</summary>
      
    
    
    
    <category term="Mysql" scheme="https://imszz.com/categories/Mysql/"/>
    
    
    <category term="mysql" scheme="https://imszz.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>查看LINUX发行版的名称及其版本号</title>
    <link href="https://imszz.com/p/2399c152/"/>
    <id>https://imszz.com/p/2399c152/</id>
    <published>2021-01-25T16:00:00.000Z</published>
    <updated>2021-01-26T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>查看LINUX发行版的名称及其版本号的命令,这些信息对于添加正确的软件更新源很有用，而当你只能在命令行下工作的时候，下面的方法可以帮忙。</p><h2 id="一、查看Linux内核版本命令（两种方法）："><a href="#一、查看Linux内核版本命令（两种方法）：" class="headerlink" title="一、查看Linux内核版本命令（两种方法）："></a>一、查看Linux内核版本命令（两种方法）：</h2><p>1、<code>cat /proc/version</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat &#x2F;proc&#x2F;version</span><br><span class="line">Linux version 2.6.18-194.8.1.el5.centos.plus</span><br><span class="line">(mockbuild@builder17.centos.org) (gcc version 4.1.220080704</span><br><span class="line">(Red Hat 4.1.2-48)) #1 SMP Wed Jul 7 11:50:45 EDT 2010</span><br></pre></td></tr></table></figure><p>2、<code>uname -a</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# uname -a</span><br><span class="line">Linux localhost.localdomain 2.6.18-194.8.1.el5.centos.plus </span><br><span class="line">#1 SMP Wed Jul 7 11:50:45 EDT 2010 i686 i686 i386 GNU&#x2F;Linux</span><br></pre></td></tr></table></figure><h2 id="二、查看Linux系统版本的命令（3种方法）："><a href="#二、查看Linux系统版本的命令（3种方法）：" class="headerlink" title="二、查看Linux系统版本的命令（3种方法）："></a>二、查看Linux系统版本的命令（3种方法）：</h2><p>1、<code>lsb_release -a</code>，即可列出所有版本信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# lsb_release -a</span><br><span class="line">LSB Version: :core-3.1-ia32:core-3.1-noarch:graphics-3.1-ia32:graphics-3.1-noarch</span><br><span class="line">Distributor ID: CentOS</span><br><span class="line">Description: CentOS release 6.5 (Final)</span><br><span class="line">Release: 6.5</span><br><span class="line">Codename: Final</span><br></pre></td></tr></table></figure><p>这个命令适用于所有的Linux发行版，包括Redhat、SuSE、Debian…等发行版。</p><p>2、<code>cat /etc/redhat-release</code>，这种方法只适合Redhat系的Linux：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat &#x2F;etc&#x2F;redhat-release</span><br><span class="line">CentOS release 6.7 (Final)</span><br></pre></td></tr></table></figure><p>3、<code>cat /etc/issue</code>，此命令也适用于所有的Linux发行版。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat &#x2F;etc&#x2F;issue</span><br><span class="line">CentOS release 6.7 (Final)</span><br><span class="line">Kernel \r on an \m</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;查看LINUX发行版的名称及其版本号的命令,这些信息对于添加正确的软件更新源很有用，而当你只能在命令行下工作的时候，下面的方法可以帮忙。&lt;/p&gt;
&lt;h2 id=&quot;一、查看Linux内核版本命令（两种方法）：&quot;&gt;&lt;a href=&quot;#一、查看Linux内核版本命令（两种方法）：</summary>
      
    
    
    
    <category term="linux" scheme="https://imszz.com/categories/linux/"/>
    
    
    <category term="linux" scheme="https://imszz.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>解决github图片不显示问题</title>
    <link href="https://imszz.com/p/32e6fc54/"/>
    <id>https://imszz.com/p/32e6fc54/</id>
    <published>2021-01-13T16:00:00.000Z</published>
    <updated>2021-01-14T02:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>修改hosts</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Windows</span><br><span class="line"></span><br><span class="line">C:\Windows\System32\drivers\etc\hosts</span><br><span class="line"></span><br><span class="line">Mac</span><br><span class="line"></span><br><span class="line">vim &#x2F;etc&#x2F;hosts</span><br></pre></td></tr></table></figure><p>在文件末尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># GitHub Start </span><br><span class="line">192.30.253.112    Build software better, together </span><br><span class="line">192.30.253.119    gist.github.com</span><br><span class="line">151.101.184.133    assets-cdn.github.com</span><br><span class="line">151.101.184.133    raw.githubusercontent.com</span><br><span class="line">151.101.184.133    gist.githubusercontent.com</span><br><span class="line">151.101.184.133    cloud.githubusercontent.com</span><br><span class="line">151.101.184.133    camo.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars0.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars1.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars2.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars3.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars4.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars5.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars6.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars7.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars8.githubusercontent.com</span><br><span class="line"></span><br><span class="line"># GitHub End</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;修改hosts&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;</summary>
      
    
    
    
    <category term="Github" scheme="https://imszz.com/categories/Github/"/>
    
    
    <category term="Github" scheme="https://imszz.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>GitHub 图床的正确用法，通过 jsDelivr CDN 全球加速</title>
    <link href="https://imszz.com/p/7fa69db0/"/>
    <id>https://imszz.com/p/7fa69db0/</id>
    <published>2021-01-13T12:46:25.000Z</published>
    <updated>2021-01-13T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建一个-GitHub-公共仓库作为图床仓库，上传提交图片到仓库中"><a href="#创建一个-GitHub-公共仓库作为图床仓库，上传提交图片到仓库中" class="headerlink" title="创建一个 GitHub 公共仓库作为图床仓库，上传提交图片到仓库中"></a>创建一个 GitHub 公共仓库作为图床仓库，上传提交图片到仓库中</h2><p>在要使用 GitHub 图床图片的地方将链接换为 </p><div class="note primary no-icon flat"><p><a href="https://cdn.jsdelivr.net/gh/%7Buser%7D/%7Brepo%7D/%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84">https://cdn.jsdelivr.net/gh/{user}/{repo}/图片路径</a></p></div><h3 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>比如 GitHub 官方仓库 <code>github/explore</code> 下话题 GitHub 图片原始路径是：</p><div class="note default flat"><p><a href="https://github.com/weilain/cdn-photo/blob/main/banner/bannar.jpg">https://github.com/weilain/cdn-photo/blob/main/banner/bannar.jpg</a></p></div><p>访问起来贼慢。</p><h2 id="使用-jsDelivr-加速后的地址："><a href="#使用-jsDelivr-加速后的地址：" class="headerlink" title="使用 jsDelivr 加速后的地址："></a>使用 jsDelivr 加速后的地址：</h2><div class="note success flat"><p><a href="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/banner/bannar.jpg">https://cdn.jsdelivr.net/gh/weilain/cdn-photo/banner/bannar.jpg</a> </p></div><p>访问速度飞起，享受 <code>jsDelivr</code> 提供的全球 <code>CDN</code> 加速。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/jsdelivr-sdy8y2.png" alt="github--lena"></p><p>hexo 内容 markdown 写法</p><h2 id="文章内引用"><a href="#文章内引用" class="headerlink" title="文章内引用"></a>文章内引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![github--lena](https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;weilain&#x2F;cdn-photo&#x2F;img&#x2F;3xuci.gif)</span><br></pre></td></tr></table></figure><h2 id="封面引用"><a href="#封面引用" class="headerlink" title="封面引用"></a>封面引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cover: &#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;weilain&#x2F;cdn-photo&#x2F;covers&#x2F;gitlab2.png&#39;</span><br></pre></td></tr></table></figure><p>jsDelivr 还支持加载指定文件版本和自动压缩 JS，具体用法可以参考<a href="https://www.jsdelivr.com/features?utm_source=ld246.com#gh">官方教程</a>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;创建一个-GitHub-公共仓库作为图床仓库，上传提交图片到仓库中&quot;&gt;&lt;a href=&quot;#创建一个-GitHub-公共仓库作为图床仓库，上传提交图片到仓库中&quot; class=&quot;headerlink&quot; title=&quot;创建一个 GitHub 公共仓库作为图床仓库，上传提</summary>
      
    
    
    
    <category term="Github" scheme="https://imszz.com/categories/Github/"/>
    
    
    <category term="jsDelivr" scheme="https://imszz.com/tags/jsDelivr/"/>
    
    <category term="CDN" scheme="https://imszz.com/tags/CDN/"/>
    
  </entry>
  
  <entry>
    <title>google-authenticator</title>
    <link href="https://imszz.com/p/6b915d25/"/>
    <id>https://imszz.com/p/6b915d25/</id>
    <published>2020-11-28T12:46:25.000Z</published>
    <updated>2020-11-29T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装方式一："><a href="#安装方式一：" class="headerlink" title="安装方式一："></a>安装方式一：</h2><h3 id="Liunx"><a href="#Liunx" class="headerlink" title="Liunx"></a>Liunx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install google-authenticator </span><br></pre></td></tr></table></figure><h3 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo add-apt-repository universe</span><br><span class="line">sudo apt install libpam-google-authenticator</span><br></pre></td></tr></table></figure><h2 id="安装方式二："><a href="#安装方式二：" class="headerlink" title="安装方式二："></a>安装方式二：</h2><h3 id="Liunx-1"><a href="#Liunx-1" class="headerlink" title="Liunx"></a>Liunx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y git make gcc libtool pam-devel qrencode ntpdate</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;google-authenticator-libpam.git</span><br><span class="line">cd   google-authenticator-libpam&#x2F;</span><br><span class="line">.&#x2F;bootstrap.sh</span><br><span class="line">.&#x2F;configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="ubuntu-1"><a href="#ubuntu-1" class="headerlink" title="ubuntu"></a>ubuntu</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get  -y install autoconf  git make gcc libtool libpam0g-dev qrencode ntpdate</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;google-authenticator-libpam.git</span><br><span class="line">cd   google-authenticator-libpam&#x2F;</span><br><span class="line">.&#x2F;bootstrap.sh</span><br><span class="line">.&#x2F;configure</span><br><span class="line">sudo make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h2 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config    #ubuntu   sudo</span><br></pre></td></tr></table></figure><h3 id="修改如下的配置项："><a href="#修改如下的配置项：" class="headerlink" title="修改如下的配置项："></a>修改如下的配置项：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ChallengeResponseAuthentication yes</span><br><span class="line">UsePAM yes</span><br></pre></td></tr></table></figure><h3 id="配置PAM"><a href="#配置PAM" class="headerlink" title="配置PAM"></a>配置PAM</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;pam.d&#x2F;sshd      #ubuntu   sudo</span><br></pre></td></tr></table></figure><h3 id="Liunx-2"><a href="#Liunx-2" class="headerlink" title="Liunx"></a>Liunx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#%PAM-1.0</span><br><span class="line">auth      required     pam_google_authenticator.so   #添加至第一行</span><br></pre></td></tr></table></figure><h3 id="ubuntu-2"><a href="#ubuntu-2" class="headerlink" title="ubuntu"></a>ubuntu</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth      required      pam_google_authenticator.so       #末尾添加</span><br></pre></td></tr></table></figure><h2 id="重启ssh"><a href="#重启ssh" class="headerlink" title="重启ssh"></a>重启ssh</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd     #ubuntu   sudo</span><br></pre></td></tr></table></figure><h2 id="配置google-authenticator"><a href="#配置google-authenticator" class="headerlink" title="配置google authenticator"></a>配置google authenticator</h2><p>首要条件：先切换到你需要设置的帐号 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">google-authenticator</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Do you want authentication tokens to be time-based (y&#x2F;n)  #基于时间生成身份验证</span><br><span class="line">#已经安装qrencode会产生一个二维码，二维码连接也可以URL显示</span><br><span class="line">Your new secret key is ：***********   # 密钥key</span><br><span class="line">Your verification code is : #code 动态码</span><br><span class="line">Your emergency scratch codes are:  #  生成5 个紧急救助码</span><br><span class="line">Do you want me to update your &quot;&#x2F;root&#x2F;.google_authenticator&quot; file? (y&#x2F;n)  #一直确认下去</span><br><span class="line"># 生成了一个 .google_authenticator 文件</span><br><span class="line"></span><br><span class="line">your chances to notice or even prevent man-in-the-middle attacks (y&#x2F;n)  #一直确认下去</span><br><span class="line">Do you want to do so? (y&#x2F;n)   #一直确认下去</span><br><span class="line">Do you want to enable rate-limiting? (y&#x2F;n)  #设置完成</span><br><span class="line"></span><br><span class="line">#上面的意思大概为：禁止多次使用相同的身份验证，限制每30秒登录一次，移动端每30秒更新一次，移动端和客户端时间误差30秒，30秒内不能超过3次登录。</span><br></pre></td></tr></table></figure><p>如果需要删除一个用户的Google验证，删除这个用户下产生的<code>home/.google_authenticator</code>文件即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装方式一：&quot;&gt;&lt;a href=&quot;#安装方式一：&quot; class=&quot;headerlink&quot; title=&quot;安装方式一：&quot;&gt;&lt;/a&gt;安装方式一：&lt;/h2&gt;&lt;h3 id=&quot;Liunx&quot;&gt;&lt;a href=&quot;#Liunx&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="奇怪的知识点" scheme="https://imszz.com/categories/%E5%A5%87%E6%80%AA%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="google" scheme="https://imszz.com/tags/google/"/>
    
    <category term="authenticator" scheme="https://imszz.com/tags/authenticator/"/>
    
  </entry>
  
  <entry>
    <title>awk和sed截取nginx和tomcat时间段日志</title>
    <link href="https://imszz.com/p/31397f6f/"/>
    <id>https://imszz.com/p/31397f6f/</id>
    <published>2020-11-25T12:46:25.000Z</published>
    <updated>2020-11-26T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="nginx日志截取示例"><a href="#nginx日志截取示例" class="headerlink" title="nginx日志截取示例"></a>nginx日志截取示例</h4><p>日志路径：/usr/local/nginx/logs, 截取access.log中2019年3月24日17点00~02之间的日志：<br>　写法1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat access.log | awk &#39;$4 &gt;&#x3D;&quot;[24&#x2F;Mar&#x2F;2019:17:00:00&quot; &amp;&amp; $4 &lt;&#x3D;&quot;[24&#x2F;Mar&#x2F;2019:17:02:00&quot;&#39;</span><br></pre></td></tr></table></figure><p>　写法2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat access.log | egrep &quot;24&#x2F;Mar&#x2F;2019&quot; | awk -F&#39;:&#39; &#39;$2 &#x3D; 17 &amp;&amp; $3 &gt;&#x3D; 00 &amp;&amp; $3 &lt;&#x3D; 02&#39;</span><br></pre></td></tr></table></figure><p>　写法3：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat access.log |egrep &quot;24&#x2F;Mar&#x2F;2019&quot; |sed -n &#39;&#x2F;17:00:00&#x2F;,&#x2F;17:02:00&#x2F;p&#39;</span><br></pre></td></tr></table></figure><h4 id="tomcat日志截取示例"><a href="#tomcat日志截取示例" class="headerlink" title="tomcat日志截取示例"></a>tomcat日志截取示例</h4><p>日志路径：/usr/local/tomcat/logs, 截取catalina.out中2019年3月24日17点00~02之间的日志：<br>    写法1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n &#39;&#x2F;2019-03-24 17:00:&#x2F;,&#x2F;2019-03-24 17:02:&#x2F;p&#39;  catalina.out</span><br></pre></td></tr></table></figure><p>  写法2：<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat catalina.out| egrep &quot;2019-03-24&quot; | awk -F&#39;:&#39; &#39;$2 &#x3D; 17 &amp;&amp; $3 &gt;&#x3D; 00 &amp;&amp; $3 &lt;&#x3D; 02&#39;</span><br></pre></td></tr></table></figure></p><h4 id="awk统计nginx日志的ip访问量"><a href="#awk统计nginx日志的ip访问量" class="headerlink" title="awk统计nginx日志的ip访问量"></a>awk统计nginx日志的ip访问量</h4><pre><code>nginx日志事先截取一部分：tail -n500 access.log &gt;access.log1</code></pre><p>第一种：使用awk sort，$1表示以空格为分割符的第一列，也就是文件中的ip地址，使用sort对结果排序，uniq -c进行计数，最后sort -n是以“数字”来排序，针对统计后的访问次数来排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &#39;&#123;print $1&#125;&#39; access.log1|sort |uniq -c|sort -n</span><br></pre></td></tr></table></figure><p>第二种：awk for,即数组; 默认变量为0，对每一行的$1作为key，count数组++，实现ip的计数。计数结束后END。然后把结果打印出来，最后sort -n以“数字”排序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &#39;&#123;count[$1]++;&#125;END&#123;for(i in count)&#123;printf(&quot;%s\t%s\n&quot;, count[i], i);&#125;&#125;&#39; access.log1|sort -n</span><br></pre></td></tr></table></figure><h4 id="取nginx日志访问接口次数"><a href="#取nginx日志访问接口次数" class="headerlink" title="取nginx日志访问接口次数"></a>取nginx日志访问接口次数</h4><p>通过上面的方法将某个时间段日志取出来，查询该时间段访问接口最多的前10：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"> #统计接口的访问次数</span><br><span class="line"> TODAY&#x3D;&#96;date +%d&#x2F;%b&#x2F;%Y&#96;</span><br><span class="line"> cat $1 |awk -F &#39;&quot;&#39; &#39;&#123;print $2&#125;&#39;|awk &#39;&#123;split($2,res,&quot;?&quot;) ; print res[1] &#125;&#39;|sort|uniq -c|sort -gr |head -n10</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;nginx日志截取示例&quot;&gt;&lt;a href=&quot;#nginx日志截取示例&quot; class=&quot;headerlink&quot; title=&quot;nginx日志截取示例&quot;&gt;&lt;/a&gt;nginx日志截取示例&lt;/h4&gt;&lt;p&gt;日志路径：/usr/local/nginx/logs, 截取acce</summary>
      
    
    
    
    <category term="Nginx" scheme="https://imszz.com/categories/Nginx/"/>
    
    <category term="linux" scheme="https://imszz.com/categories/Nginx/linux/"/>
    
    
    <category term="awk" scheme="https://imszz.com/tags/awk/"/>
    
    <category term="sed" scheme="https://imszz.com/tags/sed/"/>
    
  </entry>
  
  <entry>
    <title>如何注册谷歌账号，遇到“此电话号码无法用于进行验证”怎么办</title>
    <link href="https://imszz.com/p/4b638dc2/"/>
    <id>https://imszz.com/p/4b638dc2/</id>
    <published>2020-10-25T13:25:23.000Z</published>
    <updated>2020-10-29T13:25:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1步：找到谷歌账号注册入口"><a href="#第1步：找到谷歌账号注册入口" class="headerlink" title="第1步：找到谷歌账号注册入口"></a>第1步：找到谷歌账号注册入口</h2><p>打开Google，在谷歌搜索的主界面，找到右上角的登录账号按钮。我这里浏览器语言是中文的，所以是显示中文，如果是默认英文语言的浏览器，打开就会显示英文，但按钮位置是相同的。<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-1.png" alt="github--lena"></p><p>点击“登录”按钮后，在新跳转的页面点击“创建账号”<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-2.png" alt="github--lena"><br>没有特别需求，点击“为我自己创建”即可。<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-3.png" alt="github--lena"></p><h2 id="第2步：填写谷歌账号申请资料"><a href="#第2步：填写谷歌账号申请资料" class="headerlink" title="第2步：填写谷歌账号申请资料"></a>第2步：填写谷歌账号申请资料</h2><p>按提示要求，填写相应的账号资料，填写完成后，点击“下一步”按钮。<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-4.png" alt="github--lena"></p><h2 id="第3步：验证手机号码"><a href="#第3步：验证手机号码" class="headerlink" title="第3步：验证手机号码"></a>第3步：验证手机号码</h2><p>为了防止滥用以及保护账号安全，Google账号需要绑定你的手机号码，点击国旗位置，可以切换到不同国家地区。根据自身手机号码所在地区，切换到对应的国家位置，然后填写手机号，进行下一步验证。<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-5.png" alt="github--lena"></p><h2 id="第4步：遇到“此电话号码无法用于进行验证”该怎么办"><a href="#第4步：遇到“此电话号码无法用于进行验证”该怎么办" class="headerlink" title="第4步：遇到“此电话号码无法用于进行验证”该怎么办"></a>第4步：遇到“此电话号码无法用于进行验证”该怎么办</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-6.png" alt="github--lena"><br>号码无法验证，就无法完成账号的注册。经过多次测试，我们发现这个问题跟浏览器的语言设置有关系。语言设置为中文的浏览器，就会遇到这个问题。解决的方法也很简单，以谷歌Chrome浏览器为例，我们看下该如何设置。</p><p>首先，打开谷歌浏览器，找到“设置”入口：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-7.png" alt="github--lena"></p><p>然后，在设置界面左侧栏，查看高级功能：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-8.png" alt="github--lena"></p><p>在高级功能中，找到“语言”选项：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-9.png" alt="github--lena"></p><p>点击下拉标签，查看语言设置：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-10.png" alt="github--lena"></p><p>点击“添加语言”：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-11.png" alt="github--lena"></p><p>添加“英语-美国”：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-12.png" alt="github--lena"></p><p>打开中文（简体）语言选项：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-13.png" alt="github--lena"></p><p>删除中文语言：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-14.png" alt="github--lena"></p><p>只留下英文语言：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-15.png" alt="github--lena"></p><p>以上设置完成后，关闭浏览器，然后重新打开，重新申请谷歌账号，你会发现电话号码问题没有了。</p><h2 id="第5步：通过验证码进行账号验证"><a href="#第5步：通过验证码进行账号验证" class="headerlink" title="第5步：通过验证码进行账号验证"></a>第5步：通过验证码进行账号验证</h2><p>手机接收到验证码后，按要求填入，然后点击“验证”。<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-16.png" alt="github--lena"></p><p>成功验证后，填写账号需求的其他信息：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-17.jpg" alt="github--lena"></p><p>在其他Google服务中使用号码，直接跳过：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-18.png" alt="github--lena"></p><h2 id="第6步：同意Google账号相关条款"><a href="#第6步：同意Google账号相关条款" class="headerlink" title="第6步：同意Google账号相关条款"></a>第6步：同意Google账号相关条款</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-19.jpg" alt="github--lena"></p><p>点击“我同意”<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-20.png" alt="github--lena"></p><h2 id="第7步：成功注册谷歌账号"><a href="#第7步：成功注册谷歌账号" class="headerlink" title="第7步：成功注册谷歌账号"></a>第7步：成功注册谷歌账号</h2><p>通过以上步骤，谷歌账号就注册好了，在谷歌搜索界面可以看到账号已经处于登录状态。<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-21.png" alt="github--lena"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第1步：找到谷歌账号注册入口&quot;&gt;&lt;a href=&quot;#第1步：找到谷歌账号注册入口&quot; class=&quot;headerlink&quot; title=&quot;第1步：找到谷歌账号注册入口&quot;&gt;&lt;/a&gt;第1步：找到谷歌账号注册入口&lt;/h2&gt;&lt;p&gt;打开Google，在谷歌搜索的主界面，找到右</summary>
      
    
    
    
    <category term="奇怪的知识点" scheme="https://imszz.com/categories/%E5%A5%87%E6%80%AA%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="google" scheme="https://imszz.com/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>selenium基础-打开百度进行搜索</title>
    <link href="https://imszz.com/p/1f7c743b/"/>
    <id>https://imszz.com/p/1f7c743b/</id>
    <published>2020-10-14T13:25:23.000Z</published>
    <updated>2020-10-15T05:25:23.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>安装Python3</p></li><li><p>安装selenium</p><div class="note warning flat"><p>注意不同的python版本</p></div></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install selenium</span><br></pre></td></tr></table></figure><ol start="3"><li>下载谷歌驱动ChromeDriver包，放到Python的目录下</li></ol><div class="note success flat"><p><a href="http://chromedriver.storage.googleapis.com/index.html">http://chromedriver.storage.googleapis.com/index.html</a></p></div><div class="note warning flat"><p>mac 安装路径解压到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;bin</span><br></pre></td></tr></table></figure><p>windows 解压到与 python.exe 同级</p></div><ol start="4"><li>编写代码，如下<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"># coding: utf-8</span><br><span class="line"></span><br><span class="line">from selenium import webdriver  # 浏览器驱动器</span><br><span class="line">from selenium.webdriver.common.by import By  # 定位器</span><br><span class="line">from selenium.webdriver.common.keys import Keys  # 键盘对象</span><br><span class="line">from selenium.webdriver.support import expected_conditions as EC  # 判断器</span><br><span class="line">from selenium.webdriver.support.wait import WebDriverWait  # 浏览器等待对像</span><br><span class="line">import time</span><br><span class="line"># 创建一个谷歌浏览器对象</span><br><span class="line">browser &#x3D; webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    # 浏览器对象打开百度地址</span><br><span class="line">    browser.get(&quot;https:&#x2F;&#x2F;www.baidu.com&quot;)</span><br><span class="line">    # 查找id为 &#39;kw&#39;的标签，即输入框</span><br><span class="line">    inputs &#x3D; browser.find_element_by_id(&quot;kw&quot;)</span><br><span class="line">    # 在输入框中填入&#39;Python&#39;</span><br><span class="line">    inputs.send_keys(&quot;Python&quot;)</span><br><span class="line">    # &#39;按下&#39;回车键（第一种）</span><br><span class="line">    inputs.send_keys(Keys.ENTER)</span><br><span class="line">    # 点击&#39;百度一下&#39;（第二种）</span><br><span class="line">    # browser.find_element_by_id(&quot;su&quot;).click()</span><br><span class="line">    # 创建一个等待对像，超时时间为10秒，调用的时间间隔为0.5</span><br><span class="line">    wait &#x3D; WebDriverWait(browser, 10, 0.5)</span><br><span class="line">    # 每隔0.5秒检查一次，直到页面元素出现id为&#39;content_left&#39;的标签</span><br><span class="line">    wait.until(EC.presence_of_all_elements_located((By.ID, &quot;content_left&quot;)))</span><br><span class="line">except Exception as e:</span><br><span class="line">    print (e)</span><br><span class="line">else:</span><br><span class="line">    # 打印请求的url</span><br><span class="line">    print (browser.current_url)</span><br><span class="line">    # 打印所有cookies</span><br><span class="line">    print (browser.get_cookies())</span><br><span class="line">finally:</span><br><span class="line">    # 等待10秒</span><br><span class="line">    time.sleep(10)</span><br><span class="line">    # 关闭浏览器对象</span><br><span class="line">    browser.close()</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>py2与py3 print 语法不同 </p></div></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装Python3&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装selenium&lt;/p&gt;
&lt;div class=&quot;note warning flat&quot;&gt;&lt;p&gt;注意不同的python版本&lt;/p&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=</summary>
      
    
    
    
    <category term="python" scheme="https://imszz.com/categories/python/"/>
    
    
    <category term="python" scheme="https://imszz.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>开往下一个世界 — 友链接力</title>
    <link href="https://imszz.com/p/ba1e0fab/"/>
    <id>https://imszz.com/p/ba1e0fab/</id>
    <published>2020-09-01T16:46:25.000Z</published>
    <updated>2020-09-06T13:26:23.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>互联网将人与人之间的距离大大减小，却还是形成了大大小小的孤岛。只有熟人间才知道彼此，而陌生人永远只能是陌生人。</p></div><h2 id="什么是开往-友链接力"><a href="#什么是开往-友链接力" class="headerlink" title="什么是开往 - 友链接力"></a>什么是开往 - 友链接力</h2><p>互联网经历了一个封闭到开放，现在逐渐又走向封闭的过程。大大小小的孤岛散落在浩瀚烟海，来往就像是一颗颗星球之间的快速列车，随机的跳向下一站。</p><div class="note success flat"><p>我想在这烟海发现下一颗星…</p></div><p>开往-友链助力是传统友链的增强，我们不必互相知道了解彼此，标准的审查让友好的朋友加入我们，只需要一个徽标，占用一块位置，我们所有人都联系在了一起，简单而又强大。</p><h2 id="和我一起加入开往"><a href="#和我一起加入开往" class="headerlink" title="和我一起加入开往"></a>和我一起加入开往</h2><p>『开往』取自「开放的网络」。将开往的徽标插入您的网站，表示您支持开放的网络。</p><p>每当有用户访问加入开往的网站时，点击徽标后会随机跳转到另一个加入开往的网站。加入开往的网站越多，友链接力的规模越大，分享的流量也越多。</p><p>“ 网站E → 开往 → 网站X → 开往 → 网站A → 开往 → 网站M → 开往 → 网站P → 开往 → 网站L → 开往 → 网站E … “</p><p>Github 地址：</p><div class="note success flat"><p><a href="https://github.com/volfclub/travellings">https://github.com/volfclub/travellings</a></p></div><p>这是项目的 Github 地址，在 issue 中提交申请，几日内就会受理。但是申请的网站必须满足几点要求：</p><ol><li>愿为开放的网络做出贡献（如分享知识经验设计等）；</li><li>没有违法以及影响体验的内容（如侵入式广告等）；</li><li>正常更新维护中（国内无法正常访问会被移除）；</li><li>强制启用 https 。</li></ol><p>将徽标插入打开您网页后能直接看到的地方（让友链传递下去），提出 issues 申请收录。这一般在 7 个工作日内完成审核。对于博客等不方便插入徽标的网页，建议在顶部或侧栏导航插入 Travelling 或开往的外链，在网页底部插入徽标。</p><p>参开代码如下，也可以自定义 logo:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;travellings.now.sh&#x2F;&quot; target&#x3D;&quot;blank&quot; title&#x3D;&quot;开往-友链接力&quot;&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;travellings.now.sh&#x2F;assets&#x2F;logo.gif&quot; alt&#x3D;&quot;开往-友链接力&quot; width&#x3D;&quot;120&quot;&gt;&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>愿我们不再孤独。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;互联网将人与人之间的距离大大减小，却还是形成了大大小小的孤岛。只有熟人间才知道彼此，而陌生人永远只能是陌生人。&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;什么是开往-友链接力&quot;&gt;&lt;a href=&quot;#什么是开往-友链接力&quot;</summary>
      
    
    
    
    <category term="link" scheme="https://imszz.com/categories/link/"/>
    
    
    <category term="link" scheme="https://imszz.com/tags/link/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 升级教程</title>
    <link href="https://imszz.com/p/cb1e6c4f/"/>
    <id>https://imszz.com/p/cb1e6c4f/</id>
    <published>2020-09-01T13:25:23.000Z</published>
    <updated>2020-10-29T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="简-述：-将电脑的-hexo-v4-2-1-升级到-hexo-v5-1-1-。"><a href="#简-述：-将电脑的-hexo-v4-2-1-升级到-hexo-v5-1-1-。" class="headerlink" title="简 述： 将电脑的 hexo v4.2.1 升级到 hexo v5.1.1 。"></a>简 述： 将电脑的 <code>hexo v4.2.1</code> 升级到 <code>hexo v5.1.1</code> 。</h5><h3 id="背景："><a href="#背景：" class="headerlink" title="背景："></a>背景：</h3><p><code>hexo clean &amp;&amp; hexo g -s</code> 后，发现会强制将所有文章的文件的修改日期，在文章中显示，很明显，这是不对的。解决方案是：修改 hexo 工作目录下 <code>_config.yml</code> 中修改为 <code>updated_option: &quot;date&quot;</code> ，但是这个变量是只有 hexo v5.0 才支持，而我当前是 v4.2。</p><h5 id="未升级之前，当前配置"><a href="#未升级之前，当前配置" class="headerlink" title="未升级之前，当前配置:"></a>未升级之前，当前配置:</h5><ul><li>hexo: 4.2.1</li><li>node: 12.18.3</li></ul><h3 id="升级-Hexo"><a href="#升级-Hexo" class="headerlink" title="升级 Hexo:"></a>升级 Hexo:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 使用淘宝源的 cnpm 替换 npm</span><br><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line">cnpm install -g cnpm                 # 升级 npm</span><br><span class="line">cnpm cache clean -f                 # 清除 npm 缓存</span><br><span class="line"></span><br><span class="line">&#x3D;&#x3D;&#x3D;更新 hexo: 进入 blog 目录，执行如下命令&#x3D;&#x3D;&#x3D; </span><br><span class="line"># 更新 package.json 中的 hexo 及个插件版本</span><br><span class="line">cnpm install -g npm-check           # 检查之前安装的插件，都有哪些是可以升级的 </span><br><span class="line">cnpm install -g npm-upgrade         # 升级系统中的插件</span><br><span class="line">npm-check</span><br><span class="line">npm-upgrade</span><br><span class="line"></span><br><span class="line"># 更新 hexo 及所有插件</span><br><span class="line">cnpm update</span><br><span class="line"></span><br><span class="line"># 确认 hexo 已经更新</span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h5 id="升级之后的版本："><a href="#升级之后的版本：" class="headerlink" title="升级之后的版本："></a>升级之后的版本：</h5><ul><li>Hexo: 5.1.1</li><li>Node: 12.18.3</li></ul><p>再次正常推送，成功达到预期。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;简-述：-将电脑的-hexo-v4-2-1-升级到-hexo-v5-1-1-。&quot;&gt;&lt;a href=&quot;#简-述：-将电脑的-hexo-v4-2-1-升级到-hexo-v5-1-1-。&quot; class=&quot;headerlink&quot; title=&quot;简 述： 将电脑的 hexo</summary>
      
    
    
    
    <category term="hexo" scheme="https://imszz.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://imszz.com/tags/hexo/"/>
    
  </entry>
  
</feed>
