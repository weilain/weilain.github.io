<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hermoso</title>
  
  
  <link href="https://imszz.com/atom.xml" rel="self"/>
  
  <link href="https://imszz.com/"/>
  <updated>2021-01-26T12:46:25.000Z</updated>
  <id>https://imszz.com/</id>
  
  <author>
    <name>Hermoso</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL5.7 高可用高性能配置调优 性能参数参考</title>
    <link href="https://imszz.com/p/2d27b747/"/>
    <id>https://imszz.com/p/2d27b747/</id>
    <published>2021-01-25T16:00:00.000Z</published>
    <updated>2021-01-26T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>MySQL5.7 在 5.6 版本的基础之上做了大量的优化, 本篇文章开篇将重点围绕经过优化的基于 GTID 的多线程复制和半同步复制的特性介绍, 后续会持续增加 MySQL5.7 的调优参数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set &#x3D; utf8mb4</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">### 基本属性配置</span><br><span class="line">port &#x3D; 3306</span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql</span><br><span class="line"># 禁用主机名解析</span><br><span class="line">skip-name-resolve</span><br><span class="line"># 默认的数据库引擎</span><br><span class="line">default-storage-engine &#x3D; InnoDB</span><br><span class="line"></span><br><span class="line">### 字符集配置</span><br><span class="line">character-set-client-handshake &#x3D; FALSE</span><br><span class="line">character-set-server &#x3D; utf8mb4</span><br><span class="line">collation-server &#x3D; utf8mb4_unicode_ci</span><br><span class="line">init_connect&#x3D;&#39;SET NAMES utf8mb4&#39;</span><br><span class="line"></span><br><span class="line">### GTID</span><br><span class="line">server_id &#x3D; 59</span><br><span class="line"># 为保证 GTID 复制的稳定, 行级日志</span><br><span class="line">binlog_format &#x3D; row</span><br><span class="line"># 开启 gtid 功能</span><br><span class="line">gtid_mode &#x3D; on</span><br><span class="line"># 保障 GTID 事务安全</span><br><span class="line"># 当启用enforce_gtid_consistency功能的时候,</span><br><span class="line"># MySQL只允许能够保障事务安全, 并且能够被日志记录的SQL语句被执行,</span><br><span class="line"># 像create table ... select 和 create temporarytable语句, </span><br><span class="line"># 以及同时更新事务表和非事务表的SQL语句或事务都不允许执行</span><br><span class="line">enforce-gtid-consistency &#x3D; true</span><br><span class="line"># 以下两条配置为主从切换, 数据库高可用的必须配置</span><br><span class="line"># 开启 binlog 日志功能</span><br><span class="line">log_bin &#x3D; on</span><br><span class="line"># 开启从库更新 binlog 日志</span><br><span class="line">log-slave-updates &#x3D; on</span><br><span class="line"></span><br><span class="line">### 慢查询日志</span><br><span class="line"># 打开慢查询日志功能</span><br><span class="line">slow_query_log &#x3D; 1</span><br><span class="line"># 超过2秒的查询记录下来</span><br><span class="line">long_query_time &#x3D; 2</span><br><span class="line"># 记录下没有使用索引的查询</span><br><span class="line">log_queries_not_using_indexes &#x3D; 1</span><br><span class="line"></span><br><span class="line">### 自动修复</span><br><span class="line"># 记录 relay.info 到数据表中</span><br><span class="line">relay_log_info_repository &#x3D; TABLE</span><br><span class="line"># 记录 master.info 到数据表中 </span><br><span class="line">master_info_repository &#x3D; TABLE</span><br><span class="line"># 启用 relaylog 的自动修复功能</span><br><span class="line">relay_log_recovery &#x3D; on</span><br><span class="line"># 在 SQL 线程执行完一个 relaylog 后自动删除</span><br><span class="line">relay_log_purge &#x3D; 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 数据安全性配置</span><br><span class="line"># 关闭 master 创建 function 的功能</span><br><span class="line">log_bin_trust_function_creators &#x3D; off</span><br><span class="line"># 每执行一个事务都强制写入磁盘</span><br><span class="line">sync_binlog &#x3D; 1</span><br><span class="line"># timestamp 列如果没有显式定义为 not null, 则支持null属性</span><br><span class="line"># 设置 timestamp 的列值为 null, 不会被设置为 current timestamp</span><br><span class="line">explicit_defaults_for_timestamp&#x3D;true</span><br><span class="line"></span><br><span class="line">### 优化配置</span><br><span class="line"># 优化中文全文模糊索引</span><br><span class="line">ft_min_word_len &#x3D; 1</span><br><span class="line"># 默认库名表名保存为小写, 不区分大小写</span><br><span class="line">lower_case_table_names &#x3D; 1</span><br><span class="line"># 单条记录写入最大的大小限制</span><br><span class="line"># 过小可能会导致写入(导入)数据失败</span><br><span class="line">max_allowed_packet &#x3D; 256M</span><br><span class="line"># 半同步复制开启</span><br><span class="line">rpl_semi_sync_master_enabled &#x3D; 1</span><br><span class="line">rpl_semi_sync_slave_enabled &#x3D; 1</span><br><span class="line"># 半同步复制超时时间设置</span><br><span class="line">rpl_semi_sync_master_timeout &#x3D; 1000</span><br><span class="line"># 复制模式(保持系统默认)</span><br><span class="line">rpl_semi_sync_master_wait_point &#x3D; AFTER_SYNC</span><br><span class="line"># 后端只要有一台收到日志并写入 relaylog 就算成功</span><br><span class="line">rpl_semi_sync_master_wait_slave_count &#x3D; 1</span><br><span class="line"># 多线程复制</span><br><span class="line">slave_parallel_type &#x3D; logical_clock</span><br><span class="line">slave_parallel_workers &#x3D; 4</span><br><span class="line"></span><br><span class="line">### 连接数限制</span><br><span class="line">max_connections &#x3D; 1500</span><br><span class="line"># 验证密码超过20次拒绝连接</span><br><span class="line">max_connect_errors &#x3D; 20</span><br><span class="line"># back_log值指出在mysql暂时停止回答新请求之前的短时间内多少个请求可以被存在堆栈中</span><br><span class="line"># 也就是说，如果MySql的连接数达到max_connections时，新来的请求将会被存在堆栈中</span><br><span class="line"># 以等待某一连接释放资源，该堆栈的数量即back_log，如果等待连接的数量超过back_log</span><br><span class="line"># 将不被授予连接资源</span><br><span class="line">back_log &#x3D; 500</span><br><span class="line">open_files_limit &#x3D; 65535</span><br><span class="line"># 服务器关闭交互式连接前等待活动的秒数</span><br><span class="line">interactive_timeout &#x3D; 3600</span><br><span class="line"># 服务器关闭非交互连接之前等待活动的秒数</span><br><span class="line">wait_timeout &#x3D; 3600</span><br><span class="line"></span><br><span class="line">### 内存分配</span><br><span class="line"># 指定表高速缓存的大小。每当MySQL访问一个表时，如果在表缓冲区中还有空间</span><br><span class="line"># 该表就被打开并放入其中，这样可以更快地访问表内容</span><br><span class="line">table_open_cache &#x3D; 1024</span><br><span class="line"># 为每个session 分配的内存, 在事务过程中用来存储二进制日志的缓存</span><br><span class="line">binlog_cache_size &#x3D; 2M</span><br><span class="line"># 在内存的临时表最大大小</span><br><span class="line">tmp_table_size &#x3D; 128M</span><br><span class="line"># 创建内存表的最大大小(保持系统默认, 不允许创建过大的内存表)</span><br><span class="line"># 如果有需求当做缓存来用, 可以适当调大此值</span><br><span class="line">max_heap_table_size &#x3D; 16M</span><br><span class="line"># 顺序读, 读入缓冲区大小设置</span><br><span class="line"># 全表扫描次数多的话, 可以调大此值</span><br><span class="line">read_buffer_size &#x3D; 1M</span><br><span class="line"># 随机读, 读入缓冲区大小设置</span><br><span class="line">read_rnd_buffer_size &#x3D; 8M</span><br><span class="line"># 高并发的情况下, 需要减小此值到64K-128K</span><br><span class="line">sort_buffer_size &#x3D; 1M</span><br><span class="line"># 每个查询最大的缓存大小是1M, 最大缓存64M 数据</span><br><span class="line">query_cache_size &#x3D; 64M</span><br><span class="line">query_cache_limit &#x3D; 1M</span><br><span class="line"># 提到 join 的效率</span><br><span class="line">join_buffer_size &#x3D; 16M</span><br><span class="line"># 线程连接重复利用</span><br><span class="line">thread_cache_size &#x3D; 64</span><br><span class="line"></span><br><span class="line">### InnoDB 优化</span><br><span class="line">## 内存利用方面的设置</span><br><span class="line"># 数据缓冲区</span><br><span class="line">innodb_buffer_pool_size&#x3D;2G</span><br><span class="line">## 日志方面设置</span><br><span class="line"># 事务日志大小</span><br><span class="line">innodb_log_file_size &#x3D; 256M</span><br><span class="line"># 日志缓冲区大小</span><br><span class="line">innodb_log_buffer_size &#x3D; 4M</span><br><span class="line"># 事务在内存中的缓冲</span><br><span class="line">innodb_log_buffer_size &#x3D; 3M</span><br><span class="line"># 主库保持系统默认, 事务立即写入磁盘, 不会丢失任何一个事务</span><br><span class="line">innodb_flush_log_at_trx_commit &#x3D; 1</span><br><span class="line"># mysql 的数据文件设置, 初始100, 以10M 自动扩展</span><br><span class="line">innodb_data_file_path &#x3D; ibdata1:100M:autoextend</span><br><span class="line"># 为提高性能, MySQL可以以循环方式将日志文件写到多个文件</span><br><span class="line">innodb_log_files_in_group &#x3D; 3</span><br><span class="line">##其他设置</span><br><span class="line"># 如果库里的表特别多的情况，请增加此值</span><br><span class="line">innodb_open_files &#x3D; 800</span><br><span class="line"># 为每个 InnoDB 表分配单独的表空间</span><br><span class="line">innodb_file_per_table &#x3D; 1</span><br><span class="line"># InnoDB 使用后台线程处理数据页上写 I&#x2F;O（输入）请求的数量</span><br><span class="line">innodb_write_io_threads &#x3D; 8</span><br><span class="line"># InnoDB 使用后台线程处理数据页上读 I&#x2F;O（输出）请求的数量</span><br><span class="line">innodb_read_io_threads &#x3D; 8</span><br><span class="line"># 启用单独的线程来回收无用的数据</span><br><span class="line">innodb_purge_threads &#x3D; 1</span><br><span class="line"># 脏数据刷入磁盘(先保持系统默认, swap 过多使用时, 调小此值, 调小后, 与磁盘交互增多, 性能降低)</span><br><span class="line"># innodb_max_dirty_pages_pct &#x3D; 90</span><br><span class="line"># 事务等待获取资源等待的最长时间</span><br><span class="line">innodb_lock_wait_timeout &#x3D; 120</span><br><span class="line"># 开启 InnoDB 严格检查模式, 不警告, 直接报错</span><br><span class="line">innodb_strict_mode&#x3D;1</span><br><span class="line"># 允许列索引最大达到3072</span><br><span class="line"> innodb_large_prefix &#x3D; on</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line"># 开启快速导出</span><br><span class="line">quick</span><br><span class="line">default-character-set &#x3D; utf8mb4</span><br><span class="line">max_allowed_packet &#x3D; 256M</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line"># 开启 tab 补全</span><br><span class="line">auto-rehash</span><br><span class="line">default-character-set &#x3D; utf8mb4</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;MySQL5.7 在 5.6 版本的基础之上做了大量的优化, 本篇文章开篇将重点围绕经过优化的基于 GTID 的多线程复制和半同步复制的特性介绍, 后续会持续增加 MySQL5.7 的调优参数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure c</summary>
      
    
    
    
    <category term="Mysql" scheme="https://imszz.com/categories/Mysql/"/>
    
    
    <category term="mysql" scheme="https://imszz.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL5.7 字符集设置</title>
    <link href="https://imszz.com/p/38510659/"/>
    <id>https://imszz.com/p/38510659/</id>
    <published>2021-01-25T16:00:00.000Z</published>
    <updated>2021-01-26T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="mysql57-字符集设置">MySQL5.7 字符集设置</span></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">character-set-client-handshake &#x3D; FALSE</span><br><span class="line">character-set-server &#x3D; utf8mb4</span><br><span class="line">collation-server &#x3D; utf8mb4_unicode_ci</span><br><span class="line">init_connect&#x3D;’SET NAMES utf8mb4’</span><br></pre></td></tr></table></figure><h1><span id="character-set-client-handshake">character-set-client-handshake</span></h1><p>用来控制客户端声明使用字符集和服务端声明使用的字符集在不一致的情况下的兼容性.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">character-set-client-handshake &#x3D; false</span><br><span class="line"># 设置为 False, 在客户端字符集和服务端字符集不同的时候将拒绝连接到服务端执行任何操作</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 默认为 true</span><br><span class="line">character-set-client-handshake &#x3D; true</span><br><span class="line"># 设置为 True, 即使客户端字符集和服务端字符集不同, 也允许客户端连接</span><br></pre></td></tr></table></figure><h1><span id="character-set-server">character-set-server</span></h1><p>声明服务端的字符编码, 推荐使用utf8mb4 , 该字符虽然占用空间会比较大, 但是可以兼容 emoji 😈 表情的存储</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">character-set-server &#x3D; utf8mb4</span><br></pre></td></tr></table></figure><h1><span id="collation-server">collation-server</span></h1><p>声明服务端的字符集, 字符编码和字符集一一对应, 既然使用了utf8mb4的字符集, 就要声明使用对应的字符编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">collation-server &#x3D; utf8mb4_unicode_ci</span><br></pre></td></tr></table></figure><h1><span id="init_connect">init_connect</span></h1><p><code>init_connect </code>是用户登录到数据库上之后, 在执行第一次查询之前执行里面的内容. 如果 <code>init_connect</code> 的内容有语法错误, 导致执行失败, 会导致用户无法执行查询, 从mysql 退出</p><p>使用 <code>init_connect</code> 执行 <code>SET NAMES utf8mb4</code> 意为:</p><p>声明自己(客户端)使用的是 utf8mb4 的字符编码<br>希望服务器返回给自己 utf8mb4 的查询结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">init_connect &#x3D; &#39;SET NAMES utf8mb4&#39;</span><br></pre></td></tr></table></figure><h1><span id="完整配置">完整配置</span></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">character-set-client-handshake &#x3D; FALSE</span><br><span class="line">character-set-server &#x3D; utf8mb4</span><br><span class="line">collation-server &#x3D; utf8mb4_unicode_ci</span><br><span class="line">init_connect &#x3D; &#39;SET NAMES utf8mb4&#39;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;mysql57-字符集设置&quot;&gt;MySQL5.7 字符集设置&lt;/span&gt;&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;</summary>
      
    
    
    
    <category term="Mysql" scheme="https://imszz.com/categories/Mysql/"/>
    
    
    <category term="mysql" scheme="https://imszz.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql 安装5.7</title>
    <link href="https://imszz.com/p/d47d8d30/"/>
    <id>https://imszz.com/p/d47d8d30/</id>
    <published>2021-01-25T16:00:00.000Z</published>
    <updated>2021-01-26T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="mysql编译和安装">MySQL编译和安装</span></h1><p>##在<code>CentOS7</code>中编译安装<code>MySQL 5.7.21</code>. 依赖和源码包 安装相关的依赖: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc gcc-c++ ncurses ncurses-devel cmake bison openssl-devel -y </span><br><span class="line">yum install make cmake gcc gcc-c++ bison bison-devel ncurses ncurses-devel autoconf automake</span><br></pre></td></tr></table></figure><p>下载<code>MySQL 5.7.32</code>源码包和依赖<code>boost</code>, <code>MySQL 5.7.32</code>依赖<code>boost 1.59.0</code>: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -o boost_1_59_0.tar.gz https:&#x2F;&#x2F;jaist.dl.sourceforge.net&#x2F;project&#x2F;boost&#x2F;boost&#x2F;1.59.0&#x2F;boost_1_59_0.tar.gz </span><br><span class="line">#curl -o mysql-5.7.32.tar.gz https:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;Downloads&#x2F;MySQL-5.7&#x2F;mysql-5.7.32.tar.gz</span><br><span class="line">如果拉取不到使用下方下载地址 ：</span><br><span class="line">https:&#x2F;&#x2F;downloads.mysql.com&#x2F;archives&#x2F;community&#x2F;</span><br></pre></td></tr></table></figure><p>解压下载的包: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 进入下载的路径 </span><br><span class="line"># 解压到&#x2F;usr&#x2F;local&#x2F;目录</span><br><span class="line">tar -xzvf boost_1_59_0.tar.gz -C &#x2F;usr&#x2F;local&#x2F; </span><br><span class="line"># 解压到当前目录 </span><br><span class="line">tar -xzvf mysql-5.7.32.tar.gz</span><br></pre></td></tr></table></figure><h1><span id="创建用户和组">创建用户和组</span></h1><p>创建<code>MySQL</code>用户和组, 并且用户不能登陆: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd -r mysql &amp;&amp; useradd -r -g mysql -s &#x2F;sbin&#x2F;nologin -M mysql </span><br></pre></td></tr></table></figure><h1><span id="创建相关的目录">创建相关的目录</span></h1><h3><span id="创建数据目录">创建数据目录</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;home&#x2F;mysql&#x2F;data</span><br><span class="line"></span><br><span class="line">mkdir -p &#x2F;home&#x2F;mysql&#x2F;logs</span><br><span class="line"></span><br><span class="line">mkdir -p &#x2F;usr&#x2F;local&#x2F;mysql </span><br><span class="line"></span><br><span class="line">mkdir -p &#x2F;home&#x2F;mysql&#x2F;temp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chown -Rf mysql:mysql &#x2F;usr&#x2F;local&#x2F;mysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chown -Rf mysql:mysql &#x2F;home&#x2F;mysql</span><br></pre></td></tr></table></figure><h1><span id="预编译">预编译</span></h1><p>使用各种参数, 预编译源代码. 进入解压的<code>MySQL</code>源码目录, 执行以下命令: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake -DCMAKE_INSTALL_PREFIX&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql -DMYSQL_DATADIR&#x3D;&#x2F;home&#x2F;mysql&#x2F;data -DSYSCONFDIR&#x3D;&#x2F;etc -DMYSQL_UNIX_ADDR&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;mysqld.sock -DEXTRA_CHARSETS&#x3D;all -DDEFAULT_CHARSET&#x3D;utf8mb4 -DDEFAULT_COLLATION&#x3D;utf8mb4_unicode_ci -DWITH_MYISAM_STORAGE_ENGINE&#x3D;1 -DWITH_INNOBASE_STORAGE_ENGINE&#x3D;1 -DWITH_PARTITION_STORAGE_ENGINE&#x3D;1 -DWITH_ARCHIVE_STORAGE_ENGINE&#x3D;1 -DWITH_BLACKHOLE_STORAGE_ENGINE&#x3D;1 -DENABLED_LOCAL_INFILE&#x3D;1 -DENABLED_PROFILING&#x3D;1 -DMYSQL_TCP_PORT&#x3D;3306 -DWITH_DEBUG&#x3D;0 -DDOWNLOAD_BOOST&#x3D;1 -DWITH_BOOST&#x3D;&#x2F;usr&#x2F;local&#x2F;boost_1_59_0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">DCMAKE_INSTALL_PREFIX&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql :安装路径</span><br><span class="line">DMYSQL_DATADIR&#x3D;&#x2F;data&#x2F;mysql :数据文件存放位置</span><br><span class="line">DSYSCONFDIR&#x3D;&#x2F;etc :my.cnf路径</span><br><span class="line">DMYSQL_UNIX_ADDR&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;mysqld.sock :连接数据库socket路径 </span><br><span class="line">DEXTRA_CHARSETS&#x3D;all :安装所有的字符集</span><br><span class="line">DDEFAULT_CHARSET&#x3D;utf8mb4 :默认字符</span><br><span class="line">DDEFAULT_COLLATION&#x3D;utf8mb4_unicode_ci :排序集</span><br><span class="line">DWITH_MYISAM_STORAGE_ENGINE&#x3D;1 :支持MyIASM引擎</span><br><span class="line">DWITH_INNOBASE_STORAGE_ENGINE&#x3D;1 :支持InnoDB引擎</span><br><span class="line">DWITH_PARTITION_STORAGE_ENGINE&#x3D;1 :安装支持数据库分区</span><br><span class="line">DENABLED_LOCAL_INFILE&#x3D;1 :允许从本地导入数据</span><br><span class="line">DENABLED_PROFILING&#x3D;1 :</span><br><span class="line">DMYSQL_TCP_PORT&#x3D;3306 :端口</span><br><span class="line">DWITH_DEBUG&#x3D;0 :</span><br><span class="line">DDOWNLOAD_BOOST&#x3D;1 :允许下载</span><br><span class="line">DWITH_BOOST&#x3D;&#x2F;usr&#x2F;local&#x2F;boost_1_59_0 :本地boost路径 </span><br></pre></td></tr></table></figure><h1><span id="编译安装">编译安装</span></h1><p>预编译完成后, 执行下面的命令编译, 安装: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 指定CPU数量编译 </span><br><span class="line">make -j &#96;grep processor &#x2F;proc&#x2F;cpuinfo | wc -l&#96; &amp;&amp; make install</span><br></pre></td></tr></table></figure><h1><span id="添加开机自启">添加开机自启</span></h1><p>对目录修改权限, 添加<code>service/systemd</code>服务: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql:mysql &#x2F;usr&#x2F;local&#x2F;mysql </span><br><span class="line">cp &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;support-files&#x2F;mysql.server &#x2F;etc&#x2F;init.d&#x2F;mysql</span><br><span class="line">chmod +x &#x2F;etc&#x2F;init.d&#x2F;mysql</span><br><span class="line"># 开机自启 </span><br><span class="line">chkconfig --add mysql</span><br><span class="line">chkconfig mysql on </span><br></pre></td></tr></table></figure><h1><span id="环境变量">环境变量</span></h1><p>将<code>/usr/local/mysql/bin</code>添加进入<code>环境变量</code>, 或者直接使用<code>软链接</code>的方式链到<code>/usr/local/bin</code>下: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 添加到环境变量 </span><br><span class="line">echo &quot;&quot; &gt;&gt; &#x2F;etc&#x2F;bashrc </span><br><span class="line">echo &quot;export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin:$PATH&quot; &gt;&gt; &#x2F;etc&#x2F;bashrc </span><br><span class="line">echo &quot;&quot; &gt;&gt; &#x2F;etc&#x2F;bashrc </span><br><span class="line">source ~&#x2F;.bashrc </span><br><span class="line"></span><br><span class="line"># 使用软链接 </span><br><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;* &#x2F;usr&#x2F;local&#x2F;bin&#x2F;</span><br></pre></td></tr></table></figure><h1><span id="初始化数据库">初始化数据库</span></h1><p>以上都完成后, 还不能启动MySQL, 如果非要启动, 会报错. 需要初始化数据库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysqld --initialize --user&#x3D;mysql --basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql --datadir&#x3D;&#x2F;home&#x2F;mysql&#x2F;data</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--user :指定用户 </span><br><span class="line">--basedir :mysql所在目录 </span><br><span class="line">--datadir :mysql数据库和表所在的目录,以及PID文件 </span><br></pre></td></tr></table></figure><p>初始化后, 会有一行提示, 冒号后面的是初始密码<code>root@localhost: password</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A temporary password is generated for root@localhost: xKefZvib13)5 </span><br></pre></td></tr></table></figure><h1><span id="启动服务">启动服务</span></h1><p>以上都配置完成, 就可以启动服务了: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 使用service </span><br><span class="line">service mysql start </span><br><span class="line"></span><br><span class="line"># 使用systemd </span><br><span class="line">systemctl daemon-reload </span><br><span class="line">systemctl start mysql</span><br></pre></td></tr></table></figure><h1><span id="修改密码">修改密码</span></h1><p>将初始密码修改成自己的密码, 直接在<code>shell</code>中输入命令: <code>mysqladmin -uroot -p&#39;old_pass&#39; password &#39;new_pass&#39;</code> </p><h1><span id="配置文件">配置文件</span></h1><p>默认<code>MySQL不</code>需要配置文件, 编译时已经配置好了, 但是也可以使用配置文件, 指定<code>log</code>的位置, 编辑<code>vim /etc/my.cnf</code>, 将以下内容添加到文件中:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line"></span><br><span class="line">port &#x3D; 3306</span><br><span class="line"></span><br><span class="line">socket &#x3D; &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;mysql.sock</span><br><span class="line"></span><br><span class="line">default-character-set&#x3D;utf8mb4</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set&#x3D;utf8mb4</span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">character-set-client-handshake&#x3D;FALSE</span><br><span class="line"></span><br><span class="line">character-set-server&#x3D;utf8mb4</span><br><span class="line"></span><br><span class="line">collation-server&#x3D;utf8mb4_unicode_ci</span><br><span class="line"></span><br><span class="line">init_connect&#x3D;&#39;SET NAMES utf8mb4&#39;</span><br><span class="line"></span><br><span class="line">#character-set-server &#x3D; utf8</span><br><span class="line"></span><br><span class="line">#collation-server &#x3D; utf8_general_ci</span><br><span class="line"></span><br><span class="line">skip-external-locking</span><br><span class="line"></span><br><span class="line">skip-name-resolve</span><br><span class="line"></span><br><span class="line">user &#x3D; mysql</span><br><span class="line"></span><br><span class="line">port &#x3D; 3306</span><br><span class="line"></span><br><span class="line">basedir &#x3D; &#x2F;usr&#x2F;local&#x2F;mysql</span><br><span class="line"></span><br><span class="line">datadir &#x3D; &#x2F;home&#x2F;mysql&#x2F;data</span><br><span class="line"></span><br><span class="line">tmpdir &#x3D; &#x2F;home&#x2F;mysql&#x2F;temp</span><br><span class="line"></span><br><span class="line"># server_id &#x3D; .....</span><br><span class="line"></span><br><span class="line">socket &#x3D; &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;mysql.sock</span><br><span class="line"></span><br><span class="line">log-error &#x3D; &#x2F;home&#x2F;mysql&#x2F;logs&#x2F;mysql_error.log</span><br><span class="line"></span><br><span class="line">pid-file &#x3D; &#x2F;home&#x2F;mysql&#x2F;mysql.pid</span><br><span class="line"></span><br><span class="line">open_files_limit &#x3D; 10240</span><br><span class="line"></span><br><span class="line">back_log &#x3D; 600</span><br><span class="line"></span><br><span class="line">max_connections&#x3D;500</span><br><span class="line"></span><br><span class="line">max_connect_errors &#x3D; 6000</span><br><span class="line"></span><br><span class="line">wait_timeout&#x3D;605800</span><br><span class="line"></span><br><span class="line">#open_tables &#x3D; 600</span><br><span class="line"></span><br><span class="line">#table_cache &#x3D; 650</span><br><span class="line"></span><br><span class="line">#opened_tables &#x3D; 630</span><br><span class="line"></span><br><span class="line">max_allowed_packet &#x3D; 32M</span><br><span class="line"></span><br><span class="line">sort_buffer_size &#x3D; 4M</span><br><span class="line"></span><br><span class="line">join_buffer_size &#x3D; 4M</span><br><span class="line"></span><br><span class="line">thread_cache_size &#x3D; 300</span><br><span class="line"></span><br><span class="line">query_cache_type &#x3D; 1</span><br><span class="line"></span><br><span class="line">query_cache_size &#x3D; 256M</span><br><span class="line"></span><br><span class="line">query_cache_limit &#x3D; 2M</span><br><span class="line"></span><br><span class="line">query_cache_min_res_unit &#x3D; 16k</span><br><span class="line"></span><br><span class="line">tmp_table_size &#x3D; 256M</span><br><span class="line"></span><br><span class="line">max_heap_table_size &#x3D; 256M</span><br><span class="line"></span><br><span class="line">key_buffer_size &#x3D; 256M</span><br><span class="line"></span><br><span class="line">read_buffer_size &#x3D; 1M</span><br><span class="line"></span><br><span class="line">read_rnd_buffer_size &#x3D; 16M</span><br><span class="line"></span><br><span class="line">bulk_insert_buffer_size &#x3D; 64M</span><br><span class="line"></span><br><span class="line">lower_case_table_names&#x3D;1</span><br><span class="line"></span><br><span class="line">default-storage-engine &#x3D; INNODB</span><br><span class="line"></span><br><span class="line">innodb_buffer_pool_size &#x3D;2G</span><br><span class="line"></span><br><span class="line">innodb_log_buffer_size &#x3D; 32M</span><br><span class="line"></span><br><span class="line">innodb_log_file_size &#x3D; 128M</span><br><span class="line"></span><br><span class="line">innodb_flush_method &#x3D;O_DIRECT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#####################</span><br><span class="line"></span><br><span class="line">#thread_concurrency &#x3D; 32 5.7不支持</span><br><span class="line"></span><br><span class="line">long_query_time&#x3D; 2</span><br><span class="line"></span><br><span class="line">slow-query-log&#x3D;on</span><br><span class="line"></span><br><span class="line">slow-query-log-file &#x3D;&#x2F;home&#x2F;mysql&#x2F;logs&#x2F;mysql-slow.log</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line"></span><br><span class="line">quick</span><br><span class="line"></span><br><span class="line">max_allowed_packet &#x3D; 32M</span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line"></span><br><span class="line">log-error&#x3D;&#x2F;var&#x2F;log&#x2F;mysqld.log</span><br><span class="line"></span><br><span class="line">pid-file&#x3D;&#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.pid</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;mysql编译和安装&quot;&gt;MySQL编译和安装&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;##在&lt;code&gt;CentOS7&lt;/code&gt;中编译安装&lt;code&gt;MySQL 5.7.21&lt;/code&gt;. 依赖和源码包 安装相关的依赖: &lt;/p&gt;
&lt;figure class</summary>
      
    
    
    
    <category term="Mysql" scheme="https://imszz.com/categories/Mysql/"/>
    
    
    <category term="mysql" scheme="https://imszz.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql数据更改存储路径</title>
    <link href="https://imszz.com/p/57aae221/"/>
    <id>https://imszz.com/p/57aae221/</id>
    <published>2021-01-25T16:00:00.000Z</published>
    <updated>2021-01-26T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在初次安装mysql 的时候将数据库目录安装在了系统盘。（第一个磁盘）使用了一段时间之后数据库存储量变大，快将20GB的存放空间占满了。因此必须将存放数据空间换地方了。下面是简单的操作。</p></blockquote><h1><span id="操作步骤">操作步骤：</span></h1><h2><span id="1检查mysql数据库存放目录">1.检查mysql数据库存放目录</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -prootadmin</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#进入数据库</span><br><span class="line"></span><br><span class="line">show variables like &#39;%dir%&#39;;</span><br><span class="line"></span><br><span class="line">#查看sql存储路径</span><br><span class="line"></span><br><span class="line">（查看datadir 那一行所指的路径）</span><br><span class="line"></span><br><span class="line">quit;</span><br></pre></td></tr></table></figure><h2><span id="2停止mysql服务">2.停止mysql服务</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql stop</span><br></pre></td></tr></table></figure><h2><span id="3创建新的数据库存放目录">3.创建新的数据库存放目录</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;data&#x2F;mysql</span><br></pre></td></tr></table></figure><h2><span id="4移动复制之前存放数据库目录文件到新的数据库存放目录位置">4.移动/复制之前存放数据库目录文件，到新的数据库存放目录位置</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -R &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;* &#x2F;data&#x2F;mysql&#x2F; #或mv &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;* &#x2F;data&#x2F;mysql</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id="5修改mysql数据库目录权限以及配置文件">5.修改mysql数据库目录权限以及配置文件</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">chown mysql:mysql -R &#x2F;data&#x2F;mysql&#x2F;</span><br><span class="line"></span><br><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line"></span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql （制定为新的数据存放目录）</span><br><span class="line"></span><br><span class="line">vim &#x2F;etc&#x2F;init.d&#x2F;mysql</span><br><span class="line"></span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id="6启动数据库服务">6.启动数据库服务</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld start</span><br></pre></td></tr></table></figure><p>说明：根据以上的简单6步操作，已经成功的数据库目录更换路径了。</p><blockquote><p>备注：以上系统为CentOS Linux release 7.8.2003 (Core)  mysql-5.7.32 编译安装</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在初次安装mysql 的时候将数据库目录安装在了系统盘。（第一个磁盘）使用了一段时间之后数据库存储量变大，快将20GB的存放空间占满了。因此必须将存放数据空间换地方了。下面是简单的操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;span id</summary>
      
    
    
    
    <category term="Mysql" scheme="https://imszz.com/categories/Mysql/"/>
    
    
    <category term="mysql" scheme="https://imszz.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>查看LINUX发行版的名称及其版本号</title>
    <link href="https://imszz.com/p/2399c152/"/>
    <id>https://imszz.com/p/2399c152/</id>
    <published>2021-01-25T16:00:00.000Z</published>
    <updated>2021-01-26T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>查看LINUX发行版的名称及其版本号的命令,这些信息对于添加正确的软件更新源很有用，而当你只能在命令行下工作的时候，下面的方法可以帮忙。</p><h2><span id="一-查看linux内核版本命令两种方法">一、查看Linux内核版本命令（两种方法）：</span></h2><p>1、<code>cat /proc/version</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat &#x2F;proc&#x2F;version</span><br><span class="line">Linux version 2.6.18-194.8.1.el5.centos.plus</span><br><span class="line">(mockbuild@builder17.centos.org) (gcc version 4.1.220080704</span><br><span class="line">(Red Hat 4.1.2-48)) #1 SMP Wed Jul 7 11:50:45 EDT 2010</span><br></pre></td></tr></table></figure><p>2、<code>uname -a</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# uname -a</span><br><span class="line">Linux localhost.localdomain 2.6.18-194.8.1.el5.centos.plus </span><br><span class="line">#1 SMP Wed Jul 7 11:50:45 EDT 2010 i686 i686 i386 GNU&#x2F;Linux</span><br></pre></td></tr></table></figure><h2><span id="二-查看linux系统版本的命令3种方法">二、查看Linux系统版本的命令（3种方法）：</span></h2><p>1、<code>lsb_release -a</code>，即可列出所有版本信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# lsb_release -a</span><br><span class="line">LSB Version: :core-3.1-ia32:core-3.1-noarch:graphics-3.1-ia32:graphics-3.1-noarch</span><br><span class="line">Distributor ID: CentOS</span><br><span class="line">Description: CentOS release 6.5 (Final)</span><br><span class="line">Release: 6.5</span><br><span class="line">Codename: Final</span><br></pre></td></tr></table></figure><p>这个命令适用于所有的Linux发行版，包括Redhat、SuSE、Debian…等发行版。</p><p>2、<code>cat /etc/redhat-release</code>，这种方法只适合Redhat系的Linux：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat &#x2F;etc&#x2F;redhat-release</span><br><span class="line">CentOS release 6.7 (Final)</span><br></pre></td></tr></table></figure><p>3、<code>cat /etc/issue</code>，此命令也适用于所有的Linux发行版。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat &#x2F;etc&#x2F;issue</span><br><span class="line">CentOS release 6.7 (Final)</span><br><span class="line">Kernel \r on an \m</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;查看LINUX发行版的名称及其版本号的命令,这些信息对于添加正确的软件更新源很有用，而当你只能在命令行下工作的时候，下面的方法可以帮忙。&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;一-查看linux内核版本命令两种方法&quot;&gt;一、查看Linux内核版本命令（两种方法）：&lt;/span&gt;</summary>
      
    
    
    
    <category term="linux" scheme="https://imszz.com/categories/linux/"/>
    
    
    <category term="linux" scheme="https://imszz.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>解决github图片不显示问题</title>
    <link href="https://imszz.com/p/32e6fc54/"/>
    <id>https://imszz.com/p/32e6fc54/</id>
    <published>2021-01-13T16:00:00.000Z</published>
    <updated>2021-01-14T02:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>修改hosts</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Windows</span><br><span class="line"></span><br><span class="line">C:\Windows\System32\drivers\etc\hosts</span><br><span class="line"></span><br><span class="line">Mac</span><br><span class="line"></span><br><span class="line">vim &#x2F;etc&#x2F;hosts</span><br></pre></td></tr></table></figure><p>在文件末尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># GitHub Start </span><br><span class="line">192.30.253.112    Build software better, together </span><br><span class="line">192.30.253.119    gist.github.com</span><br><span class="line">151.101.184.133    assets-cdn.github.com</span><br><span class="line">151.101.184.133    raw.githubusercontent.com</span><br><span class="line">151.101.184.133    gist.githubusercontent.com</span><br><span class="line">151.101.184.133    cloud.githubusercontent.com</span><br><span class="line">151.101.184.133    camo.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars0.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars1.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars2.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars3.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars4.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars5.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars6.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars7.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars8.githubusercontent.com</span><br><span class="line"></span><br><span class="line"># GitHub End</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;修改hosts&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;</summary>
      
    
    
    
    <category term="Github" scheme="https://imszz.com/categories/Github/"/>
    
    
    <category term="Github" scheme="https://imszz.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>GitHub 图床的正确用法，通过 jsDelivr CDN 全球加速</title>
    <link href="https://imszz.com/p/7fa69db0/"/>
    <id>https://imszz.com/p/7fa69db0/</id>
    <published>2021-01-13T12:46:25.000Z</published>
    <updated>2021-01-13T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>创建一个 GitHub 公共仓库作为图床仓库，上传提交图片到仓库中</p><p>在要使用 GitHub 图床图片的地方将链接换为 </p><div class="note primary no-icon"><p><a href="https://cdn.jsdelivr.net/gh/%7Buser%7D/%7Brepo%7D/%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84">https://cdn.jsdelivr.net/gh/{user}/{repo}/图片路径</a></p></div><p>举个栗子</p><p>比如 GitHub 官方仓库 <code>github/explore</code> 下话题 GitHub 图片原始路径是：</p><div class="note default"><p><a href="https://github.com/weilain/cdn-photo/blob/main/banner/bannar.jpg">https://github.com/weilain/cdn-photo/blob/main/banner/bannar.jpg</a></p></div><p>访问起来贼慢。</p><p>使用 jsDelivr 加速后的地址：</p><div class="note success"><p><a href="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/banner/bannar.jpg">https://cdn.jsdelivr.net/gh/weilain/cdn-photo/banner/bannar.jpg</a> </p></div><p>访问速度飞起，享受 <code>jsDelivr</code> 提供的全球 <code>CDN</code> 加速。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/jsdelivr-sdy8y2.png" alt="github--lena"></p><p>hexo 内容 markdown 写法</p><p>文章内引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![github--lena](https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;weilain&#x2F;cdn-photo&#x2F;img&#x2F;3xuci.gif)</span><br></pre></td></tr></table></figure><p>封面引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cover: &#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;weilain&#x2F;cdn-photo&#x2F;covers&#x2F;gitlab2.png&#39;</span><br></pre></td></tr></table></figure><p>jsDelivr 还支持加载指定文件版本和自动压缩 JS，具体用法可以参考<a href="https://www.jsdelivr.com/features?utm_source=ld246.com#gh">官方教程</a>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;创建一个 GitHub 公共仓库作为图床仓库，上传提交图片到仓库中&lt;/p&gt;
&lt;p&gt;在要使用 GitHub 图床图片的地方将链接换为 &lt;/p&gt;
&lt;div class=&quot;note primary no-icon&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://cdn.jsdelivr</summary>
      
    
    
    
    <category term="Github" scheme="https://imszz.com/categories/Github/"/>
    
    
    <category term="jsDelivr" scheme="https://imszz.com/tags/jsDelivr/"/>
    
    <category term="CDN" scheme="https://imszz.com/tags/CDN/"/>
    
  </entry>
  
  <entry>
    <title>google-authenticator</title>
    <link href="https://imszz.com/p/6b915d25/"/>
    <id>https://imszz.com/p/6b915d25/</id>
    <published>2020-11-28T12:46:25.000Z</published>
    <updated>2020-11-29T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>安装方式一：<br>Liunx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install google-authenticator </span><br></pre></td></tr></table></figure><p>ubuntu</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo add-apt-repository universe</span><br><span class="line">sudo apt install libpam-google-authenticator</span><br></pre></td></tr></table></figure><p>安装方式二：<br>Liunx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y git make gcc libtool pam-devel qrencode ntpdate</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;google-authenticator-libpam.git</span><br><span class="line">cd   google-authenticator-libpam&#x2F;</span><br><span class="line">.&#x2F;bootstrap.sh</span><br><span class="line">.&#x2F;configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>ubuntu</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get  -y install autoconf  git make gcc libtool libpam0g-dev qrencode ntpdate</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;google-authenticator-libpam.git</span><br><span class="line">cd   google-authenticator-libpam&#x2F;</span><br><span class="line">.&#x2F;bootstrap.sh</span><br><span class="line">.&#x2F;configure</span><br><span class="line">sudo make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>配置ssh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config    #ubuntu   sudo</span><br></pre></td></tr></table></figure><p>修改如下的配置项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ChallengeResponseAuthentication yes</span><br><span class="line">UsePAM yes</span><br></pre></td></tr></table></figure><p>配置PAM</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;pam.d&#x2F;sshd      #ubuntu   sudo</span><br></pre></td></tr></table></figure><p>Liunx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#%PAM-1.0</span><br><span class="line">auth      required     pam_google_authenticator.so   #添加至第一行</span><br></pre></td></tr></table></figure><p>ubuntu</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth      required      pam_google_authenticator.so       #末尾添加</span><br></pre></td></tr></table></figure><p>重启ssh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd     #ubuntu   sudo</span><br></pre></td></tr></table></figure><p>配置google authenticator<br>首要条件：先切换到你需要设置的帐号 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">google-authenticator</span><br></pre></td></tr></table></figure><pre><code>Do you want authentication tokens to be time-based (y/n)  #基于时间生成身份验证#已经安装qrencode会产生一个二维码，二维码连接也可以URL显示Your new secret key is ：***********   # 密钥keyYour verification code is : #code 动态码Your emergency scratch codes are:  #  生成5 个紧急救助码Do you want me to update your &quot;/root/.google_authenticator&quot; file? (y/n)  #一直确认下去# 生成了一个 .google_authenticator 文件your chances to notice or even prevent man-in-the-middle attacks (y/n)  #一直确认下去Do you want to do so? (y/n)   #一直确认下去Do you want to enable rate-limiting? (y/n)  #设置完成#上面的意思大概为：禁止多次使用相同的身份验证，限制每30秒登录一次，移动端每30秒更新一次，移动端和客户端时间误差30秒，30秒内不能超过3次登录。</code></pre><p>如果需要删除一个用户的Google验证，删除这个用户下产生的<code>home/.google_authenticator</code>文件即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;安装方式一：&lt;br&gt;Liunx&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;</summary>
      
    
    
    
    <category term="奇怪的知识点" scheme="https://imszz.com/categories/%E5%A5%87%E6%80%AA%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="google" scheme="https://imszz.com/tags/google/"/>
    
    <category term="authenticator" scheme="https://imszz.com/tags/authenticator/"/>
    
  </entry>
  
  <entry>
    <title>awk和sed截取nginx和tomcat时间段日志</title>
    <link href="https://imszz.com/p/31397f6f/"/>
    <id>https://imszz.com/p/31397f6f/</id>
    <published>2020-11-25T12:46:25.000Z</published>
    <updated>2020-11-26T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h4><span id="nginx日志截取示例">nginx日志截取示例</span></h4><p>日志路径：/usr/local/nginx/logs, 截取access.log中2019年3月24日17点00~02之间的日志：<br>　写法1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat access.log | awk &#39;$4 &gt;&#x3D;&quot;[24&#x2F;Mar&#x2F;2019:17:00:00&quot; &amp;&amp; $4 &lt;&#x3D;&quot;[24&#x2F;Mar&#x2F;2019:17:02:00&quot;&#39;</span><br></pre></td></tr></table></figure><p>　写法2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat access.log | egrep &quot;24&#x2F;Mar&#x2F;2019&quot; | awk -F&#39;:&#39; &#39;$2 &#x3D; 17 &amp;&amp; $3 &gt;&#x3D; 00 &amp;&amp; $3 &lt;&#x3D; 02&#39;</span><br></pre></td></tr></table></figure><p>　写法3：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat access.log |egrep &quot;24&#x2F;Mar&#x2F;2019&quot; |sed -n &#39;&#x2F;17:00:00&#x2F;,&#x2F;17:02:00&#x2F;p&#39;</span><br></pre></td></tr></table></figure><h4><span id="tomcat日志截取示例">tomcat日志截取示例</span></h4><p>日志路径：/usr/local/tomcat/logs, 截取catalina.out中2019年3月24日17点00~02之间的日志：<br>    写法1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n &#39;&#x2F;2019-03-24 17:00:&#x2F;,&#x2F;2019-03-24 17:02:&#x2F;p&#39;  catalina.out</span><br></pre></td></tr></table></figure><p>  写法2：<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat catalina.out| egrep &quot;2019-03-24&quot; | awk -F&#39;:&#39; &#39;$2 &#x3D; 17 &amp;&amp; $3 &gt;&#x3D; 00 &amp;&amp; $3 &lt;&#x3D; 02&#39;</span><br></pre></td></tr></table></figure></p><h4><span id="awk统计nginx日志的ip访问量">awk统计nginx日志的ip访问量</span></h4><pre><code>nginx日志事先截取一部分：tail -n500 access.log &gt;access.log1</code></pre><p>第一种：使用awk sort，$1表示以空格为分割符的第一列，也就是文件中的ip地址，使用sort对结果排序，uniq -c进行计数，最后sort -n是以“数字”来排序，针对统计后的访问次数来排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &#39;&#123;print $1&#125;&#39; access.log1|sort |uniq -c|sort -n</span><br></pre></td></tr></table></figure><p>第二种：awk for,即数组; 默认变量为0，对每一行的$1作为key，count数组++，实现ip的计数。计数结束后END。然后把结果打印出来，最后sort -n以“数字”排序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &#39;&#123;count[$1]++;&#125;END&#123;for(i in count)&#123;printf(&quot;%s\t%s\n&quot;, count[i], i);&#125;&#125;&#39; access.log1|sort -n</span><br></pre></td></tr></table></figure><h4><span id="取nginx日志访问接口次数">取nginx日志访问接口次数</span></h4><p>通过上面的方法将某个时间段日志取出来，查询该时间段访问接口最多的前10：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"> #统计接口的访问次数</span><br><span class="line"> TODAY&#x3D;&#96;date +%d&#x2F;%b&#x2F;%Y&#96;</span><br><span class="line"> cat $1 |awk -F &#39;&quot;&#39; &#39;&#123;print $2&#125;&#39;|awk &#39;&#123;split($2,res,&quot;?&quot;) ; print res[1] &#125;&#39;|sort|uniq -c|sort -gr |head -n10</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4&gt;&lt;span id=&quot;nginx日志截取示例&quot;&gt;nginx日志截取示例&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;日志路径：/usr/local/nginx/logs, 截取access.log中2019年3月24日17点00~02之间的日志：&lt;br&gt;　写法1：&lt;/p&gt;
&lt;figure </summary>
      
    
    
    
    <category term="Nginx" scheme="https://imszz.com/categories/Nginx/"/>
    
    <category term="linux" scheme="https://imszz.com/categories/Nginx/linux/"/>
    
    
    <category term="awk" scheme="https://imszz.com/tags/awk/"/>
    
    <category term="sed" scheme="https://imszz.com/tags/sed/"/>
    
  </entry>
  
  <entry>
    <title>如何注册谷歌账号，遇到“此电话号码无法用于进行验证”怎么办</title>
    <link href="https://imszz.com/p/4b638dc2/"/>
    <id>https://imszz.com/p/4b638dc2/</id>
    <published>2020-10-25T13:25:23.000Z</published>
    <updated>2020-10-29T13:25:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="第1步找到谷歌账号注册入口">第1步：找到谷歌账号注册入口</span></h1><p>打开Google，在谷歌搜索的主界面，找到右上角的登录账号按钮。我这里浏览器语言是中文的，所以是显示中文，如果是默认英文语言的浏览器，打开就会显示英文，但按钮位置是相同的。<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-1.png" alt="github--lena"></p><p>点击“登录”按钮后，在新跳转的页面点击“创建账号”<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-2.png" alt="github--lena"><br>没有特别需求，点击“为我自己创建”即可。<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-3.png" alt="github--lena"></p><h1><span id="第2步填写谷歌账号申请资料">第2步：填写谷歌账号申请资料</span></h1><p>按提示要求，填写相应的账号资料，填写完成后，点击“下一步”按钮。<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-4.png" alt="github--lena"></p><h1><span id="第3步验证手机号码">第3步：验证手机号码</span></h1><p>为了防止滥用以及保护账号安全，Google账号需要绑定你的手机号码，点击国旗位置，可以切换到不同国家地区。根据自身手机号码所在地区，切换到对应的国家位置，然后填写手机号，进行下一步验证。<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-5.png" alt="github--lena"></p><h1><span id="第4步遇到此电话号码无法用于进行验证该怎么办">第4步：遇到“此电话号码无法用于进行验证”该怎么办</span></h1><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-6.png" alt="github--lena"><br>号码无法验证，就无法完成账号的注册。经过多次测试，我们发现这个问题跟浏览器的语言设置有关系。语言设置为中文的浏览器，就会遇到这个问题。解决的方法也很简单，以谷歌Chrome浏览器为例，我们看下该如何设置。</p><p>首先，打开谷歌浏览器，找到“设置”入口：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-7.png" alt="github--lena"></p><p>然后，在设置界面左侧栏，查看高级功能：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-8.png" alt="github--lena"></p><p>在高级功能中，找到“语言”选项：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-9.png" alt="github--lena"></p><p>点击下拉标签，查看语言设置：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-10.png" alt="github--lena"></p><p>点击“添加语言”：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-11.png" alt="github--lena"></p><p>添加“英语-美国”：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-12.png" alt="github--lena"></p><p>打开中文（简体）语言选项：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-13.png" alt="github--lena"></p><p>删除中文语言：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-14.png" alt="github--lena"></p><p>只留下英文语言：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-15.png" alt="github--lena"></p><p>以上设置完成后，关闭浏览器，然后重新打开，重新申请谷歌账号，你会发现电话号码问题没有了。</p><h1><span id="第5步通过验证码进行账号验证">第5步：通过验证码进行账号验证</span></h1><p>手机接收到验证码后，按要求填入，然后点击“验证”。<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-16.png" alt="github--lena"></p><p>成功验证后，填写账号需求的其他信息：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-17.png" alt="github--lena"></p><p>在其他Google服务中使用号码，直接跳过：<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-18.png" alt="github--lena"></p><h1><span id="第6步同意google账号相关条款">第6步：同意Google账号相关条款</span></h1><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-19.png" alt="github--lena"></p><p>点击“我同意”<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-20.png" alt="github--lena"></p><h1><span id="第7步成功注册谷歌账号">第7步：成功注册谷歌账号</span></h1><p>通过以上步骤，谷歌账号就注册好了，在谷歌搜索界面可以看到账号已经处于登录状态。<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/create-google-account-21.png" alt="github--lena"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;第1步找到谷歌账号注册入口&quot;&gt;第1步：找到谷歌账号注册入口&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;打开Google，在谷歌搜索的主界面，找到右上角的登录账号按钮。我这里浏览器语言是中文的，所以是显示中文，如果是默认英文语言的浏览器，打开就会显示英文，但按钮位置是</summary>
      
    
    
    
    <category term="奇怪的知识点" scheme="https://imszz.com/categories/%E5%A5%87%E6%80%AA%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="google" scheme="https://imszz.com/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>selenium基础-打开百度进行搜索</title>
    <link href="https://imszz.com/p/1f7c743b/"/>
    <id>https://imszz.com/p/1f7c743b/</id>
    <published>2020-10-14T13:25:23.000Z</published>
    <updated>2020-10-15T05:25:23.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>安装Python3</p></li><li><p>安装selenium</p><div class="note warning"><p>注意不同的python版本</p></div></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install selenium</span><br></pre></td></tr></table></figure><ol start="3"><li>下载谷歌驱动ChromeDriver包，放到Python的目录下</li></ol><div class="note success"><p><a href="http://chromedriver.storage.googleapis.com/index.html">http://chromedriver.storage.googleapis.com/index.html</a></p></div><div class="note warning"><p>mac 安装路径解压到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;bin</span><br></pre></td></tr></table></figure><p>windows 解压到与 python.exe 同级</p></div><ol start="4"><li>编写代码，如下<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"># coding: utf-8</span><br><span class="line"></span><br><span class="line">from selenium import webdriver  # 浏览器驱动器</span><br><span class="line">from selenium.webdriver.common.by import By  # 定位器</span><br><span class="line">from selenium.webdriver.common.keys import Keys  # 键盘对象</span><br><span class="line">from selenium.webdriver.support import expected_conditions as EC  # 判断器</span><br><span class="line">from selenium.webdriver.support.wait import WebDriverWait  # 浏览器等待对像</span><br><span class="line">import time</span><br><span class="line"># 创建一个谷歌浏览器对象</span><br><span class="line">browser &#x3D; webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    # 浏览器对象打开百度地址</span><br><span class="line">    browser.get(&quot;https:&#x2F;&#x2F;www.baidu.com&quot;)</span><br><span class="line">    # 查找id为 &#39;kw&#39;的标签，即输入框</span><br><span class="line">    inputs &#x3D; browser.find_element_by_id(&quot;kw&quot;)</span><br><span class="line">    # 在输入框中填入&#39;Python&#39;</span><br><span class="line">    inputs.send_keys(&quot;Python&quot;)</span><br><span class="line">    # &#39;按下&#39;回车键（第一种）</span><br><span class="line">    inputs.send_keys(Keys.ENTER)</span><br><span class="line">    # 点击&#39;百度一下&#39;（第二种）</span><br><span class="line">    # browser.find_element_by_id(&quot;su&quot;).click()</span><br><span class="line">    # 创建一个等待对像，超时时间为10秒，调用的时间间隔为0.5</span><br><span class="line">    wait &#x3D; WebDriverWait(browser, 10, 0.5)</span><br><span class="line">    # 每隔0.5秒检查一次，直到页面元素出现id为&#39;content_left&#39;的标签</span><br><span class="line">    wait.until(EC.presence_of_all_elements_located((By.ID, &quot;content_left&quot;)))</span><br><span class="line">except Exception as e:</span><br><span class="line">    print (e)</span><br><span class="line">else:</span><br><span class="line">    # 打印请求的url</span><br><span class="line">    print (browser.current_url)</span><br><span class="line">    # 打印所有cookies</span><br><span class="line">    print (browser.get_cookies())</span><br><span class="line">finally:</span><br><span class="line">    # 等待10秒</span><br><span class="line">    time.sleep(10)</span><br><span class="line">    # 关闭浏览器对象</span><br><span class="line">    browser.close()</span><br></pre></td></tr></table></figure><div class="note warning"><p>py2与py3 print 语法不同 </p></div></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装Python3&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装selenium&lt;/p&gt;
&lt;div class=&quot;note warning&quot;&gt;&lt;p&gt;注意不同的python版本&lt;/p&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;high</summary>
      
    
    
    
    <category term="python" scheme="https://imszz.com/categories/python/"/>
    
    
    <category term="python" scheme="https://imszz.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>开往下一个世界 — 友链接力</title>
    <link href="https://imszz.com/p/ba1e0fab/"/>
    <id>https://imszz.com/p/ba1e0fab/</id>
    <published>2020-09-01T16:46:25.000Z</published>
    <updated>2020-09-06T13:26:23.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>互联网将人与人之间的距离大大减小，却还是形成了大大小小的孤岛。只有熟人间才知道彼此，而陌生人永远只能是陌生人。</p></div><h2><span id="什么是开往-友链接力">什么是开往 - 友链接力</span></h2><p>互联网经历了一个封闭到开放，现在逐渐又走向封闭的过程。大大小小的孤岛散落在浩瀚烟海，来往就像是一颗颗星球之间的快速列车，随机的跳向下一站。</p><div class="note success"><p>我想在这烟海发现下一颗星…</p></div><p>开往-友链助力是传统友链的增强，我们不必互相知道了解彼此，标准的审查让友好的朋友加入我们，只需要一个徽标，占用一块位置，我们所有人都联系在了一起，简单而又强大。</p><h2><span id="和我一起加入开往">和我一起加入开往</span></h2><p>『开往』取自「开放的网络」。将开往的徽标插入您的网站，表示您支持开放的网络。</p><p>每当有用户访问加入开往的网站时，点击徽标后会随机跳转到另一个加入开往的网站。加入开往的网站越多，友链接力的规模越大，分享的流量也越多。</p><p>“ 网站E → 开往 → 网站X → 开往 → 网站A → 开往 → 网站M → 开往 → 网站P → 开往 → 网站L → 开往 → 网站E … “</p><p>Github 地址：</p><div class="note success"><p><a href="https://github.com/volfclub/travellings">https://github.com/volfclub/travellings</a></p></div><p>这是项目的 Github 地址，在 issue 中提交申请，几日内就会受理。但是申请的网站必须满足几点要求：</p><ol><li>愿为开放的网络做出贡献（如分享知识经验设计等）；</li><li>没有违法以及影响体验的内容（如侵入式广告等）；</li><li>正常更新维护中（国内无法正常访问会被移除）；</li><li>强制启用 https 。</li></ol><p>将徽标插入打开您网页后能直接看到的地方（让友链传递下去），提出 issues 申请收录。这一般在 7 个工作日内完成审核。对于博客等不方便插入徽标的网页，建议在顶部或侧栏导航插入 Travelling 或开往的外链，在网页底部插入徽标。</p><p>参开代码如下，也可以自定义 logo:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;travellings.now.sh&#x2F;&quot; target&#x3D;&quot;blank&quot; title&#x3D;&quot;开往-友链接力&quot;&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;travellings.now.sh&#x2F;assets&#x2F;logo.gif&quot; alt&#x3D;&quot;开往-友链接力&quot; width&#x3D;&quot;120&quot;&gt;&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>愿我们不再孤独。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;互联网将人与人之间的距离大大减小，却还是形成了大大小小的孤岛。只有熟人间才知道彼此，而陌生人永远只能是陌生人。&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;span id=&quot;什么是开往-友链接力&quot;&gt;什么是开往 - 友链接力&lt;/span&gt;&lt;</summary>
      
    
    
    
    <category term="link" scheme="https://imszz.com/categories/link/"/>
    
    
    <category term="link" scheme="https://imszz.com/tags/link/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 升级教程</title>
    <link href="https://imszz.com/p/cb1e6c4f/"/>
    <id>https://imszz.com/p/cb1e6c4f/</id>
    <published>2020-09-01T13:25:23.000Z</published>
    <updated>2020-10-29T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h5><span id="简-述-将电脑的-hexo-v421-升级到-hexo-v511">简 述： 将电脑的 <code>hexo v4.2.1</code> 升级到 <code>hexo v5.1.1</code> 。</span></h5><h3><span id="背景">背景：</span></h3><p><code>hexo clean &amp;&amp; hexo g -s</code> 后，发现会强制将所有文章的文件的修改日期，在文章中显示，很明显，这是不对的。解决方案是：修改 hexo 工作目录下 <code>_config.yml</code> 中修改为 <code>updated_option: &quot;date&quot;</code> ，但是这个变量是只有 hexo v5.0 才支持，而我当前是 v4.2。</p><h5><span id="未升级之前当前配置">未升级之前，当前配置:</span></h5><ul><li>hexo: 4.2.1</li><li>node: 12.18.3</li></ul><h3><span id="升级-hexo">升级 Hexo:</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 使用淘宝源的 cnpm 替换 npm</span><br><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line">cnpm install -g cnpm                 # 升级 npm</span><br><span class="line">cnpm cache clean -f                 # 清除 npm 缓存</span><br><span class="line"></span><br><span class="line">&#x3D;&#x3D;&#x3D;更新 hexo: 进入 blog 目录，执行如下命令&#x3D;&#x3D;&#x3D; </span><br><span class="line"># 更新 package.json 中的 hexo 及个插件版本</span><br><span class="line">cnpm install -g npm-check           # 检查之前安装的插件，都有哪些是可以升级的 </span><br><span class="line">cnpm install -g npm-upgrade         # 升级系统中的插件</span><br><span class="line">npm-check</span><br><span class="line">npm-upgrade</span><br><span class="line"></span><br><span class="line"># 更新 hexo 及所有插件</span><br><span class="line">cnpm update</span><br><span class="line"></span><br><span class="line"># 确认 hexo 已经更新</span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h5><span id="升级之后的版本">升级之后的版本：</span></h5><ul><li>Hexo: 5.1.1</li><li>Node: 12.18.3</li></ul><p>再次正常推送，成功达到预期。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h5&gt;&lt;span id=&quot;简-述-将电脑的-hexo-v421-升级到-hexo-v511&quot;&gt;简 述： 将电脑的 &lt;code&gt;hexo v4.2.1&lt;/code&gt; 升级到 &lt;code&gt;hexo v5.1.1&lt;/code&gt; 。&lt;/span&gt;&lt;/h5&gt;&lt;h3&gt;&lt;span id=&quot;背</summary>
      
    
    
    
    <category term="hexo" scheme="https://imszz.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://imszz.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>修改脚底自定义标签</title>
    <link href="https://imszz.com/p/8cad5570/"/>
    <id>https://imszz.com/p/8cad5570/</id>
    <published>2020-08-31T12:46:25.000Z</published>
    <updated>2020-09-01T13:26:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="创建样式">创建样式</span></h2><p>找到<code>themes/butterfly/source/css/_global/function.styl</code>文件,任意位置添加代码</p><p>样式代码可以自定义添加<br>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*底部信息*&#x2F;</span><br><span class="line"></span><br><span class="line">.github-badge &#123;</span><br><span class="line">    margin-left: 5px;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    border-radius: 4px;</span><br><span class="line">    text-shadow: none;</span><br><span class="line">    color: #fff;</span><br><span class="line">    line-height: 15px;</span><br><span class="line">    background-color: #abbac3;</span><br><span class="line">    margin-bottom: 5px;</span><br><span class="line">    font-size: 12px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.github-badge .badge-subject &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    background-color: #4d4d4d;</span><br><span class="line">    padding: 4px 4px 4px 6px;</span><br><span class="line">    border-top-left-radius: 4px;</span><br><span class="line">    border-bottom-left-radius: 4px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.github-badge .badge-value &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    padding: 4px 6px 4px 4px;</span><br><span class="line">    border-top-right-radius: 4px;</span><br><span class="line">    border-bottom-right-radius: 4px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.github-badge .bg-blue &#123;</span><br><span class="line">    background-color: #007ec6;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.github-badge .bg-brightgreen &#123;</span><br><span class="line">    background-color: #4dc820;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.github-badge .bg-orange &#123;</span><br><span class="line">    background-color: orange;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.github-badge .bg-gradient &#123;</span><br><span class="line">    background: linear-gradient(to right,#3ca5f6,#a86af9);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.github-badge .bg-blueviolet &#123;</span><br><span class="line">    background-color: #8833d7;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="引用">引用</span></h2><p>找到<code>themes/butterfly/layout/includes/footer.pug</code>文件,添加下面代码即可</p><p>引用样式，可以按照格式自定义删减加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">.github-badge</span><br><span class="line">    a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;https:&#x2F;&#x2F;hexo.io&#x2F;&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;由 Hexo 强力驱动&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">      span.badge-subject Powered</span><br><span class="line">      span.badge-value.bg-blue Hexo</span><br><span class="line">  </span><br><span class="line">  .github-badge</span><br><span class="line">    a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;https:&#x2F;&#x2F;coding.net&#x2F;&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;静态网页托管于 GitHub Pages 和 Coding Pages&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">      span.badge-subject Hosted</span><br><span class="line">      span.badge-value.bg-brightgreen Coding</span><br><span class="line">  .github-badge</span><br><span class="line">    a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;https:&#x2F;&#x2F;github.com&#x2F;&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;静态网页托管于 GitHub Pages 和 Coding Pages&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">      span.badge-subject Hosted</span><br><span class="line">      span.badge-value.bg-brightgreen GitHub </span><br><span class="line"></span><br><span class="line">  .github-badge</span><br><span class="line">    a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;https:&#x2F;&#x2F;www.jsdelivr.com&#x2F;&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;jsDelivr 提供 CDN 加速服务&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">      span.badge-subject CDN</span><br><span class="line">      span.badge-value.bg-orange jsDelivr</span><br><span class="line">  .github-badge</span><br><span class="line">    a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;http:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-nc-sa&#x2F;4.0&#x2F;&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;本站点采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">      span.badge-subject</span><br><span class="line">        i.fa.fa-copyright</span><br><span class="line">      span.badge-value.bg-gradient BY-NC-SA 4.0</span><br><span class="line"></span><br><span class="line">  .github-badge</span><br><span class="line">    a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;主题&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">      span.badge-subject Theme</span><br><span class="line">      span.badge-value.bg-blueviolet Butterfly </span><br><span class="line">  </span><br><span class="line">  .github-badge</span><br><span class="line">    a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;http:&#x2F;&#x2F;www.beian.miit.gov.cn&#x2F;&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;备案&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">      span.badge-subject 浙ICP备</span><br><span class="line">      span.badge-value.bg-orange 20027461号</span><br><span class="line">  .github-badge</span><br><span class="line">    span.badge-subject 本站已安全运行</span><br><span class="line">    a(style&#x3D;&#39;text-decoration:none;color:#fff;background:#007ec6;padding: 4px 4px 4px 6px;border-top-right-radius: 4px;border-bottom-right-radius: 4px;width:168px;display: inline-block;&#39;,id&#x3D;&#39;running-time&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;网站运行时间&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">  #running-time</span><br><span class="line">    script.</span><br><span class="line">      setInterval(()&#x3D;&gt;&#123;let create_time&#x3D;Math.round(new Date(&#39;2020-07-20 00:00:00&#39;).getTime()&#x2F;1000);let timestamp&#x3D;Math.round((new Date().getTime()+8*60*60*1000)&#x2F;1000);let second&#x3D;timestamp-create_time;let time&#x3D;new Array(0,0,0,0,0);if(second&gt;&#x3D;365*24*3600)&#123;time[0]&#x3D;parseInt(second&#x2F;(365*24*3600));second%&#x3D;365*24*3600;&#125;if(second&gt;&#x3D;24*3600)&#123;time[1]&#x3D;parseInt(second&#x2F;(24*3600));second%&#x3D;24*3600;&#125;if(second&gt;&#x3D;3600)&#123;time[2]&#x3D;parseInt(second&#x2F;3600);second%&#x3D;3600;&#125;if(second&gt;&#x3D;60)&#123;time[3]&#x3D;parseInt(second&#x2F;60);second%&#x3D;60;&#125;if(second&gt;0)&#123;time[4]&#x3D;second;&#125;currentTimeHtml&#x3D;time[0]+&#39; 年 &#39;+time[1]+&#39;  天  &#39;+time[2]+&#39;  时  &#39;+time[3]+&#39;  分  &#39;+time[4]+&#39;  秒&#39;;document.getElementById(&quot;running-time&quot;).innerHTML&#x3D;currentTimeHtml;&#125;,1000);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;创建样式&quot;&gt;创建样式&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;找到&lt;code&gt;themes/butterfly/source/css/_global/function.styl&lt;/code&gt;文件,任意位置添加代码&lt;/p&gt;
&lt;p&gt;样式代码可以自定义添加&lt;br&gt;示</summary>
      
    
    
    
    <category term="hexo" scheme="https://imszz.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://imszz.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 调度和驱逐</title>
    <link href="https://imszz.com/p/761d0096/"/>
    <id>https://imszz.com/p/761d0096/</id>
    <published>2020-08-25T12:46:25.000Z</published>
    <updated>2020-09-07T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="概念"> 概念</span></h2><p><a href="https://kubernetes.io/zh/docs/concepts/scheduling-eviction/assign-pod-node/">Kubernetes 调度和驱逐 doc</a></p><ul><li>node上所有组件（kubelet/kube-proxy）都是与apiserver通信</li><li>master上两个组件（scheduler/controller-manager）都是与apiserver通信</li><li>apiserver将其他组件通信产生的事件、状态都保存到了与etcd数据库中</li><li>其他组件与apiserver周期性watch事件。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/image-94cf1a9a.png" alt="github--lena"></p><p>图片解释：</p><p><code>kubectl</code>通过读取集群配置文件 <code>~/.kube/config</code> 将请求发给<code>apiserver</code>，之后<code>apiserver</code>将创建pod的属性信息写入到<code>etcd</code>中，<code>etcd</code>会响应一个状态给<code>apiserver</code>，保存<code>etcd</code>成功会在控制台显示<code>pod/&lt;pod名称&gt; created</code>，之后调度组件<code>scheduler</code>上线，负责将新的<code>pod</code>分配到合适的节点上，调度之后，将结果响应给<code>apiserver</code>，<code>apiserver</code>再将结果保存到<code>etcd</code>中，<code>kubelet</code>当发现有个<code>pod</code>被绑定到自己的节点上时，就会调用<code>docker</code>的<code>api</code>去创建容器，容器创建之后，<code>docekr</code>会返回一个状态给<code>kubelet</code>，创建成功之后，<code>kubelet</code>再通知<code>apiserver</code>容器状态，之后<code>apiserver</code>再将状态写入到<code>etcd</code>中，之后就可以使用<code>kubelet get pod</code>去查看<code>pod</code>的状态了</p><blockquote><p>注意：有人会注意到，上图中少了两个组件，分别是node上的kube-proxy和master上的controller-manager,其中kube-proxy主要负责pod的服务发现和负载均衡，在图片中的位置就是介于kubelet与Docker之间,它的很多工作与kubelet是并行完成的，主要负责提供pod对外访问的一种形式。controller-manager组件主要是完成后台的一些任务，例如deployment与daemonset控制器等，而图片中是不涉及到创建控制器的步骤的，故与controller-manager就没什么关系，如果要创建控制器的话，角色位置介于Scheduler与kubelet之间，它负责创建多少个副本，启动多少个副本，滚动更新等更高级的功能。</p></blockquote><blockquote><p>总结：</p></blockquote><blockquote><p><code>kubectl</code> <code>( .kube/config)</code> -&gt; <code>apiserver</code> -&gt; <code>write etcd</code> -&gt; <code>scheduler</code> -&gt; 调度结果响应给<code>apiserver</code> -&gt; <code>kubelet</code> 发现有分配到我的节点<code>pod</code> -&gt; 调用<code>docker api</code>创建容器 -&gt; 通知<code>apiserver</code> 容器状态</p></blockquote><h2><span id="影响pod调度的因素"> 影响Pod调度的因素</span></h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/image-d5fa9f73.png" alt="github--lena"></p><p>参数解释：</p><ul><li>resources：pod占用的硬件资源（资源调度依据）</li><li>schedulerName：默认调度器</li><li>nodeName：Scheduler控制器调度绑定的节点</li><li>nodeSelector：标签选择器</li><li>affinity：节点亲和性</li><li>tolerations：污点容忍</li></ul><blockquote><p>注意：调度器（schedulerName）除了使用自己的一些默认行为和默认策略之外，也会参考其他调度策略的值（主要参考）。</p></blockquote><h2><span id="resources资源限制"> resources：资源限制</span></h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/iimage-9167643a.png" alt="github--lena"></p><p>Pod和Container的资源请求和限制：</p><ul><li><p>spec.containers[ ].resources.limits.cpu</p></li><li><p>spec.containers[ ].resources.limits.memory</p></li><li><p>spec.containers[ ].resources.requests.cpu</p></li><li><p>spec.containers[ ].resources.requests.memory</p></li><li><p>参数解释：</p></li><li><p>requests：资源请求值，部署资源的最小配合，是调度依据，会根据requests的值去判定当前集群中有无节点去满足请求的量</p></li><li><p>limits：资源最大使用</p></li></ul><blockquote><p>requests必须小于limits的值！</p></blockquote><p>扩展：查看当前节点的资源信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe node &lt;node-name&gt;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/image-8b44afcd.png" alt="github--lena"></p><blockquote><p>注意： 若pod没有配置resources值，则pod可以使用宿主机所有资源，并且调度不参考配额</p></blockquote><p>建议：<code>requests</code>与<code>limits</code>不要相差太多</p><h2><span id="nodeselector-nodeaffinity-节点标签和节点亲和"> nodeSelector & nodeAffinity （节点标签和节点亲和）</span></h2><h3><span id="nodeselector"> nodeSelector</span></h3><p><code>nodeSelector</code>：用于将Pod调度到匹配<code>Label</code> 的Node上</p><p>给节点打标签并查看对应节点的标签：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl label nodes &lt;node-name&gt; key&#x3D;value</span><br><span class="line">kubectl get nodes &lt;node-name&gt; --show-labels</span><br></pre></td></tr></table></figure><blockquote><p>应用场景：适用于多节点，且不同节点配置不一，功能不一的情况。</p></blockquote><p>yaml示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: pod-example</span><br><span class="line">spec:</span><br><span class="line">  nodeSelector:</span><br><span class="line">    disktype: ssd</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: nginx:1.15</span><br></pre></td></tr></table></figure><blockquote><p>注意：若没有匹配到任何标签，则pod会显示pending状态，节点都不可用</p></blockquote><h3><span id="nodeaffinity"> nodeAffinity</span></h3><p><code>nodeAffinity</code>：节点亲和性，类似于<code>nodeSelector</code>，可以根据节点上的标签来约束Pod可以调度到哪些节点。</p><p>相比<code>nodeSelector</code>：</p><ul><li>匹配有更多的逻辑组合，不只是字符串的完全相等(nodeSelector是绝对相等的匹配)</li><li>调度分为软策略和硬策略，而不是硬性要求<br>a.硬（required）：必须满足<br>b.软（preferred）：尝试满足，但不保证</li></ul><p>操作符：<code>In</code>、<code>NotIn</code>、<code>Exists</code>、<code>oesNotExist</code>、<code>Gt</code>、<code>Lt</code></p><p>yaml示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: with-node-affinity</span><br><span class="line">spec:</span><br><span class="line">  affinity:</span><br><span class="line">    nodeAffinity:</span><br><span class="line">      requiredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">        nodeSelectorTerms:</span><br><span class="line">        - matchExpressions:</span><br><span class="line">          - key: kubernetes.io&#x2F;e2e-az-name</span><br><span class="line">            operator: In</span><br><span class="line">            values:</span><br><span class="line">            - e2e-az1</span><br><span class="line">            - e2e-az2</span><br><span class="line">      preferredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">      - weight: 1</span><br><span class="line">        preference:</span><br><span class="line">          matchExpressions:</span><br><span class="line">          - key: another-node-label-key</span><br><span class="line">            operator: In</span><br><span class="line">            values:</span><br><span class="line">            - another-node-label-value</span><br><span class="line">  containers:</span><br><span class="line">  - name: with-node-affinity</span><br><span class="line">    image: k8s.gcr.io&#x2F;pause:2.0</span><br></pre></td></tr></table></figure><p>参数解释：</p><ul><li>requiredDuringSchedulingIgnoredDuringExecution：硬策略，节点必须满足的条件</li><li>operator：操作符</li><li>preferredDuringSchedulingIgnoredDuringExecution：软策略，尝试满足，不是必须满足的条件</li><li>weight：权重值，范围1-100，值越大，权重越大，pod调度到对应标签的节点概率越高</li></ul><blockquote><p>注意：若硬限制（requiredDuringSchedulingIgnoredDuringExecution）没有匹配到任何标签，则pod会显示pending状态，节点都不可用，当打完标签之后，pending会变为running状态</p></blockquote><blockquote><p>补充：<br>节点亲和性：希望调度到指定标签的节点上；<br>反亲和性：不希望调度到指定标签的节点上，如使用NotIn ，DoesNotExist等</p></blockquote><h3><span id="podaffinity-podantiaffinity-pod-间亲和与反亲和"> podAffinity && podAntiAffinity （pod 间亲和与反亲和）</span></h3><p>pod 间亲和与反亲和使你可以基于已经在节点上运行的 pod 的标签来约束 pod 可以调度到的节点，而不是基于节点上的标签。规则的格式为“如果 X 节点上已经运行了一个或多个 满足规则 Y 的pod，则这个 pod 应该（或者在非亲和的情况下不应该）运行在 X 节点”。Y 表示一个具有可选的关联命令空间列表的 LabelSelector；与节点不同，因为 pod 是命名空间限定的（因此 pod 上的标签也是命名空间限定的），因此作用于 pod 标签的标签选择器必须指定选择器应用在哪个命名空间。从概念上讲，X 是一个拓扑域，如节点，机架，云供应商地区，云供应商区域等。你可以使用 <code>topologyKey</code> 来表示它，</p><blockquote><p>说明：<br>Pod 间亲和与反亲和需要大量的处理，这可能会显著减慢大规模集群中的调度。我们不建议在超过数百个节点的集群中使用它们</p></blockquote><p><code>topologyKey</code> 是节点标签的键以便系统用来表示这样的拓扑域。</p><ul><li><code>kubernetes.io/hostname</code></li><li><code>failure-domain.beta.kubernetes.io/zone</code></li><li><code>failure-domain.beta.kubernetes.io/region</code></li><li><code>topology.kubernetes.io/zone</code></li><li><code>topology.kubernetes.io/region</code></li><li><code>beta.kubernetes.io/instance-type</code></li><li><code>node.kubernetes.io/instance-type</code></li><li><code>kubernetes.io/os</code></li><li><code>kubernetes.io/arch</code></li></ul><blockquote><p>说明：<br>这些标签的值是特定于云供应商的，因此不能保证可靠。例如，<code>kubernetes.io/hostname</code> 的值在某些环境中可能与节点名称相同，但在其他环境中可能是一个不同的值。</p></blockquote><p>与节点亲和一样，当前有两种类型的 pod 亲和与反亲和，即 <code>requiredDuringSchedulingIgnoredDuringExecution</code> 和 <code>preferredDuringSchedulingIgnoredDuringExecution</code>，分表表示“硬性”与“软性”要求。请参阅前面节点亲和部分中的描述。<code>requiredDuringSchedulingIgnoredDuringExecution</code> 亲和的一个示例是“将服务 A 和服务 B 的 pod 放置在同一区域，因为它们之间进行大量交流”，而 <code>preferredDuringSchedulingIgnoredDuringExecution</code> 反亲和的示例将是“将此服务的 pod 跨区域分布”（硬性要求是说不通的，因为你可能拥有的 pod 数多于区域数）。</p><p>Pod 间亲和通过 PodSpec 中 <code>affinity</code> 字段下的 <code>podAffinity</code> 字段进行指定。而 pod 间反亲和通过 PodSpec 中 <code>affinity</code> 字段下的 <code>podAntiAffinity</code> 字段进行指定</p><p>Pod 使用 pod 亲和 的示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: with-pod-affinity</span><br><span class="line">spec:</span><br><span class="line">  affinity:</span><br><span class="line">    podAffinity:</span><br><span class="line">      requiredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">      - labelSelector:</span><br><span class="line">          matchExpressions:</span><br><span class="line">          - key: security</span><br><span class="line">            operator: In</span><br><span class="line">            values:</span><br><span class="line">            - S1</span><br><span class="line">        topologyKey: failure-domain.beta.kubernetes.io&#x2F;zone</span><br><span class="line">    podAntiAffinity:</span><br><span class="line">      preferredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">      - weight: 100</span><br><span class="line">        podAffinityTerm:</span><br><span class="line">          labelSelector:</span><br><span class="line">            matchExpressions:</span><br><span class="line">            - key: security</span><br><span class="line">              operator: In</span><br><span class="line">              values:</span><br><span class="line">              - S2</span><br><span class="line">          topologyKey: failure-domain.beta.kubernetes.io&#x2F;zone</span><br><span class="line">  containers:</span><br><span class="line">  - name: with-pod-affinity</span><br><span class="line">    image: k8s.gcr.io&#x2F;pause:2.0</span><br></pre></td></tr></table></figure><p>在这个 pod 的 affinity 配置定义了一条 pod 亲和规则和一条 pod 反亲和规则。在此示例中，<code>podAffinity</code> 配置为 <code>requiredDuringSchedulingIgnoredDuringExecution</code>，然而 <code>podAntiAffinity</code> 配置为 <code>preferredDuringSchedulingIgnoredDuringExecution</code>。pod 亲和规则表示，仅当节点和至少一个已运行且有键为“security”且值为“S1”的标签的 pod 处于同一区域时，才可以将该 pod 调度到节点上。（更确切的说，如果节点 N 具有带有键 <code>failure-domain.beta.kubernetes.io/zone</code> 和某个值 V 的标签，则 pod 有资格在节点 N 上运行，以便集群中至少有一个节点具有键 <code>failure-domain.beta.kubernetes.io/zone</code> 和值为 V 的节点正在运行具有键“security”和值“S1”的标签的 pod。）pod 反亲和规则表示，如果节点已经运行了一个具有键“security”和值“S2”的标签的 pod，则该 pod 不希望将其调度到该节点上。（如果 <code>topologyKey</code> 为 <code>failure-domain.beta.kubernetes.io/zone</code>，则意味着当节点和具有键“security”和值“S2”的标签的 pod 处于相同的区域，pod 不能被调度到该节点上。）</p><p>Pod 亲和与反亲和的合法操作符有 <code>In</code>，<code>NotIn</code>，<code>Exists</code>，<code>DoesNotExist</code>。</p><p>原则上，<code>topologyKey</code> 可以是任何合法的标签键。然而，出于性能和安全原因，topologyKey 受到一些限制：</p><ol><li>对于亲和与 <code>requiredDuringSchedulingIgnoredDuringExecution</code> 要求的 pod 反亲和，<code>topologyKey</code> 不允许为空。</li><li>对于 <code>requiredDuringSchedulingIgnoredDuringExecution</code> 要求的 pod 反亲和，准入控制器 <code>LimitPodHardAntiAffinityTopology</code> 被引入来限制 <code>topologyKey</code> 不为 <code>kubernetes.io/hostname</code>。如果你想使它可用于自定义拓扑结构，你必须修改准入控制器或者禁用它。</li><li>对于 <code>preferredDuringSchedulingIgnoredDuringExecution</code> 要求的 pod 反亲和，空的 <code>topologyKey</code> 被解释为“所有拓扑结构”（这里的“所有拓扑结构”限制为 <code>kubernetes.io/hostname</code>，<code>failure-domain.beta.kubernetes.io/zone</code> 和 <code>failure-domain.beta.kubernetes.io/region</code> 的组合）。</li><li>除上述情况外，<code>topologyKey </code>可以是任何合法的标签键。</li></ol><p>除了 <code>labelSelector</code> 和 <code>topologyKey</code>，你也可以指定表示命名空间的 <code>namespaces</code> 队列，<code>labelSelector</code> 也应该匹配它（这个与 <code>labelSelector</code> 和 <code>topologyKey</code> 的定义位于相同的级别）。如果忽略或者为空，则默认为 pod 亲和/反亲和的定义所在的命名空间。</p><p>所有与 <code>requiredDuringSchedulingIgnoredDuringExecution</code> 亲和与反亲和关联的 <code>matchExpressions</code> 必须满足，才能将 pod 调度到节点上。</p><p>阿里云nginx-ingress示例</p><p>分布nginx-ingress到每个节点 只是部分内容请勿直接使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">spec:</span><br><span class="line">  progressDeadlineSeconds: 600</span><br><span class="line">  replicas: 3</span><br><span class="line">  revisionHistoryLimit: 10</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: ingress-nginx</span><br><span class="line">  strategy:</span><br><span class="line">    rollingUpdate:</span><br><span class="line">      maxSurge: 25%</span><br><span class="line">      maxUnavailable: 25%</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      annotations:</span><br><span class="line">        prometheus.io&#x2F;port: &#39;10254&#39;</span><br><span class="line">        prometheus.io&#x2F;scrape: &#39;true&#39;</span><br><span class="line">        redeploy-timestamp: &#39;1597647322549&#39;</span><br><span class="line">      labels:</span><br><span class="line">        app: ingress-nginx</span><br><span class="line">    spec:</span><br><span class="line">      affinity:</span><br><span class="line">        nodeAffinity:</span><br><span class="line">          requiredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">            nodeSelectorTerms:</span><br><span class="line">              - matchExpressions:</span><br><span class="line">                  - key: type</span><br><span class="line">                    operator: NotIn</span><br><span class="line">                    values:</span><br><span class="line">                      - virtual-kubelet</span><br><span class="line">        podAntiAffinity:</span><br><span class="line">          preferredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">            - podAffinityTerm:</span><br><span class="line">                labelSelector:</span><br><span class="line">                  matchExpressions:</span><br><span class="line">                    - key: app</span><br><span class="line">                      operator: In</span><br><span class="line">                      values:</span><br><span class="line">                        - ingress-nginx</span><br><span class="line">                topologyKey: kubernetes.io&#x2F;hostname</span><br><span class="line">              weight: 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      nodeSelector:</span><br><span class="line">        beta.kubernetes.io&#x2F;os: linux</span><br></pre></td></tr></table></figure><h3><span id="taint污点"> Taint（污点）</span></h3><p><code>Taints</code>：避免Pod调度到特定Node上</p><p>与<code>nodeSelector</code> &amp; <code>nodeAffinity</code>区别：</p><ul><li><code>nodeSelector</code> &amp; <code>nodeAffinity</code>：将pod分配到某些节点。pod属性</li><li><code>Taints</code>：节点不允许分配pod。节点属性</li></ul><p>应用场景：</p><ul><li>专用节点</li><li>配备了特殊硬件的节点</li><li>基于Taint的驱逐</li></ul><p>查看节点污点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe node &lt;node-name&gt; | grep Taint</span><br></pre></td></tr></table></figure><p>设置污点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint node &lt;node-name&gt; key&#x3D;value:&lt;effect&gt;</span><br></pre></td></tr></table></figure><p>给节点 <code>&lt;node-name&gt;</code> 增加一个污点，它的键名是 <code>key</code>，键值是 <code>value</code>，效果是 <code>NoSchedule</code>。 这表示只有拥有和这个污点相匹配的容忍度的 Pod 才能够被分配到 <code>&lt;node-name&gt;</code> 这个节点</p><p>其中<code>&lt;effect&gt;</code> 可取值：</p><ul><li>NoSchedule ：一定不能被调度（已经调度的不会被驱逐）。</li><li>PreferNoSchedule：尽量不要调度（软性）。</li><li>NoExecute：不仅不会调度，还会驱逐Node上已有的Pod（若pod为设置污点容忍）。</li></ul><p>去掉污点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint node &lt;node-name&gt; key:&lt;effect&gt;-</span><br></pre></td></tr></table></figure><h3><span id="tolerations污点容忍"> Tolerations（污点容忍）</span></h3><p><code>Tolerations</code>：允许Pod调度到有特定Taints的Node上</p><p>yaml示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: pod-taints</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: pod-taints</span><br><span class="line">    image: busybox:latest</span><br><span class="line">  tolerations:</span><br><span class="line">  - key: &quot;key&quot;</span><br><span class="line">    operator: &quot;Equal&quot;</span><br><span class="line">    value: &quot;value&quot;</span><br><span class="line">    effect: &quot;NoSchedule&quot;</span><br></pre></td></tr></table></figure><p><code>operator</code> 的默认值是 <code>Equal</code>。</p><p>一个容忍度和一个污点相“匹配”是指它们有一样的键名和效果，并且：</p><ul><li>如果 <code>operator</code> 是 <code>Exists</code> （此时容忍度不能指定 <code>value</code>），或者</li><li>如果<code> operator</code> 是 <code>Equal</code> ，则它们的 <code>value</code> 应该相等</li></ul><p>node根据状态也会自动打一些污点：</p><ul><li><code>node.kubernetes.io/not-ready</code>：节点未准备好。这相当于节点状态 Ready 的值为 “False”。</li><li><code>node.kubernetes.io/unreachable</code>：节点控制器访问不到节点. 这相当于节点状态 Ready 的值为 “Unknown”。</li><li><code>node.kubernetes.io/out-of-disk</code>：节点磁盘耗尽。</li><li><code>node.kubernetes.io/memory-pressure</code>：节点存在内存压力。</li><li><code>node.kubernetes.io/disk-pressure</code>：节点存在磁盘压力。</li><li><code>node.kubernetes.io/network-unavailable</code>：节点网络不可用。</li><li><code>node.kubernetes.io/unschedulable</code>: 节点不可调度。</li><li><code>node.cloudprovider.kubernetes.io/uninitialized</code>：如果 kubelet 启动时指定了一个 “外部” 云平台驱动， 它将给当前节点添加一个污点将其标志为不可用。在 cloud-controller-manager 的一个控制器初始化这个节点后，kubelet 将删除这个污点。</li></ul><blockquote><p>容忍污点：不是强制性分配到具有污点的节点上，配置了容忍污点，在调度时忽略节点污点</p></blockquote><h3><span id="nodename"> nodeName</span></h3><p><code>nodeName</code>：用于将Pod调度到指定的Node上，不经过调度器（<code>default-scheduler</code>）</p><p>应用场景：</p><ul><li>调度组件故障，希望临时救急</li></ul><p>yaml示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: pod-example</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">spec:</span><br><span class="line">  nodeName: k8s-node2</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: nginx:1.15</span><br></pre></td></tr></table></figure><h3><span id="daemonset守护进程集"> DaemonSet（守护进程集）</span></h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/weilain/cdn-photo/img/image-88e599f6.png" alt="github--lena"></p><p><code>DaemonSet</code>功能：</p><ul><li>在每一个Node上运行一个Pod</li><li>新加入的Node也同样会自动运行一个Pod</li></ul><p>应用场景：</p><ul><li>网络插件</li><li>Agent（zabbix-agent监控）</li><li>日志采集（filebeat）</li><li>C/S架构软件</li><li>必要的分发服务例如 nginx-ingress</li></ul><p>yaml示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: DaemonSet</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: web</span><br><span class="line">  name: filebeat</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: web</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: web</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: nginx</span><br><span class="line">        name: nginx</span><br><span class="line">        resources: &#123;&#125;</span><br></pre></td></tr></table></figure><p>通过<code>kubectl get pod</code>可以发现<code>filebeat</code>在每个node上都部署了一个：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master k8s]# kubectl get pod -o wide</span><br><span class="line">NAME                         READY   STATUS             RESTARTS   AGE     IP               NODE        NOMINATED NODE   READINESS GATES</span><br><span class="line">filebeat-9kc9d               1&#x2F;1     Running            0          8s      10.244.36.118    k8s-node1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">filebeat-wsbxb               1&#x2F;1     Running            0          8s      10.244.169.183   k8s-node2   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure><p>查看daemonset：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master k8s]# kubectl get ds</span><br><span class="line">NAME       DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE</span><br><span class="line">filebeat   2         2         2       2            2           &lt;none&gt;          3m2s</span><br></pre></td></tr></table></figure><h2><span id="调度失败原因分析"> 调度失败原因分析</span></h2><p>查看调度结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod &lt;NAME&gt; -o wide</span><br></pre></td></tr></table></figure><p>查看调度失败原因：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe pod &lt;NAME&gt;</span><br></pre></td></tr></table></figure><p>错误解析：</p><ul><li>没有匹配到标签的提示信息：<br>0/3 nodes are available: 3 node(s) didn’t match node selector.</li><li>没有足够的cpu资源分配：<br>0/3 nodes are available: 3 Insufficient cpu.</li><li>3个节点有污点，没有配置污点容忍:<br>0/3 nodes are available: 3 node(s) had taints that the pod didn’t tolerate.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;概念&quot;&gt; 概念&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://kubernetes.io/zh/docs/concepts/scheduling-eviction/assign-pod-node/&quot;&gt;Kubernetes 调度和驱逐</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://imszz.com/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://imszz.com/tags/Kubernetes/"/>
    
    <category term="nodeSelector" scheme="https://imszz.com/tags/nodeSelector/"/>
    
    <category term="nodeAffinity" scheme="https://imszz.com/tags/nodeAffinity/"/>
    
    <category term="podAntiAffinity" scheme="https://imszz.com/tags/podAntiAffinity/"/>
    
    <category term="podAffinity" scheme="https://imszz.com/tags/podAffinity/"/>
    
    <category term="nodeName" scheme="https://imszz.com/tags/nodeName/"/>
    
  </entry>
  
  <entry>
    <title>查询DNS的记录 查看域名解析是否正常</title>
    <link href="https://imszz.com/p/3d65889c/"/>
    <id>https://imszz.com/p/3d65889c/</id>
    <published>2020-08-23T13:25:23.000Z</published>
    <updated>2020-09-07T05:25:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>#nslookup命令用于查询DNS的记录，查看域名解析是否正常，在网络故障的时候用来诊断网络问题。</p><h4><span id="直接查询">直接查询</span></h4><p>查询一个域名的A记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup domain [dns-server]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nslookup www.google.com 8.8.8.8</span><br><span class="line">Server:8.8.8.8</span><br><span class="line">Address:8.8.8.8#53</span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">Name:www.google.com</span><br><span class="line">Address: 172.217.5.196</span><br></pre></td></tr></table></figure><h4><span id="查询其他记录">查询其他记录</span></h4><p>指定参数，查询其他记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup -qt&#x3D;type domain [dns-server]</span><br></pre></td></tr></table></figure><p>其中，type可以是以下这些类型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">A 地址记录</span><br><span class="line">AAAA 地址记录</span><br><span class="line">AFSDB Andrew文件系统数据库服务器记录</span><br><span class="line">ATMA ATM地址记录</span><br><span class="line">CNAME 别名记录</span><br><span class="line">HINFO 硬件配置记录，包括CPU、操作系统信息</span><br><span class="line">ISDN 域名对应的ISDN号码</span><br><span class="line">MB 存放指定邮箱的服务器</span><br><span class="line">MG 邮件组记录</span><br><span class="line">MINFO 邮件组和邮箱的信息记录</span><br><span class="line">MR 改名的邮箱记录</span><br><span class="line">MX 邮件服务器记录</span><br><span class="line">NS 名字服务器记录</span><br><span class="line">PTR 反向记录</span><br><span class="line">RP 负责人记录</span><br><span class="line">RT 路由穿透记录</span><br><span class="line">SRV TCP服务器信息记录</span><br><span class="line">TXT 域名对应的文本信息</span><br><span class="line">X25 域名对应的X.25地址记录</span><br></pre></td></tr></table></figure><h4><span id="查询更具体的信息">查询更具体的信息</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup –d [其他参数] domain [dns-server]</span><br></pre></td></tr></table></figure><p>只要在查询的时候，加上-d参数，即可查询域名的缓存。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#nslookup命令用于查询DNS的记录，查看域名解析是否正常，在网络故障的时候用来诊断网络问题。&lt;/p&gt;
&lt;h4&gt;&lt;span id=&quot;直接查询&quot;&gt;直接查询&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;查询一个域名的A记录&lt;/p&gt;
&lt;figure class=&quot;highlight pla</summary>
      
    
    
    
    <category term="tools" scheme="https://imszz.com/categories/tools/"/>
    
    
    <category term="nslookup" scheme="https://imszz.com/tags/nslookup/"/>
    
  </entry>
  
  <entry>
    <title>软著统计代码行数</title>
    <link href="https://imszz.com/p/c2e90d73/"/>
    <id>https://imszz.com/p/c2e90d73/</id>
    <published>2020-08-16T16:46:25.000Z</published>
    <updated>2020-08-17T13:25:23.000Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="请统计代码行数">请统计代码行数</span></h3><h4><span id="统计代码行数">统计代码行数</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find mall-imeihao-h5      \( -name &#39;*.js&#39; -o -name &#39;*.json&#39; -o -name &#39;*.wxss&#39; -o -name &#39;*.wxml&#39; \) | xargs cat |grep -v ^$| wc -l</span><br></pre></td></tr></table></figure><ul><li>.wxml .wxss .json .js 为源码文件扩展名，根据需求替换</li></ul><h4><span id="需要排除的目录">需要排除的目录</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find  mall-imeihao \</span><br><span class="line">\( -path .&#x2F;web -o -path .&#x2F;runtime -o -path .&#x2F;config \) -prune -o \</span><br><span class="line">\( -name &quot;*.php&quot; -o -name &quot;*.js&quot; -o -name &quot;*.css&quot; -o -name &quot;*.scss&quot; \) \</span><br><span class="line">|  xargs cat |grep -v ^$| wc -l</span><br></pre></td></tr></table></figure><ul><li>web runtime config 为需要排除的目录</li></ul><h3><span id="导入文档">导入文档</span></h3><h4><span id="导入文档格式">导入文档格式</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find mall-imeihao-reception  \( -name &#39;*.py&#39;  \) | xargs cat |grep -v ^$| &gt; mall-imeihao-reception.docx</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;请统计代码行数&quot;&gt;请统计代码行数&lt;/span&gt;&lt;/h3&gt;&lt;h4&gt;&lt;span id=&quot;统计代码行数&quot;&gt;统计代码行数&lt;/span&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt</summary>
      
    
    
    
    <category term="script" scheme="https://imszz.com/categories/script/"/>
    
    
    <category term="shell" scheme="https://imszz.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>HTTrack - 克隆任意网站</title>
    <link href="https://imszz.com/p/8a11f10a/"/>
    <id>https://imszz.com/p/8a11f10a/</id>
    <published>2020-08-15T12:46:25.000Z</published>
    <updated>2020-08-16T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>HTTrack可以克隆指定网站－把整个网站下载到本地。</p><p>可以用在离线浏览上，也可以用来收集信息（甚至有网站使用隐藏的密码文件）。</p><p>一些仿真度极高的伪网站（为了骗取用户密码），也是使用类似工具做的。<br>Linux默认安装了HTTrack. 如没有可以自行下载安装。<br>Liunx 安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum provides httrack</span><br><span class="line">yum install httrack</span><br></pre></td></tr></table></figure><p>MacOS zsh:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install httrack</span><br></pre></td></tr></table></figure><p>HTTrack帮助：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httrack --help</span><br></pre></td></tr></table></figure><p>使用示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httrack https:&#x2F;&#x2F;imszz.com&#x2F;navi -O &#x2F;tmp</span><br></pre></td></tr></table></figure><p>上面命令克隆了网站路径下所有内容，不带路径克隆所有内容</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;HTTrack可以克隆指定网站－把整个网站下载到本地。&lt;/p&gt;
&lt;p&gt;可以用在离线浏览上，也可以用来收集信息（甚至有网站使用隐藏的密码文件）。&lt;/p&gt;
&lt;p&gt;一些仿真度极高的伪网站（为了骗取用户密码），也是使用类似工具做的。&lt;br&gt;Linux默认安装了HTTrack. 如没</summary>
      
    
    
    
    <category term="tools" scheme="https://imszz.com/categories/tools/"/>
    
    
    <category term="HTTrack" scheme="https://imszz.com/tags/HTTrack/"/>
    
  </entry>
  
  <entry>
    <title>hexo修剪地址栏</title>
    <link href="https://imszz.com/p/292fbf59/"/>
    <id>https://imszz.com/p/292fbf59/</id>
    <published>2020-08-15T12:46:25.000Z</published>
    <updated>2020-08-16T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="前言">前言</span></h3><p>hexo文章链接默认的生成规则是：<code>:year/:month/:day/:title</code>是按照年、月、日、标题来生成的</p><p>比如默认生成：<code>https://imszz.com/2020/07/21/hello-world/</code></p><p>非常不利于阅读,中文也可能出现乱码,也影响收录。</p><p>一种解决方案是：使用<code>hexo-permalink-pinyin</code>插件，将中文转英文，好像是有缺陷</p><p>另一种方案: 使用 <code>hexo-abbrlink</code> 插件, 生成短链，且链接不会因为更新次数过多出现改动</p><h3><span id="安装插件">安装插件</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><h3><span id="配置">配置</span></h3><p>修改根目录站点配置文件<code>config.yml</code>，改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;  # 注释或者删除</span><br><span class="line">permalink: p&#x2F;:abbrlink&#x2F;  # 此处可以自己设置，也可以直接使用 :&#x2F;abbrlink ，建议前面带目录，不然太乱</span><br><span class="line">abbrlink:</span><br><span class="line">    alg: crc32  #算法： crc16(default) and crc32</span><br><span class="line">    rep: hex  #进制： dec(default) and hex</span><br></pre></td></tr></table></figure><p>生成的链接将会是这样的(官方样例)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">crc16 &amp; hex</span><br><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;p&#x2F;66c8.html</span><br><span class="line"></span><br><span class="line">crc16 &amp; dec</span><br><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;p&#x2F;65535.html</span><br><span class="line">crc32 &amp; hex</span><br><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;p&#x2F;8ddf18fb.html</span><br><span class="line"></span><br><span class="line">crc32 &amp; dec</span><br><span class="line">https:&#x2F;&#x2F;post.zz173.com&#x2F;p&#x2F;1690090958.html</span><br></pre></td></tr></table></figure><h3><span id="使用">使用</span></h3><p>在文章的 <code>Front-matter</code> 内会增加<code>abbrlink</code> 字段，值为生成的ID 。这个字段确保了在我们修改了<code>Front-matter</code> 内的博客标题<code>title</code>或创建日期<code>date</code>字段之后而不会改变链接地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">categories:</span><br><span class="line"> -</span><br><span class="line">tags:</span><br><span class="line">-</span><br><span class="line">abbrlink:  #留空就好，会自动生成，并不会因下次更新文章而变动</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;hexo文章链接默认的生成规则是：&lt;code&gt;:year/:month/:day/:title&lt;/code&gt;是按照年、月、日、标题来生成的&lt;/p&gt;
&lt;p&gt;比如默认生成：&lt;code&gt;https://imszz.c</summary>
      
    
    
    
    <category term="hexo" scheme="https://imszz.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://imszz.com/tags/hexo/"/>
    
    <category term="abbrlink" scheme="https://imszz.com/tags/abbrlink/"/>
    
  </entry>
  
  <entry>
    <title>hexo 添加自定义单静态页面 跳过hexo渲染</title>
    <link href="https://imszz.com/p/6ea05e36/"/>
    <id>https://imszz.com/p/6ea05e36/</id>
    <published>2020-08-13T12:46:25.000Z</published>
    <updated>2020-09-07T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>Hexo默认会对<code>/source/</code>里的所有页面应用主题模板渲染，但有一些前端作品或demo页我们不希望经过渲染，而是能保持完全自定义的样子</p><p>例如：</p><ol><li>主题内渲染，添加的模块仍在主题内，主题头部信息依然存在，仅仅是在特定区域进行渲染（适合添加 about 页面）</li><li>完全页面渲染，在主题内点击对应链接跳转到一个完全崭新的页面（我需要的）</li></ol><h3><span id="hexo-的执行逻辑">hexo 的执行逻辑</span></h3><p>source 文件夹下存放了待被转化的 markdown 文件，在执行<code>hexo g</code>命令时，source 目录下的文件将被转化为 html 文件。</p><h2><span id="介绍两种方法">介绍两种方法：</span></h2><h3><span id="使用hexo提供的跳过渲染配置适用于整个目录的设置">使用Hexo提供的跳过渲染配置，适用于整个目录的设置。</span></h3><p>具体步骤，打开博客根目录<code>_config.yml</code>，找到其中<code>skip_render</code>项，这个项目用来配置<code>/source/</code>中需要跳过渲染的文件或目录，</p><p>例如希望跳过<code>/source/navi/</code>里的所有文件渲染（这样我们就可以将自己的作品放在这个文件夹中，然后可以通过自己的网址/navi/…访问了)</p><p>可以配置为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip_render: navi&#x2F;**</span><br></pre></td></tr></table></figure><ul><li><code>source/navi/</code>目录下添加「工具盒」源文件</li><li>在站点配置文件<code>_config.yml</code>中配置<code>skin_render</code>项，如：<code>skip_render: navi/**</code>，这样projects文件夹下的所以文件内容将不会转化为 html，直接被 copy 到 public 文件夹</li><li>在「工具盒」文件夹下添加 index.html 文件用于渲染自定义页面</li></ul><p>完成以上步骤即可点击「工具盒」菜单导航，完成自定义页面的展示。</p><p>修改了配置但生成出来的内容不一定及时应用了新配置，最好在生成之前执行一下<code>hexo clean</code>命令，清除掉旧的生成文件和缓存。</p><h3><span id="给单个文件添加不应用模板的标记适用于个别特殊文件的处理"> 给单个文件添加不应用模板的标记，适用于个别特殊文件的处理。</span></h3><p>例如我们要使 <code>about</code> 页面跳过渲染，创建 <code>/source/about/index.md</code>，将这个页面的相关 HTML 代码写进<code>.md</code>文件并保存，然后在 <code>index.md</code> 的头部写入：，</p><p>避免渲染的办法就是在文件头部<code>Front-matter </code>里添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: false</span><br><span class="line">---</span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line">xxxxxxxxxxxxx</span><br><span class="line">xx HTML代码 xx</span><br><span class="line">xxxxxxxxxxxxx</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>PS：<code>Front-matter</code> 是 <code>.md</code> 文件最上方以 — 分隔的区域，用于指定个别文件的变量，官方文档：<a href="https://hexo.io/docs/front-matter">https://hexo.io/docs/front-matter</a><br><code>.md</code>文件中的 HTML 代码要用 <code>` 和 `</code> 包起来，使其能正确编译里面的代码　　</p></blockquote><p>这样，这个文件就不会经过模板渲染，最终发布到<code>/public/</code>里的文件就是去掉标记后的文件的样子。</p><p>但是这种未尝试！ 推荐第一种</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;Hexo默认会对&lt;code&gt;/source/&lt;/code&gt;里的所有页面应用主题模板渲染，但有一些前端作品或demo页我们不希望经过渲染，而是能保持完全自定义的样子&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ol&gt;
&lt;</summary>
      
    
    
    
    <category term="hexo" scheme="https://imszz.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://imszz.com/tags/hexo/"/>
    
  </entry>
  
</feed>
